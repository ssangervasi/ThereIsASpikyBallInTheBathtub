{"firstLayout":"","gdVersion":{"build":99,"major":4,"minor":0,"revision":0},"properties":{"adaptGameResolutionAtRuntime":true,"folderProject":true,"orientation":"landscape","packageName":"com.example.gamename","projectUuid":"c210777f-e047-47fb-a82e-69526b07d293","scaleMode":"nearest","sizeOnStartupMode":"","useExternalSourceFiles":false,"version":"1.0.0","name":"Project","author":"","windowWidth":1920,"windowHeight":1080,"latestCompilationDirectory":"","maxFPS":120,"minFPS":20,"verticalSync":false,"platformSpecificAssets":{},"loadingScreen":{"showGDevelopSplash":true},"extensionProperties":[],"platforms":[{"name":"GDevelop JS platform"}],"currentPlatform":"GDevelop JS platform"},"resources":{"resources":[{"alwaysLoaded":false,"file":"Assets/Ball.png","kind":"image","metadata":"","name":"Assets\\Ball.png","smoothed":false,"userAdded":true},{"alwaysLoaded":false,"file":"Assets/Wall.png","kind":"image","metadata":"","name":"Assets\\Wall.png","smoothed":false,"userAdded":false},{"alwaysLoaded":false,"file":"Assets/Checkerboard.png","kind":"image","metadata":"","name":"Assets\\Checkerboard.png","smoothed":false,"userAdded":true}],"resourceFolders":[]},"objects":[],"objectsGroups":[],"variables":[],"layouts":[{"b":209,"disableInputWhenNotFocused":true,"mangledName":"WS_32test","name":"WS test","oglFOV":90.0,"oglZFar":500.0,"oglZNear":1.0,"r":209,"standardSortMethod":true,"stopSoundsOnStartup":true,"title":"","v":209,"uiSettings":{"grid":false,"gridB":255,"gridG":180,"gridHeight":32.0,"gridOffsetX":0.0,"gridOffsetY":0.0,"gridR":158,"gridType":"rectangular","gridWidth":32.0,"snap":true,"windowMask":false,"zoomFactor":1.0},"objectsGroups":[],"variables":[],"instances":[{"angle":0.0,"customSize":false,"height":0.0,"layer":"","locked":false,"name":"NewObject","persistentUuid":"6a4fb2bb-77f1-4be6-95c4-e11e741c9295","width":0.0,"x":780.0,"y":390.0,"zOrder":1,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":false,"height":0.0,"layer":"","locked":false,"name":"Clock","persistentUuid":"8b9269c7-9d3f-4dc7-ab5f-85cef69d035d","width":0.0,"x":819.0,"y":705.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]}],"objects":[{"bold":false,"italic":false,"name":"NewObject","smoothed":true,"tags":"","type":"TextObject::Text","underlined":false,"variables":[],"behaviors":[],"string":"Text","font":"","characterSize":20.0,"color":{"b":0,"g":0,"r":0}},{"name":"Clock","tags":"","type":"PrimitiveDrawing::Drawer","variables":[],"behaviors":[],"fillOpacity":255.0,"outlineSize":1,"outlineOpacity":255.0,"fillColor":{"b":255,"g":255,"r":255},"outlineColor":{"b":0,"g":0,"r":0},"absoluteCoordinates":false,"clearBetweenFrames":true}],"events":[{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":false,"name":"","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":true,"folded":true,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"BuiltinCommonInstructions::Once"},"parameters":[],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const vars = runtimeScene.getVariables()\nconst wsVar = vars.get('WS')\nconst secVar = vars.get('Sec')\n\n// const ws = new WebSocket('ws://sangervasi.net')\nconst ws = new WebSocket('ws://localhost:42992')\n\nlet t = Date.now()\n\nsetInterval(() => {\n    ws.send('client says')\n}, 500)\n\nws.addEventListener('message', (messageEvent) => {\n    const data = JSON.parse(messageEvent.data.toString())\n    console.log('client heard:', data)\n    const ts = (Date.now() - t) / 1000 \n    wsVar.setString(JSON.stringify({\n        ts,\n        data\n    }, null, 2))\n    secVar.setNumber(ts)\n})","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"BuiltinCommonInstructions::Once"},"parameters":[],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"class s {\n\tconstructor(s) {\n\t\t;(this.M = null), (this.P = null), (this.T = s)\n\t}\n\ttype(e) {\n\t\treturn new s(e)\n\t}\n\tpayload() {\n\t\treturn new s(this.T)\n\t}\n\tmessage(s) {\n\t\treturn this.T === s.type\n\t}\n\tbuild(s) {\n\t\treturn s\n\t}\n}\nconst e = new s(''),\n\tt = e.type('echo').payload(),\n\tn = e.type('gnop.join').payload(),\n\to = e.type('gnop.joined').payload(),\n\ti = e.type('gnop.point').payload(),\n\ta = e.type('session.created').payload()\ne.type('session.closed').payload()\nconst r = () => {\n\tconst s = {}\n\treturn (\n\t\t(s.promise = new Promise((e, t) => {\n\t\t\t;(s.resolve = e), (s.reject = t)\n\t\t})),\n\t\ts\n\t)\n}\nObject.assign(globalThis, {\n\tGnop: {\n\t\tWsClient: class {\n\t\t\tconstructor(s) {\n\t\t\t\t;(this.options = s),\n\t\t\t\t\t(this.state = 'init'),\n\t\t\t\t\t(this.promises = {}),\n\t\t\t\t\t(this.handleMessage = s => {\n\t\t\t\t\t\tconst e = (s => {\n\t\t\t\t\t\t\tlet e,\n\t\t\t\t\t\t\t\tt = ''\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\te = JSON.parse(s.toString())\n\t\t\t\t\t\t\t} catch (s) {\n\t\t\t\t\t\t\t\tt = s.message\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn '' !== t\n\t\t\t\t\t\t\t\t? { type: 'error', sessionUuid: '', payload: { error: t } }\n\t\t\t\t\t\t\t\t: 'object' == typeof (n = e) && null !== n && 'type' in n\n\t\t\t\t\t\t\t\t? e\n\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\tsessionUuid: '',\n\t\t\t\t\t\t\t\t\t\tpayload: { error: 'Invalid message structure' },\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\tvar n\n\t\t\t\t\t\t})(s.data)\n\t\t\t\t\t\tvar n, i\n\t\t\t\t\t\t'creating' !== this.state\n\t\t\t\t\t\t\t? 'joining' !== this.state\n\t\t\t\t\t\t\t\t? t.message(e)\n\t\t\t\t\t\t\t\t\t? console.log('client heard:', e)\n\t\t\t\t\t\t\t\t\t: console.warn('Unhandled messag:', e)\n\t\t\t\t\t\t\t\t: o.message(e)\n\t\t\t\t\t\t\t\t? (console.log('Joined', this.sessionUuid),\n\t\t\t\t\t\t\t\t  (this.state = 'joined'),\n\t\t\t\t\t\t\t\t  null == (n = this.promises.join) || n.resolve())\n\t\t\t\t\t\t\t\t: console.warn('Expected joined message, got:', e)\n\t\t\t\t\t\t\t: a.message(e)\n\t\t\t\t\t\t\t? (console.info('Created', e.sessionUuid),\n\t\t\t\t\t\t\t  (this.state = 'created'),\n\t\t\t\t\t\t\t  (this.sessionUuid = e.sessionUuid),\n\t\t\t\t\t\t\t  null == (i = this.promises.connect) || i.resolve())\n\t\t\t\t\t\t\t: console.warn('Expected created message, got:', e)\n\t\t\t\t\t}),\n\t\t\t\t\t(this.handleOpen = () => {\n\t\t\t\t\t\tconsole.info('Opened')\n\t\t\t\t\t}),\n\t\t\t\t\t(this.handleClose = () => {\n\t\t\t\t\t\t;(this.state = 'init'), console.info('Closed')\n\t\t\t\t\t}),\n\t\t\t\t\t(this.handleError = () => {\n\t\t\t\t\t\t;(this.state = 'init'), console.info('Errored')\n\t\t\t\t\t})\n\t\t\t}\n\t\t\tasync connect() {\n\t\t\t\tconsole.log('Connecting')\n\t\t\t\tconst s = new WebSocket(this.options.host)\n\t\t\t\treturn (\n\t\t\t\t\t(this.ws = s),\n\t\t\t\t\t(s.onopen = this.handleOpen),\n\t\t\t\t\t(s.onclose = this.handleClose),\n\t\t\t\t\t(s.onerror = this.handleError),\n\t\t\t\t\ts.addEventListener('message', this.handleMessage),\n\t\t\t\t\t(this.state = 'creating'),\n\t\t\t\t\t(this.promises.connect = r()),\n\t\t\t\t\tthis.promises.connect\n\t\t\t\t)\n\t\t\t}\n\t\t\tisReady() {\n\t\t\t\treturn (\n\t\t\t\t\tBoolean(this.sessionUuid) &&\n\t\t\t\t\tBoolean(this.ws) &&\n\t\t\t\t\t'created' === this.state\n\t\t\t\t)\n\t\t\t}\n\t\t\tasync join() {\n\t\t\t\tif (!this.isReady())\n\t\t\t\t\treturn void console.warn('Cannot join from state:', this.state)\n\t\t\t\tconst s = n.build({\n\t\t\t\t\ttype: 'gnop.join',\n\t\t\t\t\tsessionUuid: this.sessionUuid,\n\t\t\t\t\tpayload: { name: this.options.name || 'Name' },\n\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\tconsole.info('Client joining:', s),\n\t\t\t\t\t(this.state = 'joining'),\n\t\t\t\t\tthis.ws.send(JSON.stringify(s)),\n\t\t\t\t\t(this.promises.join = r()),\n\t\t\t\t\tthis.promises.join\n\t\t\t\t)\n\t\t\t}\n\t\t\tspeak() {\n\t\t\t\tif (!this.isReady())\n\t\t\t\t\treturn void console.warn('Cannot speak from state:', this.state)\n\t\t\t\tconst s = t.build({\n\t\t\t\t\ttype: 'echo',\n\t\t\t\t\tsessionUuid: this.sessionUuid,\n\t\t\t\t\tpayload: new Date().toISOString(),\n\t\t\t\t})\n\t\t\t\tconsole.info('Client speaking:', s), this.ws.send(JSON.stringify(s))\n\t\t\t}\n\t\t\tpoint(s, e) {\n\t\t\t\tif (!this.isReady())\n\t\t\t\t\treturn void console.warn('Cannot send point from state:', this.state)\n\t\t\t\tconst t = i.build({\n\t\t\t\t\ttype: 'gnop.point',\n\t\t\t\t\tsessionUuid: this.sessionUuid,\n\t\t\t\t\tpayload: { x: s, y: e },\n\t\t\t\t})\n\t\t\t\tconsole.info('Client sending point:', t),\n\t\t\t\t\tthis.ws.send(JSON.stringify(t))\n\t\t\t}\n\t\t},\n\t},\n})\n//# sourceMappingURL=gnop.modern.js.map\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}]},{"disabled":true,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"BuiltinCommonInstructions::Once"},"parameters":[],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const parseMessage = raw => {\n  let parsed;\n  let parseError = '';\n\n  try {\n    parsed = JSON.parse(raw.toString());\n  } catch (e) {\n    parseError = e.message;\n  }\n\n  if (parseError !== '') {\n    return {\n      type: 'error',\n      sessionUuid: '',\n      payload: {\n        error: parseError\n      }\n    };\n  }\n\n  if (!isMessage(parsed)) {\n    return {\n      type: 'error',\n      sessionUuid: '',\n      payload: {\n        error: 'Invalid message structure'\n      }\n    };\n  }\n\n  return parsed;\n};\nconst isMessage = obj => {\n  if (typeof obj !== 'object') {\n    return false;\n  }\n\n  if (obj === null) {\n    return false;\n  }\n\n  if (!('type' in obj)) {\n    return false;\n  }\n\n  return true;\n};\nclass Guard {\n  constructor(t) {\n    this.M = null;\n    this.P = null;\n    this.T = t;\n  }\n\n  type(t) {\n    return new Guard(t);\n  }\n\n  payload() {\n    return new Guard(this.T);\n  }\n\n  message(m) {\n    return this.T === m.type;\n  }\n\n  build(m) {\n    return m;\n  }\n\n}\nconst guard = new Guard('');\n\nconst guardEcho = guard.type('echo').payload();\n\nconst guardJoin = guard.type('gnop.join').payload();\nconst guardJoined = guard.type('gnop.joined').payload();\nconst guardPoint = guard.type('gnop.point').payload();\n\nconst guardCreated = guard.type('session.created').payload();\nguard.type('session.closed').payload();\n\nconst metafy = () => {\n  const meta = {};\n  meta.promise = new Promise((resolve, reject) => {\n    meta.resolve = resolve;\n    meta.reject = reject;\n  });\n  return meta;\n};\n\nclass WsClient {\n  constructor(options) {\n    this.options = options;\n    this.state = \"init\";\n    this.promises = {};\n\n    this.handleMessage = event => {\n      const message = parseMessage(event.data);\n\n      if (this.state === \"creating\") {\n        if (guardCreated.message(message)) {\n          var _this$promises$connec;\n\n          console.info('Created', message.sessionUuid);\n          this.state = \"created\";\n          this.sessionUuid = message.sessionUuid;\n          (_this$promises$connec = this.promises.connect) == null ? void 0 : _this$promises$connec.resolve();\n        } else {\n          console.warn('Expected created message, got:', message);\n        }\n\n        return;\n      }\n\n      if (this.state === \"joining\") {\n        if (guardJoined.message(message)) {\n          var _this$promises$join;\n\n          console.log('Joined', this.sessionUuid);\n          this.state = \"joined\";\n          (_this$promises$join = this.promises.join) == null ? void 0 : _this$promises$join.resolve();\n        } else {\n          console.warn('Expected joined message, got:', message);\n        }\n\n        return;\n      }\n\n      if (guardEcho.message(message)) {\n        console.log('client heard:', message);\n        return;\n      }\n\n      console.warn('Unhandled messag:', message);\n    };\n\n    this.handleOpen = () => {\n      console.info('Opened');\n    };\n\n    this.handleClose = () => {\n      this.state = 'init';\n      console.info('Closed');\n    };\n\n    this.handleError = () => {\n      this.state = 'init';\n      console.info('Errored');\n    };\n  }\n\n  async connect() {\n    console.log('Connecting');\n    const ws = new WebSocket(this.options.host);\n    this.ws = ws;\n    ws.onopen = this.handleOpen;\n    ws.onclose = this.handleClose;\n    ws.onerror = this.handleError;\n    ws.addEventListener('message', this.handleMessage);\n    this.state = \"creating\";\n    this.promises.connect = metafy();\n    return this.promises.connect;\n  }\n\n  isReady() {\n    return Boolean(this.sessionUuid) && Boolean(this.ws) && this.state === \"created\";\n  }\n\n  async join() {\n    if (!this.isReady()) {\n      console.warn('Cannot join from state:', this.state);\n      return;\n    }\n\n    const mJoin = guardJoin.build({\n      type: 'gnop.join',\n      sessionUuid: this.sessionUuid,\n      payload: {\n        name: this.options.name || \"Name\"\n      }\n    });\n    console.info('Client joining:', mJoin);\n    this.state = \"joining\";\n    this.ws.send(JSON.stringify(mJoin));\n    this.promises.join = metafy();\n    return this.promises.join;\n  }\n\n  speak() {\n    if (!this.isReady()) {\n      console.warn('Cannot speak from state:', this.state);\n      return;\n    }\n\n    const m = guardEcho.build({\n      type: 'echo',\n      sessionUuid: this.sessionUuid,\n      payload: new Date().toISOString()\n    });\n    console.info('Client speaking:', m);\n    this.ws.send(JSON.stringify(m));\n  }\n\n  point(x, y) {\n    if (!this.isReady()) {\n      console.warn('Cannot send point from state:', this.state);\n      return;\n    }\n\n    const mPoint = guardPoint.build({\n      type: 'gnop.point',\n      sessionUuid: this.sessionUuid,\n      payload: {\n        x: x,\n        y: y\n      }\n    });\n    console.info('Client sending point:', mPoint);\n    this.ws.send(JSON.stringify(mPoint));\n  }\n\n}\n\nconst Gnop = {\n  WsClient\n};\nObject.assign(globalThis, {\n  Gnop\n});\n//# sourceMappingURL=gnop.js.map\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"BuiltinCommonInstructions::Once"},"parameters":[],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const { Gnop } = globalThis\n\nconst vars = runtimeScene.getVariables()\nconst wsVar = vars.get('WS')\n\nwsVar.setString(Gnop.WsClient ? \"Has client\" : \"No client\")\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":false,"name":"","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"TextObject::String"},"parameters":["NewObject","=","VariableString(WS)"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"PrimitiveDrawing::Circle"},"parameters":["Clock","0","0","100"],"subInstructions":[]}],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarScene"},"parameters":["Deg","=","ToRad(-90 + (360 / 60) * Variable(Sec))"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"PrimitiveDrawing::LineV2"},"parameters":["Clock","100","100","100 * (1 + cos(Variable(Deg)))","100 * (1 + sin(Variable(Deg)))","10"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]}]}],"parameters":[]}],"layers":[{"ambientLightColorB":0,"ambientLightColorG":0,"ambientLightColorR":0,"followBaseLayerCamera":false,"isLightingLayer":false,"name":"","visibility":true,"cameras":[{"defaultSize":true,"defaultViewport":true,"height":0.0,"viewportBottom":1.0,"viewportLeft":0.0,"viewportRight":1.0,"viewportTop":0.0,"width":0.0}],"effects":[]}],"behaviorsSharedData":[]},{"b":27,"disableInputWhenNotFocused":true,"mangledName":"Gnop","name":"Gnop","oglFOV":90.0,"oglZFar":500.0,"oglZNear":1.0,"r":3,"standardSortMethod":true,"stopSoundsOnStartup":true,"title":"","v":3,"uiSettings":{"grid":true,"gridB":255,"gridG":180,"gridHeight":60.0,"gridOffsetX":0.0,"gridOffsetY":0.0,"gridR":158,"gridType":"rectangular","gridWidth":60.0,"snap":true,"windowMask":false,"zoomFactor":0.6399999999999997},"objectsGroups":[],"variables":[],"instances":[{"angle":0.0,"customSize":true,"height":120.0,"layer":"","locked":false,"name":"Ball","persistentUuid":"24fa9afa-d649-4207-8aad-39e895a875f6","width":120.0,"x":60.0,"y":480.0,"zOrder":1,"numberProperties":[{"name":"animation","value":0.0}],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"3c632d6f-8b33-41e4-8f32-2b135de6b3cf","width":1920.0,"x":0.0,"y":0.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":300.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"3bc9b36b-fd5d-4ed7-890e-251dc8074451","width":60.0,"x":1860.0,"y":60.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"f3fc1089-878f-4ffe-888e-ded4ff1cafd2","width":1920.0,"x":0.0,"y":1020.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":300.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"97abcafb-7475-4f43-8861-1bdf62b87c4f","width":60.0,"x":1860.0,"y":720.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"ee46c794-930f-4140-99c7-76917bc80635","width":600.0,"x":1920.0,"y":1020.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":300.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"014330ed-606c-460b-b0b7-fc369eb82ead","width":60.0,"x":0.0,"y":720.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":120.0,"layer":"","locked":false,"name":"PhantomBall","persistentUuid":"a93d8589-884b-4a67-a21c-ac7ac0ee3053","width":120.0,"x":1800.0,"y":-240.0,"zOrder":4,"numberProperties":[{"name":"animation","value":0.0}],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":960.0,"layer":"Warps","locked":false,"name":"Warp","persistentUuid":"dd6c81f5-2a75-48de-9d63-3c8475fc48c7","width":540.0,"x":0.0,"y":60.0,"zOrder":3,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Dest","type":"string","value":"Right"}]},{"angle":0.0,"customSize":true,"height":960.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"85883034-79ca-4194-9376-34b5379edcd6","width":60.0,"x":2460.0,"y":60.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":300.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"8db6baba-cddb-40e4-8826-4125f3848c73","width":60.0,"x":0.0,"y":60.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"8bc2e882-d49d-45a0-bbb0-80704a52031b","width":600.0,"x":1920.0,"y":0.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"21f5e77e-2b7d-4149-949b-c69477f4d79e","width":600.0,"x":-600.0,"y":0.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"f4d5ea80-d6c3-4f2b-ad0b-107018898c7c","width":600.0,"x":-600.0,"y":1020.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":960.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"075f7afa-a2ee-45e9-95ad-9321a714aa13","width":60.0,"x":-600.0,"y":60.0,"zOrder":2,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":960.0,"layer":"Warps","locked":false,"name":"Warp","persistentUuid":"4a4929c3-3690-4b14-884e-57b242b2a1e8","width":540.0,"x":1380.0,"y":60.0,"zOrder":3,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Dest","type":"string","value":"Left"}]},{"angle":0.0,"customSize":true,"height":960.0,"layer":"Warps","locked":false,"name":"Warp","persistentUuid":"0dd8f655-6376-4950-8a6b-41dbfb1437e5","width":540.0,"x":-540.0,"y":60.0,"zOrder":3,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Source","type":"string","value":"Left"}]},{"angle":0.0,"customSize":false,"height":0.0,"layer":"","locked":false,"name":"DebugDraw","persistentUuid":"e46f3ac9-2200-4eac-a973-67b982499e50","width":0.0,"x":60.0,"y":-60.0,"zOrder":5,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":960.0,"layer":"","locked":false,"name":"Warp","persistentUuid":"77c21b06-fd4f-4d8f-b42f-0301f1e223fe","width":540.0,"x":1920.0,"y":60.0,"zOrder":6,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Source","type":"string","value":"Right"}]},{"angle":0.0,"customSize":true,"height":240.0,"layer":"","locked":false,"name":"Paddle","persistentUuid":"3e96dffc-c480-4461-bf9c-0dadd79dd8e0","width":60.0,"x":1080.0,"y":720.0,"zOrder":7,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Player","type":"number","value":2.0}]},{"angle":0.0,"customSize":true,"height":240.0,"layer":"","locked":false,"name":"Paddle","persistentUuid":"a4779e61-1936-4d36-87ba-389ff2e0ac36","width":60.0,"x":780.0,"y":120.0,"zOrder":7,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Player","type":"number","value":1.0}]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"Debug","locked":false,"name":"P1Count","persistentUuid":"a7279255-c7c8-4c8c-8b4f-141f662e6333","width":180.0,"x":720.0,"y":1020.0,"zOrder":9,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":false,"height":0.0,"layer":"Debug","locked":false,"name":"P2Count","persistentUuid":"fc4e6f55-d04f-4b85-b7e4-9cfe0c31fdbe","width":0.0,"x":1080.0,"y":1020.0,"zOrder":10,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"3acd60af-6689-43db-bd35-a87656d79398","width":960.0,"x":960.0,"y":1620.0,"zOrder":11,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"0c85fdd1-b957-44e9-9cba-7dddd3a8b960","width":960.0,"x":0.0,"y":1620.0,"zOrder":11,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"05d6fbfb-6b4c-4ef4-814a-9b31e912f2e7","width":60.0,"x":1140.0,"y":-300.0,"zOrder":11,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":540.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"d5b0ed62-a3d5-454c-bc96-a76d19931ba0","width":60.0,"x":960.0,"y":1140.0,"zOrder":11,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":540.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"515bf1cb-b209-4375-a555-656a65236e8c","width":60.0,"x":900.0,"y":1140.0,"zOrder":11,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"","locked":false,"name":"Wall","persistentUuid":"ce543c92-8127-4958-89f8-79fa775e8d81","width":60.0,"x":900.0,"y":-300.0,"zOrder":11,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":360.0,"layer":"Zones","locked":false,"name":"HitZone","persistentUuid":"4b1d189e-7c88-4b0e-93e9-237a298474e8","width":180.0,"x":1020.0,"y":660.0,"zOrder":12,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":0.0,"customSize":true,"height":360.0,"layer":"Zones","locked":false,"name":"HitZone","persistentUuid":"47c736f6-3345-43dc-929e-b9028b02d45a","width":180.0,"x":720.0,"y":60.0,"zOrder":12,"numberProperties":[],"stringProperties":[],"initialVariables":[]},{"angle":180.0,"customSize":true,"height":960.0,"layer":"Zones","locked":false,"name":"Slope","persistentUuid":"7a05ee9b-9048-46ec-b758-c1b88abf2940","width":840.0,"x":1080.0,"y":60.0,"zOrder":13,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Grade","type":"string","value":"8"}]},{"angle":0.0,"customSize":true,"height":960.0,"layer":"Zones","locked":false,"name":"Slope","persistentUuid":"3a6f6ac5-c6fb-46eb-873d-30f1eb9048c2","width":120.0,"x":960.0,"y":60.0,"zOrder":13,"numberProperties":[{"name":"animation","value":83886080.0}],"stringProperties":[],"initialVariables":[{"name":"Grade","type":"string","value":"0.5"}]},{"angle":0.0,"customSize":true,"height":960.0,"layer":"Zones","locked":false,"name":"Slope","persistentUuid":"62bc9023-403f-4339-b7ef-4ffb9e72c227","width":840.0,"x":0.0,"y":60.0,"zOrder":13,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Grade","type":"string","value":"8"}]},{"angle":180.0,"customSize":true,"height":960.0,"layer":"Zones","locked":false,"name":"Slope","persistentUuid":"5dd0b0b3-4114-462c-b717-ff904d0ee4f1","width":120.0,"x":840.0,"y":60.0,"zOrder":13,"numberProperties":[],"stringProperties":[],"initialVariables":[{"name":"Grade","type":"string","value":"0.5"}]},{"angle":0.0,"customSize":true,"height":60.0,"layer":"Debug","locked":false,"name":"DebugBall","persistentUuid":"8fa50015-64f8-42d5-a53b-72c427c4105b","width":420.0,"x":720.0,"y":0.0,"zOrder":14,"numberProperties":[],"stringProperties":[],"initialVariables":[]}],"objects":[{"name":"Ball","tags":"","type":"Sprite","updateIfNotVisible":false,"variables":[],"behaviors":[{"name":"Ball","type":"srs_gnop::Ball"},{"name":"Physics2","type":"Physics2::Physics2Behavior","bodyType":"Dynamic","bullet":true,"fixedRotation":false,"canSleep":false,"shape":"Circle","shapeDimensionA":60.0,"shapeDimensionB":0.0,"shapeOffsetX":0.0,"shapeOffsetY":0.0,"polygonOrigin":"Center","vertices":[],"density":0.2,"friction":0.8,"restitution":1.0,"linearDamping":0.1,"angularDamping":0.05,"gravityScale":0.0,"layers":1.0,"masks":1.0}],"animations":[{"name":"","useMultipleDirections":false,"directions":[{"looping":false,"timeBetweenFrames":0.08,"sprites":[{"hasCustomCollisionMask":false,"image":"Assets\\Ball.png","points":[{"name":"Opposite","x":272.0,"y":272.0}],"originPoint":{"name":"origine","x":0.0,"y":0.0},"centerPoint":{"automatic":true,"name":"centre","x":150.0,"y":173.0},"customCollisionMask":[]}]}]}]},{"name":"NewObject","tags":"","type":"Sprite","updateIfNotVisible":false,"variables":[],"behaviors":[],"animations":[]},{"height":32.0,"name":"NewObject2","tags":"","texture":"","type":"TiledSpriteObject::TiledSprite","width":32.0,"variables":[],"behaviors":[]},{"bottomMargin":10.0,"height":60.0,"leftMargin":10.0,"name":"Wall","rightMargin":10.0,"tags":"","texture":"Assets\\Wall.png","tiled":true,"topMargin":10.0,"type":"PanelSpriteObject::PanelSprite","width":60.0,"variables":[],"behaviors":[{"name":"Physics2","type":"Physics2::Physics2Behavior","bodyType":"Static","bullet":false,"fixedRotation":true,"canSleep":true,"shape":"Box","shapeDimensionA":0.0,"shapeDimensionB":0.0,"shapeOffsetX":0.0,"shapeOffsetY":0.0,"polygonOrigin":"Center","vertices":[],"density":1.0,"friction":0.1,"restitution":0.0,"linearDamping":0.0,"angularDamping":0.0,"gravityScale":1.0,"layers":1.0,"masks":1.0}]},{"name":"Warp","tags":"","type":"Sprite","updateIfNotVisible":false,"variables":[{"name":"Source","type":"string","value":"None"},{"name":"Dest","type":"string","value":"None"}],"behaviors":[],"animations":[{"name":"","useMultipleDirections":false,"directions":[{"looping":false,"timeBetweenFrames":0.08,"sprites":[{"hasCustomCollisionMask":false,"image":"Assets\\Wall.png","points":[{"name":"Opposite","x":48.099998474121097,"y":48.099998474121097}],"originPoint":{"name":"origine","x":0.0,"y":0.0},"centerPoint":{"automatic":true,"name":"centre","x":0.0,"y":0.0},"customCollisionMask":[]}]}]}]},{"name":"PhantomBall","tags":"","type":"Sprite","updateIfNotVisible":false,"variables":[],"behaviors":[],"animations":[{"name":"","useMultipleDirections":false,"directions":[{"looping":false,"timeBetweenFrames":0.08,"sprites":[{"hasCustomCollisionMask":false,"image":"Assets\\Ball.png","points":[],"originPoint":{"name":"origine","x":0.0,"y":0.0},"centerPoint":{"automatic":true,"name":"centre","x":0.0,"y":0.0},"customCollisionMask":[]}]}]}]},{"name":"DebugDraw","tags":"","type":"PrimitiveDrawing::Drawer","variables":[],"behaviors":[],"fillOpacity":255.0,"outlineSize":1,"outlineOpacity":255.0,"fillColor":{"b":255,"g":255,"r":255},"outlineColor":{"b":0,"g":0,"r":0},"absoluteCoordinates":true,"clearBetweenFrames":true},{"name":"Paddle","tags":"","type":"Sprite","updateIfNotVisible":false,"variables":[{"name":"Player","type":"number","value":0.0}],"behaviors":[{"name":"Paddle","type":"srs_gnop::Paddle","ControlLength":300.0},{"name":"Physics2","type":"Physics2::Physics2Behavior","bodyType":"Dynamic","bullet":false,"fixedRotation":true,"canSleep":true,"shape":"Box","shapeDimensionA":60.0,"shapeDimensionB":240.0,"shapeOffsetX":0.0,"shapeOffsetY":0.0,"polygonOrigin":"Center","vertices":[],"density":100.0,"friction":0.9,"restitution":0.0,"linearDamping":10.0,"angularDamping":0.1,"gravityScale":0.0,"layers":1.0,"masks":1.0}],"animations":[{"name":"","useMultipleDirections":false,"directions":[{"looping":false,"timeBetweenFrames":0.08,"sprites":[{"hasCustomCollisionMask":false,"image":"Assets\\Wall.png","points":[],"originPoint":{"name":"origine","x":0.0,"y":0.0},"centerPoint":{"automatic":true,"name":"centre","x":0.0,"y":0.0},"customCollisionMask":[]}]}]}]},{"name":"HitZone","tags":"","type":"Sprite","updateIfNotVisible":false,"variables":[],"behaviors":[],"animations":[{"name":"","useMultipleDirections":false,"directions":[{"looping":false,"timeBetweenFrames":0.08,"sprites":[{"hasCustomCollisionMask":false,"image":"Assets\\Checkerboard.png","points":[],"originPoint":{"name":"origine","x":0.0,"y":0.0},"centerPoint":{"automatic":true,"name":"centre","x":0.0,"y":0.0},"customCollisionMask":[]}]}]}]},{"name":"Slope","tags":"","type":"Sprite","updateIfNotVisible":false,"variables":[{"name":"Grade","type":"string","value":"1"}],"behaviors":[],"animations":[{"name":"","useMultipleDirections":false,"directions":[{"looping":false,"timeBetweenFrames":0.08,"sprites":[{"hasCustomCollisionMask":false,"image":"Assets\\Checkerboard.png","points":[],"originPoint":{"name":"origine","x":0.0,"y":0.0},"centerPoint":{"automatic":true,"name":"centre","x":0.0,"y":0.0},"customCollisionMask":[]}]}]}]},{"bold":false,"italic":false,"name":"P1Count","smoothed":true,"tags":"","type":"TextObject::Text","underlined":false,"variables":[],"behaviors":[],"string":"[count]","font":"","characterSize":40.0,"color":{"b":0,"g":0,"r":0}},{"bold":false,"italic":false,"name":"P2Count","smoothed":true,"tags":"","type":"TextObject::Text","underlined":false,"variables":[],"behaviors":[],"string":"[count]","font":"","characterSize":40.0,"color":{"b":0,"g":0,"r":0}},{"bold":false,"italic":false,"name":"DebugBall","smoothed":true,"tags":"","type":"TextObject::Text","underlined":false,"variables":[],"behaviors":[],"string":"[X, Y]","font":"","characterSize":40.0,"color":{"b":0,"g":0,"r":0}}],"events":[{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":false,"name":"Debugs","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":true,"folded":true,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"DepartScene"},"parameters":[""],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"PrimitiveDrawing::FillColor"},"parameters":["DebugDraw","\"110;255;51\""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::ForEach","object":"Warp","conditions":[],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"PrimitiveDrawing::Star"},"parameters":["DebugDraw","Warp.PointX(\"Origin\")","Warp.PointY(\"Origin\")","5","25","5","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"PrimitiveDrawing::Star"},"parameters":["DebugDraw","Warp.PointX(\"Opposite\")","Warp.PointY(\"Origin\")","5","25","5","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"PrimitiveDrawing::Star"},"parameters":["DebugDraw","Warp.PointX(\"Origin\")","Warp.PointY(\"Opposite\")","5","25","5","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"PrimitiveDrawing::Star"},"parameters":["DebugDraw","Warp.PointX(\"Opposite\")","Warp.PointY(\"Opposite\")","5","25","5","0"],"subInstructions":[]}],"events":[]}]}]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":false,"name":"Time scale","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyReleased"},"parameters":["","Num1"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::TimeScale"},"parameters":["Ball","Physics2","1"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyReleased"},"parameters":["","Num2"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::TimeScale"},"parameters":["Ball","Physics2","1/2"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyReleased"},"parameters":["","Num3"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::TimeScale"},"parameters":["Ball","Physics2","0"],"subInstructions":[]}],"events":[]}],"parameters":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":true,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"PrimitiveDrawing::Star"},"parameters":["DebugDraw","(CameraWidth(\"\", 0) / 4) +  + (Ball.PointX(\"Origin\") / 2)","(CameraHeight(\"\", 0) / 4) +  + (Ball.PointY(\"Origin\") / 2)","5","25","5","0"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"TextObject::String"},"parameters":["DebugBall","=","srs_utils::ToCoords(Ball.Physics2::MassCenterX(), Ball.Physics2::MassCenterY())"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"TextObject::String"},"parameters":["P1Count","=","ToString(P1Count.Variable(Count))"],"subInstructions":[]},{"type":{"inverted":false,"value":"TextObject::String"},"parameters":["P2Count","=","ToString(P2Count.Variable(Count))"],"subInstructions":[]}],"events":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":true,"name":"Ball push","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Ball","PushLength","=","400"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyReleased"},"parameters":["","Right"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyPolarForce"},"parameters":["Ball","Physics2","0","Ball.Variable(PushLength)","Ball.Physics2::MassCenterX()","Ball.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyReleased"},"parameters":["","Down"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyPolarForce"},"parameters":["Ball","Physics2","90","Ball.Variable(PushLength)","Ball.Physics2::MassCenterX()","Ball.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyReleased"},"parameters":["","Left"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyPolarForce"},"parameters":["Ball","Physics2","180","Ball.Variable(PushLength)","Ball.Physics2::MassCenterX()","Ball.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyReleased"},"parameters":["","Up"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyPolarForce"},"parameters":["Ball","Physics2","-90","Ball.Variable(PushLength)","Ball.Physics2::MassCenterX()","Ball.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]}],"parameters":[]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":true,"name":"Wrap","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"DepartScene"},"parameters":[""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"HideLayer"},"parameters":["","\"Warps\""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Ball","Radius","=","(1/2) * Ball.Width() "],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Ball","Left","=","Ball.Physics2::MassCenterX() - Ball.Variable(Radius)"],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Ball","Right","=","Ball.Physics2::MassCenterX() + Ball.Variable(Radius)"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ObjectVariableClearChildren"},"parameters":["Ball","Warp"],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjetTxt"},"parameters":["Ball","Warp.State","=","\"None\""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":true,"type":"BuiltinCommonInstructions::ForEach","object":"Warp","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Warp","Source","!=","\"None\""],"subInstructions":[]},{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Ball","Warp.State","=","\"None\"\n"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Warp","Left","=","Warp.X()"],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Warp","Right","=","Warp.X() + Warp.Width()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetObjectVariableAsBoolean"},"parameters":["Warp","ContainsLeft","False"],"subInstructions":[]},{"type":{"inverted":false,"value":"SetObjectVariableAsBoolean"},"parameters":["Warp","ContainsRight","False"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"Egal"},"parameters":["Warp.Variable(Left)","<","Ball.Variable(Left)"],"subInstructions":[]},{"type":{"inverted":false,"value":"Egal"},"parameters":["Ball.Variable(Left)","<","Warp.Variable(Right)"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetObjectVariableAsBoolean"},"parameters":["Warp","ContainsLeft","True"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"Egal"},"parameters":["Warp.Variable(Left)","<","Ball.Variable(Right)"],"subInstructions":[]},{"type":{"inverted":false,"value":"Egal"},"parameters":["Ball.Variable(Right)","<","Warp.Variable(Right)"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetObjectVariableAsBoolean"},"parameters":["Warp","ContainsRight","True"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"BuiltinCommonInstructions::Or"},"parameters":[],"subInstructions":[{"type":{"inverted":false,"value":"ObjectVariableAsBoolean"},"parameters":["Warp","ContainsLeft","True"],"subInstructions":[]},{"type":{"inverted":false,"value":"ObjectVariableAsBoolean"},"parameters":["Warp","ContainsRight","True"],"subInstructions":[]}]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjetTxt"},"parameters":["Ball","Warp.Source","=","Warp.VariableString(Source)"],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Ball","Warp.OffsetX","=","Ball.Physics2::MassCenterX() - Warp.PointX(\"Center\")"],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjetTxt"},"parameters":["Ball","Warp.State","=","\"Phantom\""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"ObjectVariableAsBoolean"},"parameters":["Warp","ContainsLeft","True"],"subInstructions":[]},{"type":{"inverted":false,"value":"ObjectVariableAsBoolean"},"parameters":["Warp","ContainsRight","True"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"ModVarObjetTxt"},"parameters":["Ball","Warp.State","=","\"Real\""],"subInstructions":[]}],"events":[]}]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Ball","Warp.State","!=","\"None\"\n"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::ForEach","object":"Warp","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Warp","Dest","=","Ball.VariableString(Warp.Source)"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Ball","Warp.State","=","\"Phantom\"\n"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Montre"},"parameters":["PhantomBall",""],"subInstructions":[]},{"type":{"inverted":false,"value":"MettreAutourPos"},"parameters":["PhantomBall","Warp.PointX(\"Center\") + Ball.Variable(Warp.OffsetX)","Ball.Physics2::MassCenterY()","0","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"SetAngle"},"parameters":["PhantomBall","=","Ball.Angle()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Ball","Warp.State","=","\"Real\"\n"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"MettreAutourPos"},"parameters":["Ball","Warp.PointX(\"Center\") + Ball.Variable(Warp.OffsetX)","Ball.Physics2::MassCenterY()","0","0"],"subInstructions":[]}],"events":[]}]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Ball","Warp.State","=","\"None\"\n"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Cache"},"parameters":["PhantomBall"],"subInstructions":[]}],"events":[]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":false,"name":"Ball","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"srs_gnop::Ball::handlePhysics"},"parameters":["Ball","Ball","Physics2",""],"subInstructions":[]}],"events":[]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":true,"name":"Slopes","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::ForEach","object":"Slope","conditions":[],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"CollisionPoint"},"parameters":["Slope","Ball.Physics2::MassCenterX()","Ball.Physics2::MassCenterY()"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Slope","ForceLength","=","Slope.Variable(Grade) * Ball.Physics2::Density()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyPolarForce"},"parameters":["Ball","Physics2","Slope.Angle()","Slope.Variable(ForceLength)","Ball.Physics2::MassCenterX()","Ball.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]}]}]}],"parameters":[]},{"colorB":228,"colorG":176,"colorR":74,"creationTime":0,"disabled":false,"folded":true,"name":"Paddles","source":"","type":"BuiltinCommonInstructions::Group","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"srs_gnop::Paddle::handlePhysics"},"parameters":["Paddle","Paddle","Physics2",""],"subInstructions":[]},{"type":{"inverted":false,"value":"srs_gnop::Paddle::handleHitZone"},"parameters":["Paddle","Paddle","HitZone",""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::ForEach","object":"Paddle","conditions":[],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"LinkedObjects::PickObjectsLinkedTo"},"parameters":["","HitZone","Paddle"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"CollisionNP"},"parameters":["HitZone","Ball","","","yes"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ChangeColor"},"parameters":["HitZone","\"56;255;0\""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Paddle","HitState","=","\"none\""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"ModVarObjetTxt"},"parameters":["Paddle","HitState","=","\"ready\""],"subInstructions":[]}],"events":[]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":true,"value":"CollisionNP"},"parameters":["HitZone","Ball","","","yes"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ChangeColor"},"parameters":["HitZone","\"255;255;255\""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjetTxt"},"parameters":["Paddle","HitState","=","\"none\""],"subInstructions":[]}],"events":[]}]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"Physics2::Collision"},"parameters":["Paddle","Physics2","Ball",""],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Paddle","HitState","=","\"ready\""],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Paddle","HitLength","=","200 * Ball.Physics2::Density()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Paddle","AngleToBall","=","AngleBetweenPositions(Paddle.Physics2::MassCenterX(), Paddle.Physics2::MassCenterY(), Ball.Physics2::MassCenterX(), Ball.Physics2::MassCenterY())"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyPolarForce"},"parameters":["Ball","Physics2","Paddle.Variable(AngleToBall)","Paddle.Variable(HitLength)","Ball.Physics2::MassCenterX()","Ball.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjetTxt"},"parameters":["Paddle","HitState","=","\"hit\""],"subInstructions":[]}],"events":[]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"srs_gnop::Paddle::IsPlayer"},"parameters":["Paddle","Paddle","1",""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["P1Count","Count","+","1"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"srs_gnop::Paddle::IsPlayer"},"parameters":["Paddle","Paddle","2",""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["P2Count","Count","+","1"],"subInstructions":[]}],"events":[]},{"disabled":true,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ChangeColor"},"parameters":["Paddle","ToString(RandomFloatInRange(100,200)) + \";\" + ToString(RandomFloatInRange(100,200)) + \";\" + ToString(RandomFloatInRange(100,200))"],"subInstructions":[]}],"events":[]}]}]}],"parameters":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]}],"layers":[{"ambientLightColorB":1702453580,"ambientLightColorG":0,"ambientLightColorR":7919296,"followBaseLayerCamera":false,"isLightingLayer":false,"name":"Warps","visibility":true,"cameras":[],"effects":[]},{"ambientLightColorB":1702453580,"ambientLightColorG":6024528,"ambientLightColorR":117440512,"followBaseLayerCamera":false,"isLightingLayer":false,"name":"Zones","visibility":true,"cameras":[],"effects":[]},{"ambientLightColorB":0,"ambientLightColorG":7886680,"ambientLightColorR":7920832,"followBaseLayerCamera":false,"isLightingLayer":false,"name":"","visibility":true,"cameras":[{"defaultSize":true,"defaultViewport":true,"height":0.0,"viewportBottom":1.0,"viewportLeft":0.0,"viewportRight":1.0,"viewportTop":0.0,"width":0.0}],"effects":[]},{"ambientLightColorB":1702453580,"ambientLightColorG":6022704,"ambientLightColorR":67108864,"followBaseLayerCamera":false,"isLightingLayer":false,"name":"Debug","visibility":true,"cameras":[],"effects":[]}],"behaviorsSharedData":[{"name":"Ball","type":"srs_gnop::Ball"},{"name":"Paddle","type":"srs_gnop::Paddle"},{"name":"Physics2","type":"Physics2::Physics2Behavior","gravityX":0.0,"gravityY":9.8,"scaleX":100.0,"scaleY":100.0}]}],"externalEvents":[],"eventsFunctionsExtensions":[{"author":"ssangervasi","description":"","extensionNamespace":"","fullName":"SRS Utils","helpPath":"","iconUrl":"","name":"srs_utils","previewIconUrl":"","shortDescription":"","version":"","tags":[""],"dependencies":[],"eventsFunctions":[{"description":"","fullName":"","functionType":"Action","name":"onFirstSceneLoaded","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"if (!global.ssangervasi) { global.ssangervasi = {} }\nconst ssangervasi = global.ssangervasi;\n\nssangervasi.isDebuggingEnabled = false\nif (!ssangervasi.isDebuggingEnabled) {\n    try {\n        ssangervasi.isDebuggingEnabled = runtimeScene.getGame().isPreview()\n    } catch {}\n}\n\n// SetupScene history\n;(() => {\n    /**\n     * @typedef SceneHistoryItem\n     * @property {string} sceneName \n     * @property {number} [startedAt]\n     */\n\n    /** @param {string} sceneName*/\n    const pushScene = (sceneName) => {\n        if (!sceneName) {\n            return\n        }\n        const newItem = {\n            sceneName,\n            startedAt: Date.now()\n        }\n        getSceneHistory().push(newItem)\n\n        return newItem\n    }\n\n    /**\n     * @param {string} defaultVal\n     * @param {number} depth\n     * @returns {string} Scene name\n     */\n    const peekScene = (defaultVal, depth) => {\n        defaultVal = defaultVal || \"\"\n        depth = depth || 0\n\n        const hist = getSceneHistory()\n        const index = hist.length - 1 - depth\n        if (index < 0) {\n            return defaultVal\n        }\n        const item = hist[index]\n        return item.sceneName\n    }\n\n    /** @returns {SceneHistoryItem[]} */\n    const getSceneHistory = () => {\n        if (!ssangervasi.sceneHistory) {\n            ssangervasi.sceneHistory = []\n            pushScene(runtimeScene.getName())\n        }\n        return ssangervasi.sceneHistory\n    }\n\n    Object.assign(\n        ssangervasi,\n        {\n            getSceneHistory,\n            pushScene,\n            peekScene \n        }\n    )\n})();\n\n(() => {\n    const getTimestamp = () => (new Date()).toISOString()\n    const parseTimestamp = (timestamp, defaultVal) => {\n        const d = new Date(timestamp)\n        if (isNaN(d)) { return defaultVal || 0; }\n        return d.valueOf()\n    }\n\n    const getLogCtx = () => {\n        let ctx = '(Unknown)'\n        try {\n            const stack = (new Error().stack)\n            const match = stack.match(/([a-zA-Z.]+Context)/)\n            ctx = (match && match.length && match[0]) || ctx\n        } catch (e) {\n            // Not using ssangervasi.error b/c that would recurse back to here :D\n            console.error('Context failure', e)\n        }\n        return ctx\n    }\n\n    const log = (...msgs) => ssangervasi.isDebuggingEnabled && console.log(getTimestamp(), getLogCtx(), ...msgs)\n    const warn = (...msgs) => ssangervasi.isDebuggingEnabled && console.warn(getTimestamp(), getLogCtx(), ...msgs)\n    const info = (...msgs) => ssangervasi.isDebuggingEnabled && console.info(getTimestamp(), getLogCtx(), ...msgs)\n    const error = (...msgs) => ssangervasi.isDebuggingEnabled && console.error(getTimestamp(), getLogCtx(), ...msgs)\n\n    Object.assign(\n        ssangervasi,\n        {\n            getTimestamp,\n            log,\n            warn,\n            info,\n            error,\n        }\n    )\n})();\n\n(() => {\n    const countLines = (str) => {\n        return 1 + str.split('').filter(c => c === '\\n').length\n    }\n\n    const parseArray = (arrayJson) => {\n        try {\n            const arr = JSON.parse(arrayJson)\n            if (Array.isArray(arr)) {\n                return arr\n            }\n        } catch {}\n        return []\n    } \n\n    Object.assign(\n        ssangervasi,\n        {\n            countLines,\n            parseArray\n        }\n    )\n})();\n\n(() => {\n    const getPlaylist = (aRuntimeScene, playlistName, fresh) => {\n        if (!(aRuntimeScene && playlistName)) {\n            ssangervasi.error(\"Cannot getPlaylist\", { playlistName })\n            return\n        }\n        const nameToPlaylist = ssangervasi.setupPlaylists(runtimeScene)\n        if (!nameToPlaylist.has(playlistName) || fresh) {\n            nameToPlaylist.set(playlistName, new ssangervasi.Playlist())\n        }\n        return nameToPlaylist.get(playlistName)\n    }\n\n    const setupPlaylists = (aRuntimeScene) => {\n        if (!runtimeScene._srsUtils) {\n            runtimeScene._srsUtils = {};\n        }\n        if (!runtimeScene._srsUtils.nameToPlaylist) {\n            runtimeScene._srsUtils.nameToPlaylist = new Map();\n        }\n\n        return runtimeScene._srsUtils.nameToPlaylist;\n    }\n\n    class Playlist {\n        constructor() {\n            this.items = []\n            this.current = null\n        }\n\n        getCurrent() {\n            if (this.current === null) {\n                return null\n            }\n            return this.items[this.current]\n        }\n\n        add(item) {\n            this.items.push(item)\n            if (this.current === null) {\n                this.current = 0\n            }\n        }\n\n        skipTo(targetItem) {\n            const foundIndex = this.items.findIndex(item => item === targetItem)\n            if (foundIndex === -1) { return null }\n\n            this.current = foundIndex\n            return this.getCurrent()\n        }\n\n        next() {\n            if (this.current === null) { return null }\n\n            this.current = (this.current + 1) % this.items.length\n            return this.getCurrent()\n        }\n\n        previous() {\n            if (this.current === null) { return null }\n\n            this.current = this.current - 1\n            if (this.current < 0) {\n                this.current = this.items.length + this.current\n            }\n            return this.getCurrent()\n        }\n    }\n\n    Object.assign(\n        ssangervasi,\n        {\n            getPlaylist,\n            setupPlaylists,\n            Playlist\n        }\n    )       \n})();\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":true}],"parameters":[],"objectGroups":[]},{"description":"Log a message to the debug console","fullName":"Console Log","functionType":"Action","name":"consoleLog","private":false,"sentence":"Log _PARAM1_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"global.ssangervasi.log(\n    eventsFunctionContext.getArgument('Message')\n)\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Message","longDescription":"","name":"Message","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"Get milliseconds from seconds","fullName":"ms","functionType":"Expression","name":"ms","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["GetArgumentAsNumber(\"Seconds\") * 1000"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Seconds","longDescription":"","name":"Seconds","optional":false,"supplementaryInformation":"","type":"expression"}],"objectGroups":[]},{"description":"Counts the number of words in a string.","fullName":"Word Count","functionType":"Expression","name":"wordCount","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const stringToCount = eventsFunctionContext.getArgument('StringToCount')\r\nif (!stringToCount) {\r\n    return 0\r\n}\r\n\r\nconst words = stringToCount.match(/\\w+|\\.{3}/g)\r\n// console.log({\r\n//     stringToCount,\r\n//     words,\r\n// })\r\neventsFunctionContext.returnValue = words.length","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"StringToCount","longDescription":"","name":"StringToCount","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"StrToRepl, Pattern, Replacement","fullName":"String replace","functionType":"StringExpression","name":"strReplace","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"eventsFunctionContext.returnValue = (() => {\n    const patternArg = eventsFunctionContext.getArgument('Pattern')\n    let pattern = patternArg\n    const reMatch = patternArg.match(new RegExp('^/(.*)/.*$'))\n\n    if (reMatch) {\n        pattern = new RegExp(reMatch[1], reMatch[2])\n    }\n\n    const strToRepl = eventsFunctionContext.getArgument('StrToRepl')\n    const replacement = eventsFunctionContext.getArgument('Replacement')\n    return strToRepl.replace(pattern, replacement)\n})()\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"String to replace","longDescription":"","name":"StrToRepl","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"String or RegExp","longDescription":"","name":"Pattern","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"Replacement string","longDescription":"","name":"Replacement","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"Current playlist item","fullName":"Current playlist item","functionType":"StringExpression","name":"playlistCurrent","private":false,"sentence":"Current item  in playlist _PARAM1_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"eventsFunctionContext.returnValue = (() => {\r\n    const playlistName = eventsFunctionContext.getArgument('PlaylistName')\r\n    if (!(playlistName)) {\r\n        global.ssangervasi.error('Cannot get current item in playlist', { playlistName })\r\n        return \"\"\r\n    }\r\n\r\n    const playlist = global.ssangervasi.getPlaylist(runtimeScene, playlistName)\r\n    return playlist.getCurrent() || \"\"\r\n})()","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"PlaylistName","longDescription":"","name":"PlaylistName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"Add to playlist","fullName":"Add to playlist","functionType":"Action","name":"playlistAdd","private":false,"sentence":"Add _PARAM2_ to playlist _PARAM1_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const playlistName = eventsFunctionContext.getArgument('PlaylistName')\r\nconst item = eventsFunctionContext.getArgument('Item')\r\nif (!(playlistName && item)) {\r\n    global.ssangervasi.error('Cannot add item to playlist', { playlistName, item })\r\n    return\r\n}\r\n\r\n\r\nconst playlist = global.ssangervasi.getPlaylist(runtimeScene, playlistName)\r\nplaylist.add(item)\r\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"PlaylistName","longDescription":"","name":"PlaylistName","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"Item","longDescription":"","name":"Item","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"Previous playlist item","fullName":"Previous playlist item","functionType":"Action","name":"playlistPrevious","private":false,"sentence":"Skip to previous item in playlist _PARAM1_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const playlistName = eventsFunctionContext.getArgument('PlaylistName')\r\nif (!playlistName) {\r\n    global.ssangervasi.error('Cannot skip to next item in playlist', { playlistName })\r\n    return\r\n}\r\nconst playlist = global.ssangervasi.getPlaylist(runtimeScene, playlistName)\r\nplaylist.previous()","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"PlaylistName","longDescription":"","name":"PlaylistName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"Next playlist item","fullName":"Next playlist item","functionType":"Action","name":"playlistNext","private":false,"sentence":"Skip to next item in playlist _PARAM1_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const playlistName = eventsFunctionContext.getArgument('PlaylistName')\r\nif (!playlistName) {\r\n    global.ssangervasi.error('Cannot skip to next item in playlist', { playlistName })\r\n    return\r\n}\r\n\r\nconst playlist = global.ssangervasi.getPlaylist(runtimeScene, playlistName)\r\nplaylist.next()","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"PlaylistName","longDescription":"","name":"PlaylistName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"Skip to item","fullName":"Skip to item","functionType":"Action","name":"playlistSkipTo","private":false,"sentence":"Skip to item _PARAM2_ in playlist _PARAM1_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const playlistName = eventsFunctionContext.getArgument('PlaylistName')\r\nconst item = eventsFunctionContext.getArgument('Item')\r\nif (!(playlistName && item)) {\r\n    global.ssangervasi.error('Cannot add skip to playlist item', { playlistName, item })\r\n    return\r\n}\r\n\r\nconst playlist = global.ssangervasi.getPlaylist(runtimeScene, playlistName)\r\nconst result = playlist.skipTo(item)\r\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"PlaylistName","longDescription":"","name":"PlaylistName","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"Item","longDescription":"","name":"Item","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"Throttle","fullName":"Throttle","functionType":"Condition","name":"Throttle","private":false,"sentence":"_PARAM1_ Throttle invoke _PARAM2_ every _PARAM3_ ms ","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":[""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"BuiltinCommonInstructions::Or"},"parameters":[],"subInstructions":[{"type":{"inverted":true,"value":"srs_utils::HasLimitedTimer"},"parameters":["","Object","GetArgumentAsString(\"TimerName\")",""],"subInstructions":[]},{"type":{"inverted":false,"value":"Egal"},"parameters":["srs_utils::getLimitedTimerFraction(Object, GetArgumentAsString(\"TimerName\"))",">=","1"],"subInstructions":[]}]}],"actions":[{"type":{"inverted":false,"value":"srs_utils::startLimitedTimer"},"parameters":["","Object","GetArgumentAsString(\"TimerName\")","GetArgumentAsNumber(\"FrequencyMs\")",""],"subInstructions":[]},{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":["True"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"objectList"},{"codeOnly":false,"defaultValue":"","description":"TimerName","longDescription":"","name":"TimerName","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"FrequencyMs","longDescription":"","name":"FrequencyMs","optional":false,"supplementaryInformation":"","type":"expression"}],"objectGroups":[]},{"description":"HasLimitedTimer","fullName":"HasLimitedTimer","functionType":"Condition","name":"HasLimitedTimer","private":false,"sentence":"HasLimitedTimer _PARAM2_ on _PARAM1_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":[""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"ObjectVariableChildExists"},"parameters":["Object","TimerNameToLimitMs","GetArgumentAsString(\"TimerName\")"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":["True"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"objectList"},{"codeOnly":false,"defaultValue":"","description":"TimerName","longDescription":"","name":"TimerName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"startLimitedTimer","fullName":"startLimitedTimer","functionType":"Action","name":"startLimitedTimer","private":false,"sentence":"Start timer _PARAM2_ on _PARAM1_ with limit _PARAM3_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Object","TimerNameToLimitMs[GetArgumentAsString(\"TimerName\")]","=","GetArgumentAsNumber(\"LimitMs\")"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ResetObjectTimer"},"parameters":["Object","GetArgumentAsString(\"TimerName\")"],"subInstructions":[]},{"type":{"inverted":false,"value":"UnPauseObjectTimer"},"parameters":["Object","GetArgumentAsString(\"TimerName\")"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"objectList"},{"codeOnly":false,"defaultValue":"","description":"TimerName","longDescription":"","name":"TimerName","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"LimitMs","longDescription":"","name":"LimitMs","optional":false,"supplementaryInformation":"","type":"expression"}],"objectGroups":[]},{"description":"getLimitedTimerLimit","fullName":"getLimitedTimerLimit","functionType":"Expression","name":"getLimitedTimerLimit","private":false,"sentence":"Start timer _PARAM2_ on _PARAM1_ with limit _PARAM3_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["Object.Variable(TimerNameToLimitMs[GetArgumentAsString(\"TimerName\")])"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"objectList"},{"codeOnly":false,"defaultValue":"","description":"TimerName","longDescription":"","name":"TimerName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"getLimitedTimerElapsed","fullName":"getLimitedTimerElapsed","functionType":"Expression","name":"getLimitedTimerElapsed","private":false,"sentence":"Start timer _PARAM2_ on _PARAM1_ with limit _PARAM3_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"Egal"},"parameters":["srs_utils::getLimitedTimerLimit(Object, GetArgumentAsString(\"TimerName\"))","<=","srs_utils::ms(Object.ObjectTimerElapsedTime(GetArgumentAsString(\"TimerName\")))"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"PauseObjectTimer"},"parameters":["Object","GetArgumentAsString(\"TimerName\")"],"subInstructions":[]},{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["srs_utils::getLimitedTimerLimit(Object, GetArgumentAsString(\"TimerName\"))"],"subInstructions":[]}],"events":[]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"Egal"},"parameters":["srs_utils::ms(Object.ObjectTimerElapsedTime(GetArgumentAsString(\"TimerName\")) )","<","srs_utils::getLimitedTimerLimit(Object, GetArgumentAsString(\"TimerName\"))"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["srs_utils::ms(Object.ObjectTimerElapsedTime(GetArgumentAsString(\"TimerName\")))"],"subInstructions":[]}],"events":[]}]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"objectList"},{"codeOnly":false,"defaultValue":"","description":"TimerName","longDescription":"","name":"TimerName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"getLimitedTimerFraction","fullName":"getLimitedTimerFraction","functionType":"Expression","name":"getLimitedTimerFraction","private":false,"sentence":"Start timer _PARAM2_ on _PARAM1_ with limit _PARAM3_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["0"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"srs_utils::HasLimitedTimer"},"parameters":["","Object","GetArgumentAsString(\"TimerName\")",""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["srs_utils::getLimitedTimerElapsed(Object, GetArgumentAsString(\"TimerName\")) / srs_utils::getLimitedTimerLimit(Object, GetArgumentAsString(\"TimerName\"))"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"objectList"},{"codeOnly":false,"defaultValue":"","description":"TimerName","longDescription":"","name":"TimerName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"startAnimation","fullName":"startAnimation","functionType":"Action","name":"startAnimation","private":false,"sentence":"_PARAM1_ startAnimation _PARAM2_ ","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetAnimationName"},"parameters":["Sprite","GetArgumentAsString(\"AnimationName\")"],"subInstructions":[]},{"type":{"inverted":false,"value":"ChangeSprite"},"parameters":["Sprite","=","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"PlayAnimation"},"parameters":["Sprite"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Sprite","longDescription":"","name":"Sprite","optional":false,"supplementaryInformation":"Sprite","type":"objectList"},{"codeOnly":false,"defaultValue":"","description":"AnimationName","longDescription":"","name":"AnimationName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"AngleBetweeen _PARAM1_ and _PARAM2_","fullName":"AngleBetweeen","functionType":"Expression","name":"AngleBetweeen","private":false,"sentence":"","events":[{"disabled":true,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"srs_utils::consoleLog"},"parameters":["","\"Y dif \" + ToString(ObjTo.PointY(\"Center\") - ObjFrom.PointY(\"Center\"))",""],"subInstructions":[]},{"type":{"inverted":false,"value":"srs_utils::consoleLog"},"parameters":["","\"X diff \" + ToString(ObjTo.PointX(\"Center\") - ObjFrom.PointX(\"Center\"))",""],"subInstructions":[]},{"type":{"inverted":false,"value":"srs_utils::consoleLog"},"parameters":["","\"Atan \" + ToString(atan((ObjTo.PointY(\"Center\") - ObjFrom.PointY(\"Center\")) / (ObjTo.PointX(\"Center\") - ObjFrom.PointX(\"Center\"))))",""],"subInstructions":[]},{"type":{"inverted":false,"value":"srs_utils::consoleLog"},"parameters":["","\"Deg \" + ToString(ToDeg(atan((ObjTo.PointY(\"Center\") - ObjFrom.PointY(\"Center\")) / (ObjTo.PointX(\"Center\") - ObjFrom.PointX(\"Center\")))))",""],"subInstructions":[]}],"events":[]},{"disabled":true,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"Egal"},"parameters":["ObjFrom.PointX(\"Center\")","=","ObjTo.PointX(\"Center\")"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["0"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["-1 * ToDeg(atan((ObjTo.PointY(\"Center\") - ObjFrom.PointY(\"Center\")) / (ObjTo.PointX(\"Center\") - ObjFrom.PointX(\"Center\"))))"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"ObjFrom","longDescription":"","name":"ObjFrom","optional":false,"supplementaryInformation":"Sprite","type":"objectList"},{"codeOnly":false,"defaultValue":"","description":"ObjTo","longDescription":"","name":"ObjTo","optional":false,"supplementaryInformation":"Sprite","type":"objectList"}],"objectGroups":[]},{"description":"","fullName":"ClampAbs","functionType":"Expression","name":"ClampAbs","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const clampAbs = (val, min, max) => {\n    const sign = val < 0 ? -1 : 1\n    const mag = Math.abs(val)\n    const clamped = Math.max(min, Math.min(mag, max))\n    return sign * clamped\n}\n\neventsFunctionContext.returnValue = clampAbs(\n    eventsFunctionContext.getArgument(\"Value\"),\n    eventsFunctionContext.getArgument(\"Min\"),\n    eventsFunctionContext.getArgument(\"Max\"),    \n)\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Value","longDescription":"","name":"Value","optional":false,"supplementaryInformation":"","type":"expression"},{"codeOnly":false,"defaultValue":"","description":"Min magnitude","longDescription":"","name":"Min","optional":false,"supplementaryInformation":"","type":"expression"},{"codeOnly":false,"defaultValue":"","description":"Max magnitude","longDescription":"","name":"Max","optional":false,"supplementaryInformation":"","type":"expression"}],"objectGroups":[]},{"description":"Uid","fullName":"Uid","functionType":"Expression","name":"Uid","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarGlobal"},"parameters":["LastUid","=","0"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"ModVarGlobal"},"parameters":["LastUid","=","1"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarGlobal"},"parameters":["LastUid","+","1"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["GlobalVariable(LastUid)"],"subInstructions":[]}],"events":[]}],"parameters":[],"objectGroups":[]},{"description":"enableDebugging","fullName":"enableDebugging","functionType":"Action","name":"enableDebugging","private":false,"sentence":"enableDebugging","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"global.ssangervasi.isDebuggingEnabled = true","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[],"objectGroups":[]},{"description":"IsDebuggingEnabled","fullName":"IsDebuggingEnabled","functionType":"Condition","name":"IsDebuggingEnabled","private":false,"sentence":"IsDebuggingEnabled","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"eventsFunctionContext.returnValue = global.ssangervasi.isDebuggingEnabled","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[],"objectGroups":[]},{"description":"Returns true while there are items left in the JSON array, setting a scene variable at each step ","fullName":"ArrayForEach","functionType":"Condition","name":"ArrayForEach","private":false,"sentence":"ArrayForEach _PARAM1_  as _PARAM2_ ","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"global.ssangervasi.forEachContext = global.ssangervasi.forEachContext || {}\nconst { log, parseArray, forEachContext } = global.ssangervasi\n\neventsFunctionContext.returnValue = (() => {\n    if (forEachContext.array === undefined) {\n        forEachContext.array = parseArray(\n            eventsFunctionContext.getArgument('ArrayJSON')\n        )\n    }\n\n    if (forEachContext.array.length === 0) {\n        forEachContext.array = undefined\n        return false\n    }\n\n    const currentItem = forEachContext.array.shift()\n\n    const vars = runtimeScene.getVariables()\n    const itemVar = vars.get(eventsFunctionContext.getArgument('ItemVariableName'))\n    \n    if (typeof currentItem === 'number') {\n        itemVar.setNumber(currentItem)\n    } else if (typeof currentItem === 'string') {\n        itemVar.setString(currentItem)\n    } else {\n        itemVar.setString(JSON.stringify(currentItem))\n    }\n\n    return true\n})()","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"ArrayJSON","longDescription":"","name":"ArrayJSON","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"Name of the scene variable that will be filled with the current item","longDescription":"","name":"ItemVariableName","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"ArrayItem _PARAM1_[_PARAM2_] ","fullName":"ArrayItem","functionType":"StringExpression","name":"ArrayItem","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const { parseArray } = global.ssangervasi\n\neventsFunctionContext.returnValue = (() => {\n    const arr = parseArray(\n        eventsFunctionContext.getArgument('ArrayJSON')\n    )\n    if (arr.length === 0 ) {\n        return ''\n    }\n\n    let index = Math.floor(\n        eventsFunctionContext.getArgument('Index')\n    )\n    if (index < 0) {\n        index = arr.length + index\n    }\n    \n    const item = arr[index]\n    if (typeof item === 'string') {\n        return item\n    } else if (item === undefined) {\n        return ''\n    } else  {\n        return JSON.stringify(item)\n    }\n})()","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"ArrayJSON","longDescription":"","name":"ArrayJSON","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"Index","longDescription":"","name":"Index","optional":false,"supplementaryInformation":"","type":"expression"}],"objectGroups":[]},{"description":"ArrayLength _PARAM1_","fullName":"ArrayLength","functionType":"Expression","name":"ArrayLength","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const { parseArray } = global.ssangervasi\n\neventsFunctionContext.returnValue = (() => {\n    return parseArray(\n        eventsFunctionContext.getArgument('ArrayJSON')\n    ).length\n})()","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"ArrayJSON","longDescription":"","name":"ArrayJSON","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"StrMatches","fullName":"StrMatches","functionType":"Condition","name":"StrMatches","private":false,"sentence":"_PARAM1_ StrMatches _PARAM2_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"eventsFunctionContext.returnValue = (() => {\n    const patternArg = eventsFunctionContext.getArgument('Pattern')\n    let pattern = new RegExp(patternArg)\n    const reMatch = patternArg.match(new RegExp('^/(.*)/.*$'))\n\n    if (reMatch) {\n        pattern = new RegExp(reMatch[1], reMatch[2])\n    }\n\n    const strToMatch = eventsFunctionContext.getArgument('StrToMatch')\n    return pattern.test(strToMatch)\n})()\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":true}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"ToMatch","longDescription":"","name":"StrToMatch","optional":false,"supplementaryInformation":"","type":"string"},{"codeOnly":false,"defaultValue":"","description":"Pattern","longDescription":"","name":"Pattern","optional":false,"supplementaryInformation":"","type":"string"}],"objectGroups":[]},{"description":"TimeMs","fullName":"TimeMs","functionType":"Expression","name":"TimeMs","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"eventsFunctionContext.returnValue = Date.now()\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[],"objectGroups":[]},{"description":"ToCoords(_PARAM1_, _PARAM2_","fullName":"ToCoords","functionType":"StringExpression","name":"ToCoords","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const toCoords = () => {\n    /** @type Number */\n    const x = eventsFunctionContext.getArgument(\"X\")\n    /** @type Number */\n    const y = eventsFunctionContext.getArgument(\"Y\")\n    return `(${x.toFixed(2)}, ${y.toFixed(2)})`\n}\n\neventsFunctionContext.returnValue = toCoords()","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"X","longDescription":"","name":"X","optional":false,"supplementaryInformation":"","type":"expression"},{"codeOnly":false,"defaultValue":"","description":"Y","longDescription":"","name":"Y","optional":false,"supplementaryInformation":"","type":"expression"}],"objectGroups":[]}],"eventsBasedBehaviors":[{"description":"","fullName":"TextMarquee","name":"TextMarquee","objectType":"TextObject::Text","eventsFunctions":[{"description":"","fullName":"","functionType":"Action","name":"doStepPreEvents","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"DepartScene"},"parameters":[""],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const { countLines } = global.ssangervasi\nconst [textObj] = objects\nconst vars = textObj.getVariables()\nconst originalTextVar = vars.get('OriginalText')\nconst maxCharsVar = vars.get('MaxChars')\nconst maxLinesVar = vars.get('MaxLines')\n\nconst originalText = textObj.getString()\n\nmaxCharsVar.setNumber(originalText.split(/\\s+/).join(' ').length)\nmaxLinesVar.setNumber(countLines(originalText))\n\noriginalTextVar.setString(originalText)\ntextObj.setString('')\n\n","parameterObjects":"Object","useStrict":true,"eventsSheetExpanded":false},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjetTxt"},"parameters":["Object","Message","=","\"0\""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"ModVarObjetTxt"},"parameters":["Object","Message","=","Object.Behavior::PropertyMessage()"],"subInstructions":[]}],"events":[]}]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"TextObject::Text","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_utils::TextMarquee","type":"behavior"}],"objectGroups":[]},{"description":"marquee","fullName":"marquee","functionType":"Action","name":"marquee","private":false,"sentence":"_PARAM0_ marquee","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"srs_utils::Throttle"},"parameters":["","Object","\"text_throttle\"","Object.Behavior::ThrottleMs()",""],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"const { countLines, log } = global.ssangervasi\n\nconst [textObj] = objects\nconst vars = textObj.getVariables()\nconst endIndexVar = vars.get('EndIndex')\nconst maxLines = vars.get('MaxLines').getAsNumber()\nconst message = vars.get('Message').getAsString()\nconst maxChars = vars.get('MaxChars').getAsNumber()\n\nconst endIndex = endIndexVar.getAsNumber() + 1\nconst startIndex = Math.max(0, endIndex - maxChars)\nconst characterLimitedMessage = message.slice(startIndex, endIndex + 1)\n\nconst excessLines = Math.max(0, countLines(characterLimitedMessage) - maxLines)\nconst lineLimitedMessage = characterLimitedMessage.split('\\n').slice(excessLines).join('\\n')\n\nendIndexVar.setNumber(endIndex)\ntextObj.setString(lineLimitedMessage)\n","parameterObjects":"Object","useStrict":true,"eventsSheetExpanded":false}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"TextObject::Text","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_utils::TextMarquee","type":"behavior"}],"objectGroups":[]},{"description":"ThrottleMs","fullName":"ThrottleMs","functionType":"Expression","name":"ThrottleMs","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnNumber"},"parameters":["srs_utils::ms(Object.Behavior::PropertyTotalSeconds()) / StrLength(Object.VariableString(Message))"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"TextObject::Text","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_utils::TextMarquee","type":"behavior"}],"objectGroups":[]},{"description":"IsFinished","fullName":"IsFinished","functionType":"Condition","name":"IsFinished","private":false,"sentence":"_PARAM0_ IsFinished","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"eventsFunctionContext.returnValue = (() => {\n    const [textObj] = objects\n    const vars = textObj.getVariables()\n    const endIndex = vars.get('EndIndex').getAsNumber()\n    const message = vars.get('Message').getAsString()\n\n    return message.length <= endIndex \n})()\n","parameterObjects":"Object","useStrict":true,"eventsSheetExpanded":false},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"TextObject::Text","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_utils::TextMarquee","type":"behavior"}],"objectGroups":[]}],"propertyDescriptors":[{"value":"5","type":"Number","label":"TotalSeconds","description":"","extraInformation":[],"hidden":false,"name":"TotalSeconds"},{"value":"Marquee de Sade","type":"String","label":"Message - Set instance variable to override","description":"","extraInformation":[],"hidden":false,"name":"Message"}]},{"description":"https://github.com/4ian/GDevelop/issues/1449","fullName":"","name":"RescaledText","objectType":"TextObject::Text","eventsFunctions":[{"description":"","fullName":"","functionType":"Action","name":"doStepPreEvents","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"DepartScene"},"parameters":[""],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Object","TextScaleFactor","=","Object.Behavior::PropertyScaleFactor()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"TextObject::SetPadding"},"parameters":["Object","=","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Object","OriginalWidth","=","Object.Width()"],"subInstructions":[]},{"type":{"inverted":false,"value":"TextObject::WrappingWidth"},"parameters":["Object","*","Object.Variable(TextScaleFactor)"],"subInstructions":[]},{"type":{"inverted":false,"value":"TextObject::Size"},"parameters":["Object","*","Object.Variable(TextScaleFactor)"],"subInstructions":[]},{"type":{"inverted":false,"value":"TextObject::Scale"},"parameters":["Object","=","Object.Variable(OriginalWidth)/Object.Width()"],"subInstructions":[]},{"type":{"inverted":false,"value":"MettreXY"},"parameters":["Object","=","Object.X()","=","Object.Y()"],"subInstructions":[]}],"events":[]}]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"TextObject::Text","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_utils::RescaledText","type":"behavior"}],"objectGroups":[]}],"propertyDescriptors":[{"value":"10","type":"Number","label":"ScaleFactor","description":"","extraInformation":[],"hidden":false,"name":"ScaleFactor"}]}]},{"author":"","description":"","extensionNamespace":"","fullName":"","helpPath":"","iconUrl":"","name":"srs_gnop","previewIconUrl":"","shortDescription":"","version":"","tags":[],"dependencies":[],"eventsFunctions":[{"description":"","fullName":"","functionType":"Action","name":"import","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::JsCode","inlineCode":"class e{constructor(e){this.M=null,this.P=null,this.T=e}type(t){return new e(t)}payload(){return new e(this.T)}message(e){return this.T===e.type}build(e){return e}}const t=new e(\"\");t.type(\"echo\").payload(),t.type(\"session.created\").payload(),t.type(\"session.closed\").payload();const s=()=>\"hi\";t.type(\"horse\");export{s as hello};\n//# sourceMappingURL=gnop.modern.js.map\n","parameterObjects":"","useStrict":true,"eventsSheetExpanded":false}],"parameters":[],"objectGroups":[]}],"eventsBasedBehaviors":[{"description":"","fullName":"","name":"Paddle","objectType":"","eventsFunctions":[{"description":"","fullName":"","functionType":"Action","name":"doStepPreEvents","private":false,"sentence":"","events":[{"disabled":true,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Paddle","ControlLength","=","300 * Paddle.Physics2::Density()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyForce"},"parameters":["Paddle","Physics2","0","-1 * Paddle.Variable(ControlLength)","Paddle.Physics2::MassCenterX()","Paddle.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyForce"},"parameters":["Paddle","Physics2","0","Paddle.Variable(ControlLength)","Paddle.Physics2::MassCenterX()","Paddle.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]}]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_gnop::Paddle","type":"behavior"}],"objectGroups":[]},{"description":"IsPressingUp","fullName":"IsPressingUp","functionType":"Condition","name":"IsPressingUp","private":false,"sentence":"_PARAM0_ IsPressingUp","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":[""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjet"},"parameters":["Object","Player","=","1"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyPressed"},"parameters":["","x"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":["True"],"subInstructions":[]}],"events":[]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjet"},"parameters":["Object","Player","=","2"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyPressed"},"parameters":["","m"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":["True"],"subInstructions":[]}],"events":[]}]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_gnop::Paddle","type":"behavior"}],"objectGroups":[]},{"description":"IsPressingDown","fullName":"IsPressingDown","functionType":"Condition","name":"IsPressingDown","private":false,"sentence":"_PARAM0_ IsPressingDown ","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":[""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjet"},"parameters":["Object","Player","=","1"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyPressed"},"parameters":["","z"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":["True"],"subInstructions":[]}],"events":[]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjet"},"parameters":["Object","Player","=","2"],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"KeyPressed"},"parameters":["","n"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":["True"],"subInstructions":[]}],"events":[]}]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_gnop::Paddle","type":"behavior"}],"objectGroups":[]},{"description":"IsPlayer","fullName":"IsPlayer","functionType":"Condition","name":"IsPlayer","private":false,"sentence":"_PARAM0_ IsPlayer _PARAM2_","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":[""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"VarObjet"},"parameters":["Object","Player","=","GetArgumentAsNumber(\"Number\")"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"SetReturnBoolean"},"parameters":["True"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_gnop::Paddle","type":"behavior"},{"codeOnly":false,"defaultValue":"","description":"Number","longDescription":"","name":"Number","optional":false,"supplementaryInformation":"","type":"expression"}],"objectGroups":[]},{"description":"handlePhysics","fullName":"handlePhysics","functionType":"Action","name":"handlePhysics","private":false,"sentence":"_PARAM0_ handlePhysics ","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[{"disabled":true,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"srs_utils::consoleLog"},"parameters":["","ToString(Object.Physics2::Density())",""],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Object","ControlLength","=","300 * Object.Physics2::Density()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"Physics2::LinearVelocityX"},"parameters":["Object","Physics2","=","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"Physics2::LinearVelocityY"},"parameters":["Object","Physics2","=","clamp(-1000, Object.Physics2::LinearVelocityY(), 1000)"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"srs_gnop::Paddle::IsPressingDown"},"parameters":["Object","Behavior",""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyForce"},"parameters":["Object","Physics2","0","Object.Variable(ControlLength)","Object.Physics2::MassCenterX()","Object.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"srs_gnop::Paddle::IsPressingUp"},"parameters":["Object","Behavior",""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"Physics2::ApplyForce"},"parameters":["Object","Physics2","0","-1 * Object.Variable(ControlLength)","Object.Physics2::MassCenterX()","Object.Physics2::MassCenterY()"],"subInstructions":[]}],"events":[]}]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_gnop::Paddle","type":"behavior"},{"codeOnly":false,"defaultValue":"","description":"Physics2","longDescription":"","name":"Physics2","optional":false,"supplementaryInformation":"Physics2::Physics2Behavior","type":"behavior"}],"objectGroups":[]},{"description":"handleHitZone","fullName":"handleHitZone","functionType":"Action","name":"handleHitZone","private":false,"sentence":"_PARAM0_ handleHitZone","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"DepartScene"},"parameters":[""],"subInstructions":[]}],"actions":[],"events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"CollisionNP"},"parameters":["Object","HitZone","","",""],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"LinkedObjects::LinkObjects"},"parameters":["","Object","HitZone"],"subInstructions":[]}],"events":[]}]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"LinkedObjects::PickObjectsLinkedTo"},"parameters":["","HitZone","Object"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"MettreAutour"},"parameters":["HitZone","Object","0","0"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_gnop::Paddle","type":"behavior"},{"codeOnly":false,"defaultValue":"","description":"HitZone","longDescription":"","name":"HitZone","optional":false,"supplementaryInformation":"Sprite","type":"objectList"}],"objectGroups":[]}],"propertyDescriptors":[]},{"description":"","fullName":"","name":"Ball","objectType":"","eventsFunctions":[{"description":"","fullName":"","functionType":"Action","name":"doStepPreEvents","private":false,"sentence":"","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"CenterX"},"parameters":["Object","<","0 - (2 * Object.Width())"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"MettreX"},"parameters":["Object","=","0 + (0.5 * Object.Width())"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"CenterX"},"parameters":["Object",">","CameraWidth(\"\", 1) + (2 * Object.Width())"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"MettreX"},"parameters":["Object","=","CameraWidth(\"\", 1) - (0.5 * Object.Width())"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"CenterY"},"parameters":["Object","<","0 - (2 * Object.Height())"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"MettreY"},"parameters":["Object","=","0 + (0.5 * Object.Height())"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[{"type":{"inverted":false,"value":"CenterY"},"parameters":["Object",">","CameraHeight(\"\", 1) + (2 * Object.Height())"],"subInstructions":[]}],"actions":[{"type":{"inverted":false,"value":"MettreY"},"parameters":["Object","=","CameraHeight(\"\", 1) - (0.5 * Object.Height())"],"subInstructions":[]}],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_gnop::Ball","type":"behavior"}],"objectGroups":[]},{"description":"handlePhysics","fullName":"handlePhysics","functionType":"Action","name":"handlePhysics","private":false,"sentence":"_PARAM0_ handlePhysics ","events":[{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Object","VelocityMinX","=","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Object","VelocityMinY","=","0"],"subInstructions":[]},{"type":{"inverted":false,"value":"ModVarObjet"},"parameters":["Object","VelocityMax","=","2000"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Comment","color":{"b":109,"g":230,"r":255,"textB":0,"textG":0,"textR":0},"comment":"Clamp to remove ball problems","comment2":""},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[{"type":{"inverted":false,"value":"Physics2::LinearVelocityX"},"parameters":["Object","Physics2","=","srs_utils::ClampAbs(Object.Physics2::LinearVelocityX(), Object.Variable(VelocityMinX), Object.Variable(VelocityMax))"],"subInstructions":[]},{"type":{"inverted":false,"value":"Physics2::LinearVelocityY"},"parameters":["Object","Physics2","=","srs_utils::ClampAbs(Object.Physics2::LinearVelocityY(), Object.Variable(VelocityMinY), Object.Variable(VelocityMax))"],"subInstructions":[]}],"events":[]},{"disabled":false,"folded":false,"type":"BuiltinCommonInstructions::Standard","conditions":[],"actions":[],"events":[]}],"parameters":[{"codeOnly":false,"defaultValue":"","description":"Object","longDescription":"","name":"Object","optional":false,"supplementaryInformation":"","type":"object"},{"codeOnly":false,"defaultValue":"","description":"Behavior","longDescription":"","name":"Behavior","optional":false,"supplementaryInformation":"srs_gnop::Ball","type":"behavior"},{"codeOnly":false,"defaultValue":"","description":"Physics2","longDescription":"","name":"Physics2","optional":false,"supplementaryInformation":"Physics2::Physics2Behavior","type":"behavior"}],"objectGroups":[]}],"propertyDescriptors":[]}]}],"externalLayouts":[],"externalSourceFiles":[]}