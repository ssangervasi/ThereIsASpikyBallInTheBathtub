{
  "author": "",
  "description": "",
  "extensionNamespace": "",
  "fullName": "",
  "helpPath": "",
  "iconUrl": "",
  "name": "srs_gnop",
  "previewIconUrl": "",
  "shortDescription": "",
  "version": "",
  "tags": [],
  "dependencies": [],
  "eventsFunctions": [
    {
      "description": "",
      "fullName": "",
      "functionType": "Action",
      "name": "onFirstSceneLoaded",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "srs_gnop::injectGnop"
              },
              "parameters": [
                "",
                ""
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "ModVarSceneTxt"
              },
              "parameters": [
                "LatestUpdateJSON",
                "=",
                "\"null\""
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "",
      "functionType": "Action",
      "name": "onScenePreEvents",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "srs_gnop::IsJoined"
              },
              "parameters": [
                "",
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [],
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Refresh LatestUpdate",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const client = globalThis.Gnop.client\n\nconst vars = runtimeScene.getVariables()\nconst latestUpdateVar = vars.get(\"LatestUpdateJSON\")\n\nconst latestUpdate = client.getUpdate() || null\nlatestUpdateVar.setString(JSON.stringify(latestUpdate))\n",
                  "parameterObjects": "",
                  "useStrict": true,
                  "eventsSheetExpanded": false
                }
              ],
              "parameters": []
            }
          ]
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "",
      "functionType": "Action",
      "name": "onScenePostEvents",
      "private": false,
      "sentence": "",
      "events": [],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "injectGnop",
      "functionType": "Action",
      "name": "injectGnop",
      "private": false,
      "sentence": "injectGnop",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": [],
              "subInstructions": []
            }
          ],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "// inject \"dist/gnop.modern.js\"\n\nfunction t(){return(t=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t}).apply(this,arguments)}class e{constructor(t){this.M=null,this.P=null,this.T=t}type(t){return new e(t)}payload(){return new e(this.T)}message(t){return this.T===t.type}build(t){return t}}const s=new e(\"\"),n=s.type(\"echo\").payload(),i=s.type(\"gnop.join\").payload(),o=s.type(\"gnop.rejoin\").payload(),a=s.type(\"gnop.joined\").payload(),r=s.type(\"gnop.playerUpdate\").payload(),d=s.type(\"gnop.point\").payload(),l=s.type(\"session.created\").payload();s.type(\"session.closed\").payload();const p=()=>{const t={};return t.promise=new Promise((e,s)=>{t.resolve=e,t.reject=s}),t};Object.assign(globalThis,{Gnop:{WsClient:class{constructor(e){this.options=e,this.state={state:\"init\"},this.promises={},this.updates=[],this.handleMessage=t=>{const e=(t=>{let e,s=\"\";try{e=JSON.parse(t.toString())}catch(t){s=t.message}return\"\"!==s?{type:\"error\",sessionUuid:\"\",payload:{error:s}}:\"object\"==typeof(n=e)&&null!==n&&\"type\"in n?e:{type:\"error\",sessionUuid:\"\",payload:{error:\"Invalid message structure\"}};var n})(t.data);return l.message(e)?this.handleCreated(e):a.message(e)?this.handleJoined(e):r.message(e)?this.handlePlayerUpdate(e):void(n.message(e)?console.log(\"Client heard:\",e):console.warn(\"Unhandled message:\",e))},this.handleCreated=e=>{var s;\"creating\"===this.state.state?(console.info(\"Created\",e.sessionUuid),this.state=t({},this.state,{state:\"created\",sessionUuid:e.sessionUuid}),null==(s=this.promises.connect)||s.resolve()):console.warn(\"Received created message while in state:\",this.state.state)},this.handleJoined=e=>{var s;if(\"joining\"!==this.state.state)return void console.warn(\"Received joined message while in state:\",this.state.state);const{sessionUuid:n}=this.state;console.log(\"Joined\",n);const i=e.payload.find(t=>t.sessionUuid===n),o=e.payload.find(t=>t.sessionUuid!==n);this.state=t({},this.state,{self:i,opponent:o}),i&&o?(this.state=t({},this.state,{state:\"joined\",self:i,opponent:o}),null==(s=this.promises.join)||s.resolve()):console.warn(\"Partially joined\",e)},this.handlePlayerUpdate=e=>{\"joined\"===this.state.state?(console.log(\"Received update\",e.payload),this.state=t({},this.state,{opponent:e.payload.player}),this.updates.push(t({receivedAt:Date.now()},e.payload))):console.warn(\"Received update message while in state:\",this.state.state)},this.handleOpen=()=>{console.info(\"Opened\")},this.handleClose=()=>{this.state={state:\"init\"},console.info(\"Closed\")},this.handleError=()=>{this.state={state:\"init\"},console.info(\"Errored\")}}connect(){console.log(\"Connecting\");const t=new WebSocket(this.options.host);return this.state={state:\"creating\",ws:t},t.onopen=this.handleOpen,t.onclose=this.handleClose,t.onerror=this.handleError,t.addEventListener(\"message\",this.handleMessage),this.promises.connect=p(),this.promises.connect.promise}join(){if(\"created\"!==this.state.state)return void console.warn(\"Cannot join from state:\",this.state);const e=i.build({type:\"gnop.join\",sessionUuid:this.state.sessionUuid,payload:{name:this.options.name||\"Name\"}});return console.info(\"Client joining:\",e),this.state=t({},this.state,{state:\"joining\"}),this.state.ws.send(JSON.stringify(e)),this.promises.join=p(),this.promises.join.promise}rejoin(e){if(\"created\"!==this.state.state)return void console.warn(\"Cannot join from state:\",this.state);const s=o.build({type:\"gnop.rejoin\",sessionUuid:this.state.sessionUuid,payload:{previousSessionUuid:e}});return console.info(\"Client joining:\",s),this.state=t({},this.state,{state:\"joining\"}),this.state.ws.send(JSON.stringify(s)),this.promises.join=p(),this.promises.join.promise}speak(){if(\"created\"!==this.state.state)return void console.warn(\"Cannot speak from state:\",this.state);const t=n.build({type:\"echo\",sessionUuid:this.state.sessionUuid,payload:(new Date).toISOString()});console.info(\"Client speaking:\",t),this.state.ws.send(JSON.stringify(t))}point(t,e){if(\"joined\"!==this.state.state)return void console.warn(\"Cannot send point from state:\",this.state);const s=d.build({type:\"gnop.point\",sessionUuid:this.state.sessionUuid,payload:{x:t,y:e}});console.info(\"Client sending point:\",s),this.state.ws.send(JSON.stringify(s))}sendUpdate(t){if(\"joined\"!==this.state.state)return void console.warn(\"Cannot send point from state:\",this.state);const e=r.build({type:\"gnop.playerUpdate\",sessionUuid:this.state.sessionUuid,payload:{player:this.state.self,position:t}});console.info(\"Client sending point:\",e),this.state.ws.send(JSON.stringify(e))}getUpdate(){return this.updates.shift()}}}});\n//# sourceMappingURL=gnop.modern.js.map\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "connect",
      "functionType": "Action",
      "name": "connect",
      "private": false,
      "sentence": "connect",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nif (!Gnop.client) {\n    Gnop.client = new Gnop.WsClient({\n        // host: 'ws://sangervasi.net',\n        host: 'ws://localhost:42992',\n        name: \"Game WS test\"\n    })\n}\n\nconst connect = async () => {\n    const client = Gnop.client\n    \n    console.log('Connecting', client)\n    await client.connect()\n    console.log('Connected', client)\n} \n\nconnect()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "join",
      "functionType": "Action",
      "name": "join",
      "private": false,
      "sentence": "join",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nif (!Gnop.client) {\n    console.warn('Cannot join with no client')\n    return\n}\n\nconst join = async () => {\n    const client = Gnop.client\n    \n    console.log('Joining', client)\n    await client.join()\n    console.log('Joined', client)\n} \n\njoin()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "Client State",
      "fullName": "State",
      "functionType": "StringExpression",
      "name": "State",
      "private": false,
      "sentence": "IsConnected",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    const client = Gnop.client\n    if (!client) {\n        return 'none'\n    }\n    return client.state.state\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "IsConnected",
      "functionType": "Condition",
      "name": "IsConnected",
      "private": false,
      "sentence": "IsConnected",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnBoolean"
              },
              "parameters": [
                "False"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "StrEqual"
              },
              "parameters": [
                "srs_gnop::State()",
                "=",
                "\"created\""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnBoolean"
              },
              "parameters": [
                "True"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "IsJoined",
      "functionType": "Condition",
      "name": "IsJoined",
      "private": false,
      "sentence": "IsJoined",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnBoolean"
              },
              "parameters": [
                "False"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "StrEqual"
              },
              "parameters": [
                "srs_gnop::State()",
                "=",
                "\"joined\""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnBoolean"
              },
              "parameters": [
                "True"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "LatestUpdate as JSON",
      "fullName": "LatestUpdate",
      "functionType": "StringExpression",
      "name": "LatestUpdate",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnString"
              },
              "parameters": [
                "VariableString(LatestUpdateJSON)"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "1 => Left paddle, 2 => Right Paddle, 0 => Not joined",
      "fullName": "Player",
      "functionType": "Expression",
      "name": "SelfNumber",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop?.client?.state?.self?.number || 0\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "1 => Left paddle, 2 => Right Paddle, 0 => Not joined",
      "fullName": "Player",
      "functionType": "Expression",
      "name": "OpponentNumber",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop?.client?.state?.opponent?.number || 0\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    }
  ],
  "eventsBasedBehaviors": [
    {
      "description": "",
      "fullName": "",
      "name": "Paddle",
      "objectType": "",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": true,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Paddle",
                        "ControlLength",
                        "=",
                        "300 * Paddle.Physics2::Density()"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::ApplyForce"
                      },
                      "parameters": [
                        "Paddle",
                        "Physics2",
                        "0",
                        "-1 * Paddle.Variable(ControlLength)",
                        "Paddle.Physics2::MassCenterX()",
                        "Paddle.Physics2::MassCenterY()"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::ApplyForce"
                      },
                      "parameters": [
                        "Paddle",
                        "Physics2",
                        "0",
                        "Paddle.Variable(ControlLength)",
                        "Paddle.Physics2::MassCenterX()",
                        "Paddle.Physics2::MassCenterY()"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPressingUp",
          "fullName": "IsPressingUp",
          "functionType": "Condition",
          "name": "IsPressingUp",
          "private": false,
          "sentence": "_PARAM0_ IsPressingUp",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "1"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "x"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "2"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "m"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPressingDown",
          "fullName": "IsPressingDown",
          "functionType": "Condition",
          "name": "IsPressingDown",
          "private": false,
          "sentence": "_PARAM0_ IsPressingDown ",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "1"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "z"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "2"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "n"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPlayer",
          "fullName": "IsPlayer",
          "functionType": "Condition",
          "name": "IsPlayer",
          "private": false,
          "sentence": "_PARAM0_ IsPlayer _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "GetArgumentAsNumber(\"Number\")"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Number",
              "longDescription": "",
              "name": "Number",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handlePhysics",
          "fullName": "handlePhysics",
          "functionType": "Action",
          "name": "handlePhysics",
          "private": false,
          "sentence": "_PARAM0_ handlePhysics ",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Physics guards",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityX"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "0"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityY"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "clamp(-1000, Object.Physics2::LinearVelocityY(), 1000)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Controls for Self",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "srs_gnop::Paddle::IsPlayer"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "srs_gnop::SelfNumber()",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "ControlLength",
                            "=",
                            "300 * Object.Physics2::Density()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPressingDown"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::ApplyForce"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "0",
                            "Object.Variable(ControlLength)",
                            "Object.Physics2::MassCenterX()",
                            "Object.Physics2::MassCenterY()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPressingUp"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::ApplyForce"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "0",
                            "-1 * Object.Variable(ControlLength)",
                            "Object.Physics2::MassCenterX()",
                            "Object.Physics2::MassCenterY()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": false,
                      "name": "Queue updates ",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjetTxt"
                              },
                              "parameters": [
                                "Object",
                                "OutgoingUpdate.State",
                                "=",
                                "\"Pending\""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "OutgoingUpdate.X",
                                "=",
                                "Object.X()"
                              ],
                              "subInstructions": []
                            },
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "OutgoingUpdate.Y",
                                "=",
                                "Object.Y()"
                              ],
                              "subInstructions": []
                            },
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "OutgoingUpdate.DX",
                                "=",
                                "Object.Physics2::LinearVelocityX()"
                              ],
                              "subInstructions": []
                            },
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "OutgoingUpdate.DY",
                                "=",
                                "Object.Physics2::LinearVelocityY()"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        }
                      ],
                      "parameters": []
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Updates from Opponent",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ObjectVariableChildExists"
                      },
                      "parameters": [
                        "Object",
                        "IncomingUpdate",
                        "\"State\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "MettreY"
                          },
                          "parameters": [
                            "Object",
                            "=",
                            "Object.Variable(IncomingUpdate.Y)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::LinearVelocityY"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "=",
                            "Object.Variable(IncomingUpdate.DY)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ObjectVariableClearChildren"
                          },
                          "parameters": [
                            "Object",
                            "IncomingUpdate"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Physics2",
              "longDescription": "",
              "name": "Physics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleHitZone",
          "fullName": "handleHitZone",
          "functionType": "Action",
          "name": "handleHitZone",
          "private": false,
          "sentence": "_PARAM0_ handleHitZone _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Object",
                        "HitZone",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "HitZone"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "HitZone",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreAutour"
                  },
                  "parameters": [
                    "HitZone",
                    "Object",
                    "0",
                    "0"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "HitZone",
              "longDescription": "",
              "name": "HitZone",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "The network stuff",
          "fullName": "handleUpdates",
          "functionType": "Action",
          "name": "handleUpdates",
          "private": false,
          "sentence": "_PARAM0_ handleUpdates",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Incoming updates",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "srs_gnop::Paddle::IsPlayer"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "srs_gnop::OpponentNumber()",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjetTxt"
                          },
                          "parameters": [
                            "Object",
                            "LatestUpdateJSON",
                            "=",
                            "srs_gnop::LatestUpdate()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": "\n/**\n * @namespace Gnop\n */\n\n/**\n * @typedef {Object} Gnop.Player\n * @property {string} sessionUuid\n * @property {string} state\n * @property {string} name\n * @property {number} number\n */\n\n/**\n * @typedef {Object} Gnop.Position\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\t\n */\n\n/**\n * @typedef {Object} Gnop.PlayerUpdate\n * @property {Gnop.Player} player\n * @property {Gnop.Position} position\n */\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst latestUpdateJsonVar = vars.get(\"LatestUpdateJSON\")\nconst playerVar = vars.get(\"Player\")\n\nconst incomingUpdateVar = vars.get(\"IncomingUpdate\")\nincomingUpdateVar.clearChildren()\n\n/** @type Gnop.PlayerUpdate */\nconst latestUpdate = JSON.parse(latestUpdateJsonVar.getAsString())\nif (latestUpdate === null) {\n    return\n}\n\nconst {\n    player,\n    position\n} = latestUpdate\n\nif (player.number !== playerVar.getAsNumber()) {\n    return\n}\n\nconst stateVar = incomingUpdateVar.getChild('State')\nconst xVar = incomingUpdateVar.getChild('X')\nconst yVar = incomingUpdateVar.getChild('Y')\nconst dxVar = incomingUpdateVar.getChild('DX')\nconst dyVar = incomingUpdateVar.getChild('DY')\n\nstateVar.setString(player.state)\nxVar.setNumber(position.x)\nyVar.setNumber(position.y)\ndxVar.setNumber(position.dx)\ndyVar.setNumber(position.dy)\n\n",
                      "parameterObjects": "Object",
                      "useStrict": true,
                      "eventsSheetExpanded": false
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Outgoing updates",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "srs_gnop::Paddle::IsPlayer"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "srs_gnop::SelfNumber()",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "srs_utils::Throttle"
                      },
                      "parameters": [
                        "",
                        "\"OutgoingUpdates\"",
                        "10",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": "const obj = objects[0]\nconst vars = obj.getVariables()\nconst playerVar = vars.get(\"Player\")\n\nconst outgoingUpdateVar = vars.get(\"OutgoingUpdate\")\nif (!outgoingUpdateVar.hasChild(\"State\")) {\n    return\n}\n\nconst xVar = outgoingUpdateVar.getChild('X')\nconst yVar = outgoingUpdateVar.getChild('Y')\nconst dxVar = outgoingUpdateVar.getChild('DX')\nconst dyVar = outgoingUpdateVar.getChild('DY')\n\nconst { Gnop } = globalThis\nconst { client } = Gnop\n\nclient.sendUpdate({\n    x: xVar.getAsNumber(),\n    y: yVar.getAsNumber(),\n    dx: dxVar.getAsNumber(),\n    yx: dyVar.getAsNumber(),\n})\n\noutgoingUpdateVar.clearChildren()\n",
                      "parameterObjects": "Object",
                      "useStrict": true,
                      "eventsSheetExpanded": true
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": []
    },
    {
      "description": "",
      "fullName": "",
      "name": "Ball",
      "objectType": "",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "CenterX"
                  },
                  "parameters": [
                    "Object",
                    "<",
                    "0 - (2 * Object.Width())"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "0 + (0.5 * Object.Width())"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "CenterX"
                  },
                  "parameters": [
                    "Object",
                    ">",
                    "CameraWidth(\"\", 1) + (2 * Object.Width())"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "CameraWidth(\"\", 1) - (0.5 * Object.Width())"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "CenterY"
                  },
                  "parameters": [
                    "Object",
                    "<",
                    "0 - (2 * Object.Height())"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreY"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "0 + (0.5 * Object.Height())"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "CenterY"
                  },
                  "parameters": [
                    "Object",
                    ">",
                    "CameraHeight(\"\", 1) + (2 * Object.Height())"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreY"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "CameraHeight(\"\", 1) - (0.5 * Object.Height())"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handlePhysics",
          "fullName": "handlePhysics",
          "functionType": "Action",
          "name": "handlePhysics",
          "private": false,
          "sentence": "_PARAM0_ handlePhysics ",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "VelocityMinX",
                    "=",
                    "0"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "VelocityMinY",
                    "=",
                    "0"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "VelocityMax",
                    "=",
                    "2000"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Clamp to remove ball problems",
              "comment2": ""
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "Physics2::LinearVelocityX"
                  },
                  "parameters": [
                    "Object",
                    "Physics2",
                    "=",
                    "srs_utils::ClampAbs(Object.Physics2::LinearVelocityX(), Object.Variable(VelocityMinX), Object.Variable(VelocityMax))"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "Physics2::LinearVelocityY"
                  },
                  "parameters": [
                    "Object",
                    "Physics2",
                    "=",
                    "srs_utils::ClampAbs(Object.Physics2::LinearVelocityY(), Object.Variable(VelocityMinY), Object.Variable(VelocityMax))"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Physics2",
              "longDescription": "",
              "name": "Physics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": []
    }
  ]
}