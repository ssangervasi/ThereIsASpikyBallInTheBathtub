{
  "author": "",
  "description": "",
  "extensionNamespace": "",
  "fullName": "",
  "helpPath": "",
  "iconUrl": "",
  "name": "srs_gnop",
  "previewIconUrl": "",
  "shortDescription": "",
  "version": "",
  "tags": [],
  "dependencies": [],
  "eventsFunctions": [
    {
      "description": "",
      "fullName": "",
      "functionType": "Action",
      "name": "onFirstSceneLoaded",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "srs_gnop::injectGnop"
              },
              "parameters": [
                "",
                ""
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "ModVarSceneTxt"
              },
              "parameters": [
                "LatestUpdateJSON",
                "=",
                "\"null\""
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "injectGnop",
      "functionType": "Action",
      "name": "injectGnop",
      "private": false,
      "sentence": "injectGnop",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": [],
              "subInstructions": []
            }
          ],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "// inject \"ts/dist/gnop.modern.js\"\n\nfunction t(){return(t=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var e in r)Object.prototype.hasOwnProperty.call(r,e)&&(t[e]=r[e])}return t}).apply(this,arguments)}var n,r=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},e=(function(t,n){(function(){var e,i=\"Expected a function\",u=\"__lodash_hash_undefined__\",o=\"__lodash_placeholder__\",a=32,f=128,c=1/0,s=9007199254740991,l=NaN,h=4294967295,p=[[\"ary\",f],[\"bind\",1],[\"bindKey\",2],[\"curry\",8],[\"curryRight\",16],[\"flip\",512],[\"partial\",a],[\"partialRight\",64],[\"rearg\",256]],v=\"[object Arguments]\",_=\"[object Array]\",d=\"[object Boolean]\",g=\"[object Date]\",y=\"[object Error]\",w=\"[object Function]\",b=\"[object GeneratorFunction]\",m=\"[object Map]\",j=\"[object Number]\",x=\"[object Object]\",A=\"[object Promise]\",k=\"[object RegExp]\",U=\"[object Set]\",O=\"[object String]\",R=\"[object Symbol]\",I=\"[object WeakMap]\",S=\"[object ArrayBuffer]\",C=\"[object DataView]\",E=\"[object Float32Array]\",z=\"[object Float64Array]\",L=\"[object Int8Array]\",T=\"[object Int16Array]\",B=\"[object Int32Array]\",W=\"[object Uint8Array]\",M=\"[object Uint8ClampedArray]\",D=\"[object Uint16Array]\",P=\"[object Uint32Array]\",$=/\\b__p \\+= '';/g,F=/\\b(__p \\+=) '' \\+/g,N=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,q=/&(?:amp|lt|gt|quot|#39);/g,Z=/[&<>\"']/g,J=RegExp(q.source),K=RegExp(Z.source),G=/<%-([\\s\\S]+?)%>/g,V=/<%([\\s\\S]+?)%>/g,H=/<%=([\\s\\S]+?)%>/g,Y=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,Q=/^\\w*$/,X=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,tt=/[\\\\^$.*+?()[\\]{}|]/g,nt=RegExp(tt.source),rt=/^\\s+/,et=/\\s/,it=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,ut=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,ot=/,? & /,at=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,ft=/[()=,{}\\[\\]\\/\\s]/,ct=/\\\\(\\\\)?/g,st=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,lt=/\\w*$/,ht=/^[-+]0x[0-9a-f]+$/i,pt=/^0b[01]+$/i,vt=/^\\[object .+?Constructor\\]$/,_t=/^0o[0-7]+$/i,dt=/^(?:0|[1-9]\\d*)$/,gt=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,yt=/($^)/,wt=/['\\n\\r\\u2028\\u2029\\\\]/g,bt=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\",mt=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",jt=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",xt=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",At=\"[\"+xt+\"]\",kt=\"[\"+bt+\"]\",Ut=\"\\\\d+\",Ot=\"[\"+mt+\"]\",Rt=\"[^\\\\ud800-\\\\udfff\"+xt+Ut+\"\\\\u2700-\\\\u27bf\"+mt+jt+\"]\",It=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",St=\"[^\\\\ud800-\\\\udfff]\",Ct=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",Et=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",zt=\"[\"+jt+\"]\",Lt=\"(?:\"+Ot+\"|\"+Rt+\")\",Tt=\"(?:\"+zt+\"|\"+Rt+\")\",Bt=\"(?:['’](?:d|ll|m|re|s|t|ve))?\",Wt=\"(?:['’](?:D|LL|M|RE|S|T|VE))?\",Mt=\"(?:\"+kt+\"|\"+It+\")?\",Dt=\"[\\\\ufe0e\\\\ufe0f]?\",Pt=Dt+Mt+\"(?:\\\\u200d(?:\"+[St,Ct,Et].join(\"|\")+\")\"+Dt+Mt+\")*\",$t=\"(?:\"+[\"[\\\\u2700-\\\\u27bf]\",Ct,Et].join(\"|\")+\")\"+Pt,Ft=\"(?:\"+[St+kt+\"?\",kt,Ct,Et,\"[\\\\ud800-\\\\udfff]\"].join(\"|\")+\")\",Nt=RegExp(\"['’]\",\"g\"),qt=RegExp(kt,\"g\"),Zt=RegExp(It+\"(?=\"+It+\")|\"+Ft+Pt,\"g\"),Jt=RegExp([zt+\"?\"+Ot+\"+\"+Bt+\"(?=\"+[At,zt,\"$\"].join(\"|\")+\")\",Tt+\"+\"+Wt+\"(?=\"+[At,zt+Lt,\"$\"].join(\"|\")+\")\",zt+\"?\"+Lt+\"+\"+Bt,zt+\"+\"+Wt,\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",Ut,$t].join(\"|\"),\"g\"),Kt=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\"+bt+\"\\\\ufe0e\\\\ufe0f]\"),Gt=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Vt=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],Ht=-1,Yt={};Yt[E]=Yt[z]=Yt[L]=Yt[T]=Yt[B]=Yt[W]=Yt[M]=Yt[D]=Yt[P]=!0,Yt[v]=Yt[_]=Yt[S]=Yt[d]=Yt[C]=Yt[g]=Yt[y]=Yt[w]=Yt[m]=Yt[j]=Yt[x]=Yt[k]=Yt[U]=Yt[O]=Yt[I]=!1;var Qt={};Qt[v]=Qt[_]=Qt[S]=Qt[C]=Qt[d]=Qt[g]=Qt[E]=Qt[z]=Qt[L]=Qt[T]=Qt[B]=Qt[m]=Qt[j]=Qt[x]=Qt[k]=Qt[U]=Qt[O]=Qt[R]=Qt[W]=Qt[M]=Qt[D]=Qt[P]=!0,Qt[y]=Qt[w]=Qt[I]=!1;var Xt={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},tn=parseFloat,nn=parseInt,rn=\"object\"==typeof r&&r&&r.Object===Object&&r,en=\"object\"==typeof self&&self&&self.Object===Object&&self,un=rn||en||Function(\"return this\")(),on=n&&!n.nodeType&&n,an=on&&t&&!t.nodeType&&t,fn=an&&an.exports===on,cn=fn&&rn.process,sn=function(){try{return an&&an.require&&an.require(\"util\").types||cn&&cn.binding&&cn.binding(\"util\")}catch(t){}}(),ln=sn&&sn.isArrayBuffer,hn=sn&&sn.isDate,pn=sn&&sn.isMap,vn=sn&&sn.isRegExp,_n=sn&&sn.isSet,dn=sn&&sn.isTypedArray;function gn(t,n,r){switch(r.length){case 0:return t.call(n);case 1:return t.call(n,r[0]);case 2:return t.call(n,r[0],r[1]);case 3:return t.call(n,r[0],r[1],r[2])}return t.apply(n,r)}function yn(t,n,r,e){for(var i=-1,u=null==t?0:t.length;++i<u;){var o=t[i];n(e,o,r(o),t)}return e}function wn(t,n){for(var r=-1,e=null==t?0:t.length;++r<e&&!1!==n(t[r],r,t););return t}function bn(t,n){for(var r=null==t?0:t.length;r--&&!1!==n(t[r],r,t););return t}function mn(t,n){for(var r=-1,e=null==t?0:t.length;++r<e;)if(!n(t[r],r,t))return!1;return!0}function jn(t,n){for(var r=-1,e=null==t?0:t.length,i=0,u=[];++r<e;){var o=t[r];n(o,r,t)&&(u[i++]=o)}return u}function xn(t,n){return!(null==t||!t.length)&&zn(t,n,0)>-1}function An(t,n,r){for(var e=-1,i=null==t?0:t.length;++e<i;)if(r(n,t[e]))return!0;return!1}function kn(t,n){for(var r=-1,e=null==t?0:t.length,i=Array(e);++r<e;)i[r]=n(t[r],r,t);return i}function Un(t,n){for(var r=-1,e=n.length,i=t.length;++r<e;)t[i+r]=n[r];return t}function On(t,n,r,e){var i=-1,u=null==t?0:t.length;for(e&&u&&(r=t[++i]);++i<u;)r=n(r,t[i],i,t);return r}function Rn(t,n,r,e){var i=null==t?0:t.length;for(e&&i&&(r=t[--i]);i--;)r=n(r,t[i],i,t);return r}function In(t,n){for(var r=-1,e=null==t?0:t.length;++r<e;)if(n(t[r],r,t))return!0;return!1}var Sn=Wn(\"length\");function Cn(t,n,r){var e;return r(t,function(t,r,i){if(n(t,r,i))return e=r,!1}),e}function En(t,n,r,e){for(var i=t.length,u=r+(e?1:-1);e?u--:++u<i;)if(n(t[u],u,t))return u;return-1}function zn(t,n,r){return n==n?function(t,n,r){for(var e=r-1,i=t.length;++e<i;)if(t[e]===n)return e;return-1}(t,n,r):En(t,Tn,r)}function Ln(t,n,r,e){for(var i=r-1,u=t.length;++i<u;)if(e(t[i],n))return i;return-1}function Tn(t){return t!=t}function Bn(t,n){var r=null==t?0:t.length;return r?Pn(t,n)/r:l}function Wn(t){return function(n){return null==n?e:n[t]}}function Mn(t){return function(n){return null==t?e:t[n]}}function Dn(t,n,r,e,i){return i(t,function(t,i,u){r=e?(e=!1,t):n(r,t,i,u)}),r}function Pn(t,n){for(var r,i=-1,u=t.length;++i<u;){var o=n(t[i]);o!==e&&(r=r===e?o:r+o)}return r}function $n(t,n){for(var r=-1,e=Array(t);++r<t;)e[r]=n(r);return e}function Fn(t){return t?t.slice(0,or(t)+1).replace(rt,\"\"):t}function Nn(t){return function(n){return t(n)}}function qn(t,n){return kn(n,function(n){return t[n]})}function Zn(t,n){return t.has(n)}function Jn(t,n){for(var r=-1,e=t.length;++r<e&&zn(n,t[r],0)>-1;);return r}function Kn(t,n){for(var r=t.length;r--&&zn(n,t[r],0)>-1;);return r}function Gn(t,n){for(var r=t.length,e=0;r--;)t[r]===n&&++e;return e}var Vn=Mn({À:\"A\",Á:\"A\",Â:\"A\",Ã:\"A\",Ä:\"A\",Å:\"A\",à:\"a\",á:\"a\",â:\"a\",ã:\"a\",ä:\"a\",å:\"a\",Ç:\"C\",ç:\"c\",Ð:\"D\",ð:\"d\",È:\"E\",É:\"E\",Ê:\"E\",Ë:\"E\",è:\"e\",é:\"e\",ê:\"e\",ë:\"e\",Ì:\"I\",Í:\"I\",Î:\"I\",Ï:\"I\",ì:\"i\",í:\"i\",î:\"i\",ï:\"i\",Ñ:\"N\",ñ:\"n\",Ò:\"O\",Ó:\"O\",Ô:\"O\",Õ:\"O\",Ö:\"O\",Ø:\"O\",ò:\"o\",ó:\"o\",ô:\"o\",õ:\"o\",ö:\"o\",ø:\"o\",Ù:\"U\",Ú:\"U\",Û:\"U\",Ü:\"U\",ù:\"u\",ú:\"u\",û:\"u\",ü:\"u\",Ý:\"Y\",ý:\"y\",ÿ:\"y\",Æ:\"Ae\",æ:\"ae\",Þ:\"Th\",þ:\"th\",ß:\"ss\",Ā:\"A\",Ă:\"A\",Ą:\"A\",ā:\"a\",ă:\"a\",ą:\"a\",Ć:\"C\",Ĉ:\"C\",Ċ:\"C\",Č:\"C\",ć:\"c\",ĉ:\"c\",ċ:\"c\",č:\"c\",Ď:\"D\",Đ:\"D\",ď:\"d\",đ:\"d\",Ē:\"E\",Ĕ:\"E\",Ė:\"E\",Ę:\"E\",Ě:\"E\",ē:\"e\",ĕ:\"e\",ė:\"e\",ę:\"e\",ě:\"e\",Ĝ:\"G\",Ğ:\"G\",Ġ:\"G\",Ģ:\"G\",ĝ:\"g\",ğ:\"g\",ġ:\"g\",ģ:\"g\",Ĥ:\"H\",Ħ:\"H\",ĥ:\"h\",ħ:\"h\",Ĩ:\"I\",Ī:\"I\",Ĭ:\"I\",Į:\"I\",İ:\"I\",ĩ:\"i\",ī:\"i\",ĭ:\"i\",į:\"i\",ı:\"i\",Ĵ:\"J\",ĵ:\"j\",Ķ:\"K\",ķ:\"k\",ĸ:\"k\",Ĺ:\"L\",Ļ:\"L\",Ľ:\"L\",Ŀ:\"L\",Ł:\"L\",ĺ:\"l\",ļ:\"l\",ľ:\"l\",ŀ:\"l\",ł:\"l\",Ń:\"N\",Ņ:\"N\",Ň:\"N\",Ŋ:\"N\",ń:\"n\",ņ:\"n\",ň:\"n\",ŋ:\"n\",Ō:\"O\",Ŏ:\"O\",Ő:\"O\",ō:\"o\",ŏ:\"o\",ő:\"o\",Ŕ:\"R\",Ŗ:\"R\",Ř:\"R\",ŕ:\"r\",ŗ:\"r\",ř:\"r\",Ś:\"S\",Ŝ:\"S\",Ş:\"S\",Š:\"S\",ś:\"s\",ŝ:\"s\",ş:\"s\",š:\"s\",Ţ:\"T\",Ť:\"T\",Ŧ:\"T\",ţ:\"t\",ť:\"t\",ŧ:\"t\",Ũ:\"U\",Ū:\"U\",Ŭ:\"U\",Ů:\"U\",Ű:\"U\",Ų:\"U\",ũ:\"u\",ū:\"u\",ŭ:\"u\",ů:\"u\",ű:\"u\",ų:\"u\",Ŵ:\"W\",ŵ:\"w\",Ŷ:\"Y\",ŷ:\"y\",Ÿ:\"Y\",Ź:\"Z\",Ż:\"Z\",Ž:\"Z\",ź:\"z\",ż:\"z\",ž:\"z\",Ĳ:\"IJ\",ĳ:\"ij\",Œ:\"Oe\",œ:\"oe\",ŉ:\"'n\",ſ:\"s\"}),Hn=Mn({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"});function Yn(t){return\"\\\\\"+Xt[t]}function Qn(t){return Kt.test(t)}function Xn(t){var n=-1,r=Array(t.size);return t.forEach(function(t,e){r[++n]=[e,t]}),r}function tr(t,n){return function(r){return t(n(r))}}function nr(t,n){for(var r=-1,e=t.length,i=0,u=[];++r<e;){var a=t[r];a!==n&&a!==o||(t[r]=o,u[i++]=r)}return u}function rr(t){var n=-1,r=Array(t.size);return t.forEach(function(t){r[++n]=t}),r}function er(t){var n=-1,r=Array(t.size);return t.forEach(function(t){r[++n]=[t,t]}),r}function ir(t){return Qn(t)?function(t){for(var n=Zt.lastIndex=0;Zt.test(t);)++n;return n}(t):Sn(t)}function ur(t){return Qn(t)?function(t){return t.match(Zt)||[]}(t):function(t){return t.split(\"\")}(t)}function or(t){for(var n=t.length;n--&&et.test(t.charAt(n)););return n}var ar=Mn({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"}),fr=function t(n){var r,et=(n=null==n?un:fr.defaults(un.Object(),n,fr.pick(un,Vt))).Array,bt=n.Date,mt=n.Error,jt=n.Function,xt=n.Math,At=n.Object,kt=n.RegExp,Ut=n.String,Ot=n.TypeError,Rt=et.prototype,It=At.prototype,St=n[\"__core-js_shared__\"],Ct=jt.prototype.toString,Et=It.hasOwnProperty,zt=0,Lt=(r=/[^.]+$/.exec(St&&St.keys&&St.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+r:\"\",Tt=It.toString,Bt=Ct.call(At),Wt=un._,Mt=kt(\"^\"+Ct.call(Et).replace(tt,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),Dt=fn?n.Buffer:e,Pt=n.Symbol,$t=n.Uint8Array,Ft=Dt?Dt.allocUnsafe:e,Zt=tr(At.getPrototypeOf,At),Kt=At.create,Xt=It.propertyIsEnumerable,rn=Rt.splice,en=Pt?Pt.isConcatSpreadable:e,on=Pt?Pt.iterator:e,an=Pt?Pt.toStringTag:e,cn=function(){try{var t=fu(At,\"defineProperty\");return t({},\"\",{}),t}catch(t){}}(),sn=n.clearTimeout!==un.clearTimeout&&n.clearTimeout,Sn=bt&&bt.now!==un.Date.now&&bt.now,Mn=n.setTimeout!==un.setTimeout&&n.setTimeout,cr=xt.ceil,sr=xt.floor,lr=At.getOwnPropertySymbols,hr=Dt?Dt.isBuffer:e,pr=n.isFinite,vr=Rt.join,_r=tr(At.keys,At),dr=xt.max,gr=xt.min,yr=bt.now,wr=n.parseInt,br=xt.random,mr=Rt.reverse,jr=fu(n,\"DataView\"),xr=fu(n,\"Map\"),Ar=fu(n,\"Promise\"),kr=fu(n,\"Set\"),Ur=fu(n,\"WeakMap\"),Or=fu(At,\"create\"),Rr=Ur&&new Ur,Ir={},Sr=Wu(jr),Cr=Wu(xr),Er=Wu(Ar),zr=Wu(kr),Lr=Wu(Ur),Tr=Pt?Pt.prototype:e,Br=Tr?Tr.valueOf:e,Wr=Tr?Tr.toString:e;function Mr(t){if(na(t)&&!qo(t)&&!(t instanceof Fr)){if(t instanceof $r)return t;if(Et.call(t,\"__wrapped__\"))return Mu(t)}return new $r(t)}var Dr=function(){function t(){}return function(n){if(!ta(n))return{};if(Kt)return Kt(n);t.prototype=n;var r=new t;return t.prototype=e,r}}();function Pr(){}function $r(t,n){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!n,this.__index__=0,this.__values__=e}function Fr(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=h,this.__views__=[]}function Nr(t){var n=-1,r=null==t?0:t.length;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function qr(t){var n=-1,r=null==t?0:t.length;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function Zr(t){var n=-1,r=null==t?0:t.length;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function Jr(t){var n=-1,r=null==t?0:t.length;for(this.__data__=new Zr;++n<r;)this.add(t[n])}function Kr(t){var n=this.__data__=new qr(t);this.size=n.size}function Gr(t,n){var r=qo(t),e=!r&&No(t),i=!r&&!e&&Go(t),u=!r&&!e&&!i&&ca(t),o=r||e||i||u,a=o?$n(t.length,Ut):[],f=a.length;for(var c in t)!n&&!Et.call(t,c)||o&&(\"length\"==c||i&&(\"offset\"==c||\"parent\"==c)||u&&(\"buffer\"==c||\"byteLength\"==c||\"byteOffset\"==c)||_u(c,f))||a.push(c);return a}function Vr(t){var n=t.length;return n?t[Ze(0,n-1)]:e}function Hr(t,n){return Eu(Ui(t),ue(n,0,t.length))}function Yr(t){return Eu(Ui(t))}function Qr(t,n,r){(r!==e&&!Po(t[n],r)||r===e&&!(n in t))&&ee(t,n,r)}function Xr(t,n,r){var i=t[n];Et.call(t,n)&&Po(i,r)&&(r!==e||n in t)||ee(t,n,r)}function te(t,n){for(var r=t.length;r--;)if(Po(t[r][0],n))return r;return-1}function ne(t,n,r,e){return se(t,function(t,i,u){n(e,t,r(t),u)}),e}function re(t,n){return t&&Oi(n,Ca(n),t)}function ee(t,n,r){\"__proto__\"==n&&cn?cn(t,n,{configurable:!0,enumerable:!0,value:r,writable:!0}):t[n]=r}function ie(t,n){for(var r=-1,i=n.length,u=et(i),o=null==t;++r<i;)u[r]=o?e:Ua(t,n[r]);return u}function ue(t,n,r){return t==t&&(r!==e&&(t=t<=r?t:r),n!==e&&(t=t>=n?t:n)),t}function oe(t,n,r,i,u,o){var a,f=1&n,c=2&n,s=4&n;if(r&&(a=u?r(t,i,u,o):r(t)),a!==e)return a;if(!ta(t))return t;var l=qo(t);if(l){if(a=function(t){var n=t.length,r=new t.constructor(n);return n&&\"string\"==typeof t[0]&&Et.call(t,\"index\")&&(r.index=t.index,r.input=t.input),r}(t),!f)return Ui(t,a)}else{var h=lu(t),p=h==w||h==b;if(Go(t))return bi(t,f);if(h==x||h==v||p&&!u){if(a=c||p?{}:pu(t),!f)return c?function(t,n){return Oi(t,su(t),n)}(t,function(t,n){return t&&Oi(n,Ea(n),t)}(a,t)):function(t,n){return Oi(t,cu(t),n)}(t,re(a,t))}else{if(!Qt[h])return u?t:{};a=function(t,n,r){var e=t.constructor;switch(n){case S:return mi(t);case d:case g:return new e(+t);case C:return function(t,n){var r=n?mi(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.byteLength)}(t,r);case E:case z:case L:case T:case B:case W:case M:case D:case P:return ji(t,r);case m:return new e;case j:case O:return new e(t);case k:return function(t){var n=new t.constructor(t.source,lt.exec(t));return n.lastIndex=t.lastIndex,n}(t);case U:return new e;case R:return Br?At(Br.call(t)):{}}}(t,h,f)}}o||(o=new Kr);var _=o.get(t);if(_)return _;o.set(t,a),oa(t)?t.forEach(function(e){a.add(oe(e,n,r,e,t,o))}):ra(t)&&t.forEach(function(e,i){a.set(i,oe(e,n,r,i,t,o))});var y=l?e:(s?c?nu:tu:c?Ea:Ca)(t);return wn(y||t,function(e,i){y&&(e=t[i=e]),Xr(a,i,oe(e,n,r,i,t,o))}),a}function ae(t,n,r){var i=r.length;if(null==t)return!i;for(t=At(t);i--;){var u=r[i],o=t[u];if(o===e&&!(u in t)||!(0,n[u])(o))return!1}return!0}function fe(t,n,r){if(\"function\"!=typeof t)throw new Ot(i);return Ru(function(){t.apply(e,r)},n)}function ce(t,n,r,e){var i=-1,u=xn,o=!0,a=t.length,f=[],c=n.length;if(!a)return f;r&&(n=kn(n,Nn(r))),e?(u=An,o=!1):n.length>=200&&(u=Zn,o=!1,n=new Jr(n));t:for(;++i<a;){var s=t[i],l=null==r?s:r(s);if(s=e||0!==s?s:0,o&&l==l){for(var h=c;h--;)if(n[h]===l)continue t;f.push(s)}else u(n,l,e)||f.push(s)}return f}Mr.templateSettings={escape:G,evaluate:V,interpolate:H,variable:\"\",imports:{_:Mr}},(Mr.prototype=Pr.prototype).constructor=Mr,($r.prototype=Dr(Pr.prototype)).constructor=$r,(Fr.prototype=Dr(Pr.prototype)).constructor=Fr,Nr.prototype.clear=function(){this.__data__=Or?Or(null):{},this.size=0},Nr.prototype.delete=function(t){var n=this.has(t)&&delete this.__data__[t];return this.size-=n?1:0,n},Nr.prototype.get=function(t){var n=this.__data__;if(Or){var r=n[t];return r===u?e:r}return Et.call(n,t)?n[t]:e},Nr.prototype.has=function(t){var n=this.__data__;return Or?n[t]!==e:Et.call(n,t)},Nr.prototype.set=function(t,n){var r=this.__data__;return this.size+=this.has(t)?0:1,r[t]=Or&&n===e?u:n,this},qr.prototype.clear=function(){this.__data__=[],this.size=0},qr.prototype.delete=function(t){var n=this.__data__,r=te(n,t);return!(r<0||(r==n.length-1?n.pop():rn.call(n,r,1),--this.size,0))},qr.prototype.get=function(t){var n=this.__data__,r=te(n,t);return r<0?e:n[r][1]},qr.prototype.has=function(t){return te(this.__data__,t)>-1},qr.prototype.set=function(t,n){var r=this.__data__,e=te(r,t);return e<0?(++this.size,r.push([t,n])):r[e][1]=n,this},Zr.prototype.clear=function(){this.size=0,this.__data__={hash:new Nr,map:new(xr||qr),string:new Nr}},Zr.prototype.delete=function(t){var n=ou(this,t).delete(t);return this.size-=n?1:0,n},Zr.prototype.get=function(t){return ou(this,t).get(t)},Zr.prototype.has=function(t){return ou(this,t).has(t)},Zr.prototype.set=function(t,n){var r=ou(this,t),e=r.size;return r.set(t,n),this.size+=r.size==e?0:1,this},Jr.prototype.add=Jr.prototype.push=function(t){return this.__data__.set(t,u),this},Jr.prototype.has=function(t){return this.__data__.has(t)},Kr.prototype.clear=function(){this.__data__=new qr,this.size=0},Kr.prototype.delete=function(t){var n=this.__data__,r=n.delete(t);return this.size=n.size,r},Kr.prototype.get=function(t){return this.__data__.get(t)},Kr.prototype.has=function(t){return this.__data__.has(t)},Kr.prototype.set=function(t,n){var r=this.__data__;if(r instanceof qr){var e=r.__data__;if(!xr||e.length<199)return e.push([t,n]),this.size=++r.size,this;r=this.__data__=new Zr(e)}return r.set(t,n),this.size=r.size,this};var se=Si(ye),le=Si(we,!0);function he(t,n){var r=!0;return se(t,function(t,e,i){return r=!!n(t,e,i)}),r}function pe(t,n,r){for(var i=-1,u=t.length;++i<u;){var o=t[i],a=n(o);if(null!=a&&(f===e?a==a&&!fa(a):r(a,f)))var f=a,c=o}return c}function ve(t,n){var r=[];return se(t,function(t,e,i){n(t,e,i)&&r.push(t)}),r}function _e(t,n,r,e,i){var u=-1,o=t.length;for(r||(r=vu),i||(i=[]);++u<o;){var a=t[u];n>0&&r(a)?n>1?_e(a,n-1,r,e,i):Un(i,a):e||(i[i.length]=a)}return i}var de=Ci(),ge=Ci(!0);function ye(t,n){return t&&de(t,n,Ca)}function we(t,n){return t&&ge(t,n,Ca)}function be(t,n){return jn(n,function(n){return Yo(t[n])})}function me(t,n){for(var r=0,i=(n=di(n,t)).length;null!=t&&r<i;)t=t[Bu(n[r++])];return r&&r==i?t:e}function je(t,n,r){var e=n(t);return qo(t)?e:Un(e,r(t))}function xe(t){return null==t?t===e?\"[object Undefined]\":\"[object Null]\":an&&an in At(t)?function(t){var n=Et.call(t,an),r=t[an];try{t[an]=e;var i=!0}catch(t){}var u=Tt.call(t);return i&&(n?t[an]=r:delete t[an]),u}(t):function(t){return Tt.call(t)}(t)}function Ae(t,n){return t>n}function ke(t,n){return null!=t&&Et.call(t,n)}function Ue(t,n){return null!=t&&n in At(t)}function Oe(t,n,r){for(var i=r?An:xn,u=t[0].length,o=t.length,a=o,f=et(o),c=Infinity,s=[];a--;){var l=t[a];a&&n&&(l=kn(l,Nn(n))),c=gr(l.length,c),f[a]=!r&&(n||u>=120&&l.length>=120)?new Jr(a&&l):e}l=t[0];var h=-1,p=f[0];t:for(;++h<u&&s.length<c;){var v=l[h],_=n?n(v):v;if(v=r||0!==v?v:0,!(p?Zn(p,_):i(s,_,r))){for(a=o;--a;){var d=f[a];if(!(d?Zn(d,_):i(t[a],_,r)))continue t}p&&p.push(_),s.push(v)}}return s}function Re(t,n,r){var i=null==(t=Au(t,n=di(n,t)))?t:t[Bu(Vu(n))];return null==i?e:gn(i,t,r)}function Ie(t){return na(t)&&xe(t)==v}function Se(t,n,r,i,u){return t===n||(null==t||null==n||!na(t)&&!na(n)?t!=t&&n!=n:function(t,n,r,i,u,o){var a=qo(t),f=qo(n),c=a?_:lu(t),s=f?_:lu(n),l=(c=c==v?x:c)==x,h=(s=s==v?x:s)==x,p=c==s;if(p&&Go(t)){if(!Go(n))return!1;a=!0,l=!1}if(p&&!l)return o||(o=new Kr),a||ca(t)?Qi(t,n,r,i,u,o):function(t,n,r,e,i,u,o){switch(r){case C:if(t.byteLength!=n.byteLength||t.byteOffset!=n.byteOffset)return!1;t=t.buffer,n=n.buffer;case S:return!(t.byteLength!=n.byteLength||!u(new $t(t),new $t(n)));case d:case g:case j:return Po(+t,+n);case y:return t.name==n.name&&t.message==n.message;case k:case O:return t==n+\"\";case m:var a=Xn;case U:if(a||(a=rr),t.size!=n.size&&!(1&e))return!1;var f=o.get(t);if(f)return f==n;e|=2,o.set(t,n);var c=Qi(a(t),a(n),e,i,u,o);return o.delete(t),c;case R:if(Br)return Br.call(t)==Br.call(n)}return!1}(t,n,c,r,i,u,o);if(!(1&r)){var w=l&&Et.call(t,\"__wrapped__\"),b=h&&Et.call(n,\"__wrapped__\");if(w||b){var A=w?t.value():t,I=b?n.value():n;return o||(o=new Kr),u(A,I,r,i,o)}}return!!p&&(o||(o=new Kr),function(t,n,r,i,u,o){var a=1&r,f=tu(t),c=f.length;if(c!=tu(n).length&&!a)return!1;for(var s=c;s--;){var l=f[s];if(!(a?l in n:Et.call(n,l)))return!1}var h=o.get(t),p=o.get(n);if(h&&p)return h==n&&p==t;var v=!0;o.set(t,n),o.set(n,t);for(var _=a;++s<c;){var d=t[l=f[s]],g=n[l];if(i)var y=a?i(g,d,l,n,t,o):i(d,g,l,t,n,o);if(!(y===e?d===g||u(d,g,r,i,o):y)){v=!1;break}_||(_=\"constructor\"==l)}if(v&&!_){var w=t.constructor,b=n.constructor;w==b||!(\"constructor\"in t)||!(\"constructor\"in n)||\"function\"==typeof w&&w instanceof w&&\"function\"==typeof b&&b instanceof b||(v=!1)}return o.delete(t),o.delete(n),v}(t,n,r,i,u,o))}(t,n,r,i,Se,u))}function Ce(t,n,r,i){var u=r.length,o=u,a=!i;if(null==t)return!o;for(t=At(t);u--;){var f=r[u];if(a&&f[2]?f[1]!==t[f[0]]:!(f[0]in t))return!1}for(;++u<o;){var c=(f=r[u])[0],s=t[c],l=f[1];if(a&&f[2]){if(s===e&&!(c in t))return!1}else{var h=new Kr;if(i)var p=i(s,l,c,t,n,h);if(!(p===e?Se(l,s,3,i,h):p))return!1}}return!0}function Ee(t){return!(!ta(t)||(n=t,Lt&&Lt in n))&&(Yo(t)?Mt:vt).test(Wu(t));var n}function ze(t){return\"function\"==typeof t?t:null==t?ef:\"object\"==typeof t?qo(t)?Me(t[0],t[1]):We(t):pf(t)}function Le(t){if(!bu(t))return _r(t);var n=[];for(var r in At(t))Et.call(t,r)&&\"constructor\"!=r&&n.push(r);return n}function Te(t,n){return t<n}function Be(t,n){var r=-1,e=Jo(t)?et(t.length):[];return se(t,function(t,i,u){e[++r]=n(t,i,u)}),e}function We(t){var n=au(t);return 1==n.length&&n[0][2]?ju(n[0][0],n[0][1]):function(r){return r===t||Ce(r,t,n)}}function Me(t,n){return gu(t)&&mu(n)?ju(Bu(t),n):function(r){var i=Ua(r,t);return i===e&&i===n?Oa(r,t):Se(n,i,3)}}function De(t,n,r,i,u){t!==n&&de(n,function(o,a){if(u||(u=new Kr),ta(o))!function(t,n,r,i,u,o,a){var f=Uu(t,r),c=Uu(n,r),s=a.get(c);if(s)Qr(t,r,s);else{var l=o?o(f,c,r+\"\",t,n,a):e,h=l===e;if(h){var p=qo(c),v=!p&&Go(c),_=!p&&!v&&ca(c);l=c,p||v||_?qo(f)?l=f:Ko(f)?l=Ui(f):v?(h=!1,l=bi(c,!0)):_?(h=!1,l=ji(c,!0)):l=[]:ia(c)||No(c)?(l=f,No(f)?l=ga(f):ta(f)&&!Yo(f)||(l=pu(c))):h=!1}h&&(a.set(c,l),u(l,c,i,o,a),a.delete(c)),Qr(t,r,l)}}(t,n,a,r,De,i,u);else{var f=i?i(Uu(t,a),o,a+\"\",t,n,u):e;f===e&&(f=o),Qr(t,a,f)}},Ea)}function Pe(t,n){var r=t.length;if(r)return _u(n+=n<0?r:0,r)?t[n]:e}function $e(t,n,r){n=n.length?kn(n,function(t){return qo(t)?function(n){return me(n,1===t.length?t[0]:t)}:t}):[ef];var e=-1;return n=kn(n,Nn(uu())),function(t,n){var e=t.length;for(t.sort(function(t,n){return function(t,n,r){for(var e=-1,i=t.criteria,u=n.criteria,o=i.length,a=r.length;++e<o;){var f=xi(i[e],u[e]);if(f)return e>=a?f:f*(\"desc\"==r[e]?-1:1)}return t.index-n.index}(t,n,r)});e--;)t[e]=t[e].value;return t}(Be(t,function(t,r,i){return{criteria:kn(n,function(n){return n(t)}),index:++e,value:t}}))}function Fe(t,n,r){for(var e=-1,i=n.length,u={};++e<i;){var o=n[e],a=me(t,o);r(a,o)&&He(u,di(o,t),a)}return u}function Ne(t,n,r,e){var i=e?Ln:zn,u=-1,o=n.length,a=t;for(t===n&&(n=Ui(n)),r&&(a=kn(t,Nn(r)));++u<o;)for(var f=0,c=n[u],s=r?r(c):c;(f=i(a,s,f,e))>-1;)a!==t&&rn.call(a,f,1),rn.call(t,f,1);return t}function qe(t,n){for(var r=t?n.length:0,e=r-1;r--;){var i=n[r];if(r==e||i!==u){var u=i;_u(i)?rn.call(t,i,1):fi(t,i)}}return t}function Ze(t,n){return t+sr(br()*(n-t+1))}function Je(t,n){var r=\"\";if(!t||n<1||n>s)return r;do{n%2&&(r+=t),(n=sr(n/2))&&(t+=t)}while(n);return r}function Ke(t,n){return Iu(xu(t,n,ef),t+\"\")}function Ge(t){return Vr(Pa(t))}function Ve(t,n){var r=Pa(t);return Eu(r,ue(n,0,r.length))}function He(t,n,r,i){if(!ta(t))return t;for(var u=-1,o=(n=di(n,t)).length,a=o-1,f=t;null!=f&&++u<o;){var c=Bu(n[u]),s=r;if(\"__proto__\"===c||\"constructor\"===c||\"prototype\"===c)return t;if(u!=a){var l=f[c];(s=i?i(l,c,f):e)===e&&(s=ta(l)?l:_u(n[u+1])?[]:{})}Xr(f,c,s),f=f[c]}return t}var Ye=Rr?function(t,n){return Rr.set(t,n),t}:ef,Qe=cn?function(t,n){return cn(t,\"toString\",{configurable:!0,enumerable:!1,value:tf(n),writable:!0})}:ef;function Xe(t){return Eu(Pa(t))}function ti(t,n,r){var e=-1,i=t.length;n<0&&(n=-n>i?0:i+n),(r=r>i?i:r)<0&&(r+=i),i=n>r?0:r-n>>>0,n>>>=0;for(var u=et(i);++e<i;)u[e]=t[e+n];return u}function ni(t,n){var r;return se(t,function(t,e,i){return!(r=n(t,e,i))}),!!r}function ri(t,n,r){var e=0,i=null==t?e:t.length;if(\"number\"==typeof n&&n==n&&i<=2147483647){for(;e<i;){var u=e+i>>>1,o=t[u];null!==o&&!fa(o)&&(r?o<=n:o<n)?e=u+1:i=u}return i}return ei(t,n,ef,r)}function ei(t,n,r,i){var u=0,o=null==t?0:t.length;if(0===o)return 0;for(var a=(n=r(n))!=n,f=null===n,c=fa(n),s=n===e;u<o;){var l=sr((u+o)/2),h=r(t[l]),p=h!==e,v=null===h,_=h==h,d=fa(h);if(a)var g=i||_;else g=s?_&&(i||p):f?_&&p&&(i||!v):c?_&&p&&!v&&(i||!d):!v&&!d&&(i?h<=n:h<n);g?u=l+1:o=l}return gr(o,4294967294)}function ii(t,n){for(var r=-1,e=t.length,i=0,u=[];++r<e;){var o=t[r],a=n?n(o):o;if(!r||!Po(a,f)){var f=a;u[i++]=0===o?0:o}}return u}function ui(t){return\"number\"==typeof t?t:fa(t)?l:+t}function oi(t){if(\"string\"==typeof t)return t;if(qo(t))return kn(t,oi)+\"\";if(fa(t))return Wr?Wr.call(t):\"\";var n=t+\"\";return\"0\"==n&&1/t==-Infinity?\"-0\":n}function ai(t,n,r){var e=-1,i=xn,u=t.length,o=!0,a=[],f=a;if(r)o=!1,i=An;else if(u>=200){var c=n?null:Ji(t);if(c)return rr(c);o=!1,i=Zn,f=new Jr}else f=n?[]:a;t:for(;++e<u;){var s=t[e],l=n?n(s):s;if(s=r||0!==s?s:0,o&&l==l){for(var h=f.length;h--;)if(f[h]===l)continue t;n&&f.push(l),a.push(s)}else i(f,l,r)||(f!==a&&f.push(l),a.push(s))}return a}function fi(t,n){return null==(t=Au(t,n=di(n,t)))||delete t[Bu(Vu(n))]}function ci(t,n,r,e){return He(t,n,r(me(t,n)),e)}function si(t,n,r,e){for(var i=t.length,u=e?i:-1;(e?u--:++u<i)&&n(t[u],u,t););return r?ti(t,e?0:u,e?u+1:i):ti(t,e?u+1:0,e?i:u)}function li(t,n){var r=t;return r instanceof Fr&&(r=r.value()),On(n,function(t,n){return n.func.apply(n.thisArg,Un([t],n.args))},r)}function hi(t,n,r){var e=t.length;if(e<2)return e?ai(t[0]):[];for(var i=-1,u=et(e);++i<e;)for(var o=t[i],a=-1;++a<e;)a!=i&&(u[i]=ce(u[i]||o,t[a],n,r));return ai(_e(u,1),n,r)}function pi(t,n,r){for(var i=-1,u=t.length,o=n.length,a={};++i<u;)r(a,t[i],i<o?n[i]:e);return a}function vi(t){return Ko(t)?t:[]}function _i(t){return\"function\"==typeof t?t:ef}function di(t,n){return qo(t)?t:gu(t,n)?[t]:Tu(ya(t))}var gi=Ke;function yi(t,n,r){var i=t.length;return r=r===e?i:r,!n&&r>=i?t:ti(t,n,r)}var wi=sn||function(t){return un.clearTimeout(t)};function bi(t,n){if(n)return t.slice();var r=t.length,e=Ft?Ft(r):new t.constructor(r);return t.copy(e),e}function mi(t){var n=new t.constructor(t.byteLength);return new $t(n).set(new $t(t)),n}function ji(t,n){var r=n?mi(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.length)}function xi(t,n){if(t!==n){var r=t!==e,i=null===t,u=t==t,o=fa(t),a=n!==e,f=null===n,c=n==n,s=fa(n);if(!f&&!s&&!o&&t>n||o&&a&&c&&!f&&!s||i&&a&&c||!r&&c||!u)return 1;if(!i&&!o&&!s&&t<n||s&&r&&u&&!i&&!o||f&&r&&u||!a&&u||!c)return-1}return 0}function Ai(t,n,r,e){for(var i=-1,u=t.length,o=r.length,a=-1,f=n.length,c=dr(u-o,0),s=et(f+c),l=!e;++a<f;)s[a]=n[a];for(;++i<o;)(l||i<u)&&(s[r[i]]=t[i]);for(;c--;)s[a++]=t[i++];return s}function ki(t,n,r,e){for(var i=-1,u=t.length,o=-1,a=r.length,f=-1,c=n.length,s=dr(u-a,0),l=et(s+c),h=!e;++i<s;)l[i]=t[i];for(var p=i;++f<c;)l[p+f]=n[f];for(;++o<a;)(h||i<u)&&(l[p+r[o]]=t[i++]);return l}function Ui(t,n){var r=-1,e=t.length;for(n||(n=et(e));++r<e;)n[r]=t[r];return n}function Oi(t,n,r,i){var u=!r;r||(r={});for(var o=-1,a=n.length;++o<a;){var f=n[o],c=i?i(r[f],t[f],f,r,t):e;c===e&&(c=t[f]),u?ee(r,f,c):Xr(r,f,c)}return r}function Ri(t,n){return function(r,e){var i=qo(r)?yn:ne,u=n?n():{};return i(r,t,uu(e,2),u)}}function Ii(t){return Ke(function(n,r){var i=-1,u=r.length,o=u>1?r[u-1]:e,a=u>2?r[2]:e;for(o=t.length>3&&\"function\"==typeof o?(u--,o):e,a&&du(r[0],r[1],a)&&(o=u<3?e:o,u=1),n=At(n);++i<u;){var f=r[i];f&&t(n,f,i,o)}return n})}function Si(t,n){return function(r,e){if(null==r)return r;if(!Jo(r))return t(r,e);for(var i=r.length,u=n?i:-1,o=At(r);(n?u--:++u<i)&&!1!==e(o[u],u,o););return r}}function Ci(t){return function(n,r,e){for(var i=-1,u=At(n),o=e(n),a=o.length;a--;){var f=o[t?a:++i];if(!1===r(u[f],f,u))break}return n}}function Ei(t){return function(n){var r=Qn(n=ya(n))?ur(n):e,i=r?r[0]:n.charAt(0),u=r?yi(r,1).join(\"\"):n.slice(1);return i[t]()+u}}function zi(t){return function(n){return On(Ya(Na(n).replace(Nt,\"\")),t,\"\")}}function Li(t){return function(){var n=arguments;switch(n.length){case 0:return new t;case 1:return new t(n[0]);case 2:return new t(n[0],n[1]);case 3:return new t(n[0],n[1],n[2]);case 4:return new t(n[0],n[1],n[2],n[3]);case 5:return new t(n[0],n[1],n[2],n[3],n[4]);case 6:return new t(n[0],n[1],n[2],n[3],n[4],n[5]);case 7:return new t(n[0],n[1],n[2],n[3],n[4],n[5],n[6])}var r=Dr(t.prototype),e=t.apply(r,n);return ta(e)?e:r}}function Ti(t){return function(n,r,i){var u=At(n);if(!Jo(n)){var o=uu(r,3);n=Ca(n),r=function(t){return o(u[t],t,u)}}var a=t(n,r,i);return a>-1?u[o?n[a]:a]:e}}function Bi(t){return Xi(function(n){var r=n.length,u=r,o=$r.prototype.thru;for(t&&n.reverse();u--;){var a=n[u];if(\"function\"!=typeof a)throw new Ot(i);if(o&&!f&&\"wrapper\"==eu(a))var f=new $r([],!0)}for(u=f?u:r;++u<r;){var c=eu(a=n[u]),s=\"wrapper\"==c?ru(a):e;f=s&&yu(s[0])&&424==s[1]&&!s[4].length&&1==s[9]?f[eu(s[0])].apply(f,s[3]):1==a.length&&yu(a)?f[c]():f.thru(a)}return function(){var t=arguments,e=t[0];if(f&&1==t.length&&qo(e))return f.plant(e).value();for(var i=0,u=r?n[i].apply(this,t):e;++i<r;)u=n[i].call(this,u);return u}})}function Wi(t,n,r,i,u,o,a,c,s,l){var h=n&f,p=1&n,v=2&n,_=24&n,d=512&n,g=v?e:Li(t);return function e(){for(var f=arguments.length,y=et(f),w=f;w--;)y[w]=arguments[w];if(_)var b=iu(e),m=Gn(y,b);if(i&&(y=Ai(y,i,u,_)),o&&(y=ki(y,o,a,_)),f-=m,_&&f<l){var j=nr(y,b);return qi(t,n,Wi,e.placeholder,r,y,j,c,s,l-f)}var x=p?r:this,A=v?x[t]:t;return f=y.length,c?y=ku(y,c):d&&f>1&&y.reverse(),h&&s<f&&(y.length=s),this&&this!==un&&this instanceof e&&(A=g||Li(A)),A.apply(x,y)}}function Mi(t,n){return function(r,e){return function(t,n,r,e){return ye(t,function(t,i,u){n(e,r(t),i,u)}),e}(r,t,n(e),{})}}function Di(t,n){return function(r,i){var u;if(r===e&&i===e)return n;if(r!==e&&(u=r),i!==e){if(u===e)return i;\"string\"==typeof r||\"string\"==typeof i?(r=oi(r),i=oi(i)):(r=ui(r),i=ui(i)),u=t(r,i)}return u}}function Pi(t){return Xi(function(n){return n=kn(n,Nn(uu())),Ke(function(r){var e=this;return t(n,function(t){return gn(t,e,r)})})})}function $i(t,n){var r=(n=n===e?\" \":oi(n)).length;if(r<2)return r?Je(n,t):n;var i=Je(n,cr(t/ir(n)));return Qn(n)?yi(ur(i),0,t).join(\"\"):i.slice(0,t)}function Fi(t){return function(n,r,i){return i&&\"number\"!=typeof i&&du(n,r,i)&&(r=i=e),n=pa(n),r===e?(r=n,n=0):r=pa(r),function(t,n,r,e){for(var i=-1,u=dr(cr((n-t)/(r||1)),0),o=et(u);u--;)o[e?u:++i]=t,t+=r;return o}(n,r,i=i===e?n<r?1:-1:pa(i),t)}}function Ni(t){return function(n,r){return\"string\"==typeof n&&\"string\"==typeof r||(n=da(n),r=da(r)),t(n,r)}}function qi(t,n,r,i,u,o,f,c,s,l){var h=8&n;n|=h?a:64,4&(n&=~(h?64:a))||(n&=-4);var p=[t,n,u,h?o:e,h?f:e,h?e:o,h?e:f,c,s,l],v=r.apply(e,p);return yu(t)&&Ou(v,p),v.placeholder=i,Su(v,t,n)}function Zi(t){var n=xt[t];return function(t,r){if(t=da(t),(r=null==r?0:gr(va(r),292))&&pr(t)){var e=(ya(t)+\"e\").split(\"e\");return+((e=(ya(n(e[0]+\"e\"+(+e[1]+r)))+\"e\").split(\"e\"))[0]+\"e\"+(+e[1]-r))}return n(t)}}var Ji=kr&&1/rr(new kr([,-0]))[1]==c?function(t){return new kr(t)}:cf;function Ki(t){return function(n){var r=lu(n);return r==m?Xn(n):r==U?er(n):function(t,n){return kn(n,function(n){return[n,t[n]]})}(n,t(n))}}function Gi(t,n,r,u,c,s,l,h){var p=2&n;if(!p&&\"function\"!=typeof t)throw new Ot(i);var v=u?u.length:0;if(v||(n&=-97,u=c=e),l=l===e?l:dr(va(l),0),h=h===e?h:va(h),v-=c?c.length:0,64&n){var _=u,d=c;u=c=e}var g=p?e:ru(t),y=[t,n,r,u,c,_,d,s,l,h];if(g&&function(t,n){var r=t[1],e=n[1],i=r|e;if(!(i<131||e==f&&8==r||e==f&&256==r&&t[7].length<=n[8]||384==e&&n[7].length<=n[8]&&8==r))return t;1&e&&(t[2]=n[2],i|=1&r?0:4);var u=n[3];if(u){var a=t[3];t[3]=a?Ai(a,u,n[4]):u,t[4]=a?nr(t[3],o):n[4]}(u=n[5])&&(t[5]=(a=t[5])?ki(a,u,n[6]):u,t[6]=a?nr(t[5],o):n[6]),(u=n[7])&&(t[7]=u),e&f&&(t[8]=null==t[8]?n[8]:gr(t[8],n[8])),null==t[9]&&(t[9]=n[9]),t[0]=n[0],t[1]=i}(y,g),t=y[0],n=y[1],r=y[2],u=y[3],c=y[4],!(h=y[9]=y[9]===e?p?0:t.length:dr(y[9]-v,0))&&24&n&&(n&=-25),n&&1!=n)w=8==n||16==n?function(t,n,r){var i=Li(t);return function u(){for(var o=arguments.length,a=et(o),f=o,c=iu(u);f--;)a[f]=arguments[f];var s=o<3&&a[0]!==c&&a[o-1]!==c?[]:nr(a,c);return(o-=s.length)<r?qi(t,n,Wi,u.placeholder,e,a,s,e,e,r-o):gn(this&&this!==un&&this instanceof u?i:t,this,a)}}(t,n,h):n!=a&&33!=n||c.length?Wi.apply(e,y):function(t,n,r,e){var i=1&n,u=Li(t);return function n(){for(var o=-1,a=arguments.length,f=-1,c=e.length,s=et(c+a),l=this&&this!==un&&this instanceof n?u:t;++f<c;)s[f]=e[f];for(;a--;)s[f++]=arguments[++o];return gn(l,i?r:this,s)}}(t,n,r,u);else var w=function(t,n,r){var e=1&n,i=Li(t);return function n(){return(this&&this!==un&&this instanceof n?i:t).apply(e?r:this,arguments)}}(t,n,r);return Su((g?Ye:Ou)(w,y),t,n)}function Vi(t,n,r,i){return t===e||Po(t,It[r])&&!Et.call(i,r)?n:t}function Hi(t,n,r,i,u,o){return ta(t)&&ta(n)&&(o.set(n,t),De(t,n,e,Hi,o),o.delete(n)),t}function Yi(t){return ia(t)?e:t}function Qi(t,n,r,i,u,o){var a=1&r,f=t.length,c=n.length;if(f!=c&&!(a&&c>f))return!1;var s=o.get(t),l=o.get(n);if(s&&l)return s==n&&l==t;var h=-1,p=!0,v=2&r?new Jr:e;for(o.set(t,n),o.set(n,t);++h<f;){var _=t[h],d=n[h];if(i)var g=a?i(d,_,h,n,t,o):i(_,d,h,t,n,o);if(g!==e){if(g)continue;p=!1;break}if(v){if(!In(n,function(t,n){if(!Zn(v,n)&&(_===t||u(_,t,r,i,o)))return v.push(n)})){p=!1;break}}else if(_!==d&&!u(_,d,r,i,o)){p=!1;break}}return o.delete(t),o.delete(n),p}function Xi(t){return Iu(xu(t,e,qu),t+\"\")}function tu(t){return je(t,Ca,cu)}function nu(t){return je(t,Ea,su)}var ru=Rr?function(t){return Rr.get(t)}:cf;function eu(t){for(var n=t.name+\"\",r=Ir[n],e=Et.call(Ir,n)?r.length:0;e--;){var i=r[e],u=i.func;if(null==u||u==t)return i.name}return n}function iu(t){return(Et.call(Mr,\"placeholder\")?Mr:t).placeholder}function uu(){var t=Mr.iteratee||uf;return t=t===uf?ze:t,arguments.length?t(arguments[0],arguments[1]):t}function ou(t,n){var r,e,i=t.__data__;return(\"string\"==(e=typeof(r=n))||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==r:null===r)?i[\"string\"==typeof n?\"string\":\"hash\"]:i.map}function au(t){for(var n=Ca(t),r=n.length;r--;){var e=n[r],i=t[e];n[r]=[e,i,mu(i)]}return n}function fu(t,n){var r=function(t,n){return null==t?e:t[n]}(t,n);return Ee(r)?r:e}var cu=lr?function(t){return null==t?[]:(t=At(t),jn(lr(t),function(n){return Xt.call(t,n)}))}:df,su=lr?function(t){for(var n=[];t;)Un(n,cu(t)),t=Zt(t);return n}:df,lu=xe;function hu(t,n,r){for(var e=-1,i=(n=di(n,t)).length,u=!1;++e<i;){var o=Bu(n[e]);if(!(u=null!=t&&r(t,o)))break;t=t[o]}return u||++e!=i?u:!!(i=null==t?0:t.length)&&Xo(i)&&_u(o,i)&&(qo(t)||No(t))}function pu(t){return\"function\"!=typeof t.constructor||bu(t)?{}:Dr(Zt(t))}function vu(t){return qo(t)||No(t)||!!(en&&t&&t[en])}function _u(t,n){var r=typeof t;return!!(n=null==n?s:n)&&(\"number\"==r||\"symbol\"!=r&&dt.test(t))&&t>-1&&t%1==0&&t<n}function du(t,n,r){if(!ta(r))return!1;var e=typeof n;return!!(\"number\"==e?Jo(r)&&_u(n,r.length):\"string\"==e&&n in r)&&Po(r[n],t)}function gu(t,n){if(qo(t))return!1;var r=typeof t;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=t&&!fa(t))||Q.test(t)||!Y.test(t)||null!=n&&t in At(n)}function yu(t){var n=eu(t),r=Mr[n];if(\"function\"!=typeof r||!(n in Fr.prototype))return!1;if(t===r)return!0;var e=ru(r);return!!e&&t===e[0]}(jr&&lu(new jr(new ArrayBuffer(1)))!=C||xr&&lu(new xr)!=m||Ar&&lu(Ar.resolve())!=A||kr&&lu(new kr)!=U||Ur&&lu(new Ur)!=I)&&(lu=function(t){var n=xe(t),r=n==x?t.constructor:e,i=r?Wu(r):\"\";if(i)switch(i){case Sr:return C;case Cr:return m;case Er:return A;case zr:return U;case Lr:return I}return n});var wu=St?Yo:gf;function bu(t){var n=t&&t.constructor;return t===(\"function\"==typeof n&&n.prototype||It)}function mu(t){return t==t&&!ta(t)}function ju(t,n){return function(r){return null!=r&&r[t]===n&&(n!==e||t in At(r))}}function xu(t,n,r){return n=dr(n===e?t.length-1:n,0),function(){for(var e=arguments,i=-1,u=dr(e.length-n,0),o=et(u);++i<u;)o[i]=e[n+i];i=-1;for(var a=et(n+1);++i<n;)a[i]=e[i];return a[n]=r(o),gn(t,this,a)}}function Au(t,n){return n.length<2?t:me(t,ti(n,0,-1))}function ku(t,n){for(var r=t.length,i=gr(n.length,r),u=Ui(t);i--;){var o=n[i];t[i]=_u(o,r)?u[o]:e}return t}function Uu(t,n){if((\"constructor\"!==n||\"function\"!=typeof t[n])&&\"__proto__\"!=n)return t[n]}var Ou=Cu(Ye),Ru=Mn||function(t,n){return un.setTimeout(t,n)},Iu=Cu(Qe);function Su(t,n,r){var e=n+\"\";return Iu(t,function(t,n){var r=n.length;if(!r)return t;var e=r-1;return n[e]=(r>1?\"& \":\"\")+n[e],n=n.join(r>2?\", \":\" \"),t.replace(it,\"{\\n/* [wrapped with \"+n+\"] */\\n\")}(e,function(t,n){return wn(p,function(r){var e=\"_.\"+r[0];n&r[1]&&!xn(t,e)&&t.push(e)}),t.sort()}(function(t){var n=t.match(ut);return n?n[1].split(ot):[]}(e),r)))}function Cu(t){var n=0,r=0;return function(){var i=yr(),u=16-(i-r);if(r=i,u>0){if(++n>=800)return arguments[0]}else n=0;return t.apply(e,arguments)}}function Eu(t,n){var r=-1,i=t.length,u=i-1;for(n=n===e?i:n;++r<n;){var o=Ze(r,u),a=t[o];t[o]=t[r],t[r]=a}return t.length=n,t}var zu,Lu,Tu=(zu=Lo(function(t){var n=[];return 46===t.charCodeAt(0)&&n.push(\"\"),t.replace(X,function(t,r,e,i){n.push(e?i.replace(ct,\"$1\"):r||t)}),n},function(t){return 500===Lu.size&&Lu.clear(),t}),Lu=zu.cache,zu);function Bu(t){if(\"string\"==typeof t||fa(t))return t;var n=t+\"\";return\"0\"==n&&1/t==-Infinity?\"-0\":n}function Wu(t){if(null!=t){try{return Ct.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"}function Mu(t){if(t instanceof Fr)return t.clone();var n=new $r(t.__wrapped__,t.__chain__);return n.__actions__=Ui(t.__actions__),n.__index__=t.__index__,n.__values__=t.__values__,n}var Du=Ke(function(t,n){return Ko(t)?ce(t,_e(n,1,Ko,!0)):[]}),Pu=Ke(function(t,n){var r=Vu(n);return Ko(r)&&(r=e),Ko(t)?ce(t,_e(n,1,Ko,!0),uu(r,2)):[]}),$u=Ke(function(t,n){var r=Vu(n);return Ko(r)&&(r=e),Ko(t)?ce(t,_e(n,1,Ko,!0),e,r):[]});function Fu(t,n,r){var e=null==t?0:t.length;if(!e)return-1;var i=null==r?0:va(r);return i<0&&(i=dr(e+i,0)),En(t,uu(n,3),i)}function Nu(t,n,r){var i=null==t?0:t.length;if(!i)return-1;var u=i-1;return r!==e&&(u=va(r),u=r<0?dr(i+u,0):gr(u,i-1)),En(t,uu(n,3),u,!0)}function qu(t){return null!=t&&t.length?_e(t,1):[]}function Zu(t){return t&&t.length?t[0]:e}var Ju=Ke(function(t){var n=kn(t,vi);return n.length&&n[0]===t[0]?Oe(n):[]}),Ku=Ke(function(t){var n=Vu(t),r=kn(t,vi);return n===Vu(r)?n=e:r.pop(),r.length&&r[0]===t[0]?Oe(r,uu(n,2)):[]}),Gu=Ke(function(t){var n=Vu(t),r=kn(t,vi);return(n=\"function\"==typeof n?n:e)&&r.pop(),r.length&&r[0]===t[0]?Oe(r,e,n):[]});function Vu(t){var n=null==t?0:t.length;return n?t[n-1]:e}var Hu=Ke(Yu);function Yu(t,n){return t&&t.length&&n&&n.length?Ne(t,n):t}var Qu=Xi(function(t,n){var r=null==t?0:t.length,e=ie(t,n);return qe(t,kn(n,function(t){return _u(t,r)?+t:t}).sort(xi)),e});function Xu(t){return null==t?t:mr.call(t)}var to=Ke(function(t){return ai(_e(t,1,Ko,!0))}),no=Ke(function(t){var n=Vu(t);return Ko(n)&&(n=e),ai(_e(t,1,Ko,!0),uu(n,2))}),ro=Ke(function(t){var n=Vu(t);return n=\"function\"==typeof n?n:e,ai(_e(t,1,Ko,!0),e,n)});function eo(t){if(!t||!t.length)return[];var n=0;return t=jn(t,function(t){if(Ko(t))return n=dr(t.length,n),!0}),$n(n,function(n){return kn(t,Wn(n))})}function io(t,n){if(!t||!t.length)return[];var r=eo(t);return null==n?r:kn(r,function(t){return gn(n,e,t)})}var uo=Ke(function(t,n){return Ko(t)?ce(t,n):[]}),oo=Ke(function(t){return hi(jn(t,Ko))}),ao=Ke(function(t){var n=Vu(t);return Ko(n)&&(n=e),hi(jn(t,Ko),uu(n,2))}),fo=Ke(function(t){var n=Vu(t);return n=\"function\"==typeof n?n:e,hi(jn(t,Ko),e,n)}),co=Ke(eo),so=Ke(function(t){var n=t.length,r=n>1?t[n-1]:e;return r=\"function\"==typeof r?(t.pop(),r):e,io(t,r)});function lo(t){var n=Mr(t);return n.__chain__=!0,n}function ho(t,n){return n(t)}var po=Xi(function(t){var n=t.length,r=n?t[0]:0,i=this.__wrapped__,u=function(n){return ie(n,t)};return!(n>1||this.__actions__.length)&&i instanceof Fr&&_u(r)?((i=i.slice(r,+r+(n?1:0))).__actions__.push({func:ho,args:[u],thisArg:e}),new $r(i,this.__chain__).thru(function(t){return n&&!t.length&&t.push(e),t})):this.thru(u)}),vo=Ri(function(t,n,r){Et.call(t,r)?++t[r]:ee(t,r,1)}),_o=Ti(Fu),go=Ti(Nu);function yo(t,n){return(qo(t)?wn:se)(t,uu(n,3))}function wo(t,n){return(qo(t)?bn:le)(t,uu(n,3))}var bo=Ri(function(t,n,r){Et.call(t,r)?t[r].push(n):ee(t,r,[n])}),mo=Ke(function(t,n,r){var e=-1,i=\"function\"==typeof n,u=Jo(t)?et(t.length):[];return se(t,function(t){u[++e]=i?gn(n,t,r):Re(t,n,r)}),u}),jo=Ri(function(t,n,r){ee(t,r,n)});function xo(t,n){return(qo(t)?kn:Be)(t,uu(n,3))}var Ao=Ri(function(t,n,r){t[r?0:1].push(n)},function(){return[[],[]]}),ko=Ke(function(t,n){if(null==t)return[];var r=n.length;return r>1&&du(t,n[0],n[1])?n=[]:r>2&&du(n[0],n[1],n[2])&&(n=[n[0]]),$e(t,_e(n,1),[])}),Uo=Sn||function(){return un.Date.now()};function Oo(t,n,r){return n=r?e:n,Gi(t,f,e,e,e,e,n=t&&null==n?t.length:n)}function Ro(t,n){var r;if(\"function\"!=typeof n)throw new Ot(i);return t=va(t),function(){return--t>0&&(r=n.apply(this,arguments)),t<=1&&(n=e),r}}var Io=Ke(function(t,n,r){var e=1;if(r.length){var i=nr(r,iu(Io));e|=a}return Gi(t,e,n,r,i)}),So=Ke(function(t,n,r){var e=3;if(r.length){var i=nr(r,iu(So));e|=a}return Gi(n,e,t,r,i)});function Co(t,n,r){var u,o,a,f,c,s,l=0,h=!1,p=!1,v=!0;if(\"function\"!=typeof t)throw new Ot(i);function _(n){var r=u,i=o;return u=o=e,l=n,f=t.apply(i,r)}function d(t){return l=t,c=Ru(y,n),h?_(t):f}function g(t){var r=t-s;return s===e||r>=n||r<0||p&&t-l>=a}function y(){var t=Uo();if(g(t))return w(t);c=Ru(y,function(t){var r=n-(t-s);return p?gr(r,a-(t-l)):r}(t))}function w(t){return c=e,v&&u?_(t):(u=o=e,f)}function b(){var t=Uo(),r=g(t);if(u=arguments,o=this,s=t,r){if(c===e)return d(s);if(p)return wi(c),c=Ru(y,n),_(s)}return c===e&&(c=Ru(y,n)),f}return n=da(n)||0,ta(r)&&(h=!!r.leading,a=(p=\"maxWait\"in r)?dr(da(r.maxWait)||0,n):a,v=\"trailing\"in r?!!r.trailing:v),b.cancel=function(){c!==e&&wi(c),l=0,u=s=o=c=e},b.flush=function(){return c===e?f:w(Uo())},b}var Eo=Ke(function(t,n){return fe(t,1,n)}),zo=Ke(function(t,n,r){return fe(t,da(n)||0,r)});function Lo(t,n){if(\"function\"!=typeof t||null!=n&&\"function\"!=typeof n)throw new Ot(i);var r=function(){var e=arguments,i=n?n.apply(this,e):e[0],u=r.cache;if(u.has(i))return u.get(i);var o=t.apply(this,e);return r.cache=u.set(i,o)||u,o};return r.cache=new(Lo.Cache||Zr),r}function To(t){if(\"function\"!=typeof t)throw new Ot(i);return function(){var n=arguments;switch(n.length){case 0:return!t.call(this);case 1:return!t.call(this,n[0]);case 2:return!t.call(this,n[0],n[1]);case 3:return!t.call(this,n[0],n[1],n[2])}return!t.apply(this,n)}}Lo.Cache=Zr;var Bo=gi(function(t,n){var r=(n=1==n.length&&qo(n[0])?kn(n[0],Nn(uu())):kn(_e(n,1),Nn(uu()))).length;return Ke(function(e){for(var i=-1,u=gr(e.length,r);++i<u;)e[i]=n[i].call(this,e[i]);return gn(t,this,e)})}),Wo=Ke(function(t,n){var r=nr(n,iu(Wo));return Gi(t,a,e,n,r)}),Mo=Ke(function(t,n){var r=nr(n,iu(Mo));return Gi(t,64,e,n,r)}),Do=Xi(function(t,n){return Gi(t,256,e,e,e,n)});function Po(t,n){return t===n||t!=t&&n!=n}var $o=Ni(Ae),Fo=Ni(function(t,n){return t>=n}),No=Ie(function(){return arguments}())?Ie:function(t){return na(t)&&Et.call(t,\"callee\")&&!Xt.call(t,\"callee\")},qo=et.isArray,Zo=ln?Nn(ln):function(t){return na(t)&&xe(t)==S};function Jo(t){return null!=t&&Xo(t.length)&&!Yo(t)}function Ko(t){return na(t)&&Jo(t)}var Go=hr||gf,Vo=hn?Nn(hn):function(t){return na(t)&&xe(t)==g};function Ho(t){if(!na(t))return!1;var n=xe(t);return n==y||\"[object DOMException]\"==n||\"string\"==typeof t.message&&\"string\"==typeof t.name&&!ia(t)}function Yo(t){if(!ta(t))return!1;var n=xe(t);return n==w||n==b||\"[object AsyncFunction]\"==n||\"[object Proxy]\"==n}function Qo(t){return\"number\"==typeof t&&t==va(t)}function Xo(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=s}function ta(t){var n=typeof t;return null!=t&&(\"object\"==n||\"function\"==n)}function na(t){return null!=t&&\"object\"==typeof t}var ra=pn?Nn(pn):function(t){return na(t)&&lu(t)==m};function ea(t){return\"number\"==typeof t||na(t)&&xe(t)==j}function ia(t){if(!na(t)||xe(t)!=x)return!1;var n=Zt(t);if(null===n)return!0;var r=Et.call(n,\"constructor\")&&n.constructor;return\"function\"==typeof r&&r instanceof r&&Ct.call(r)==Bt}var ua=vn?Nn(vn):function(t){return na(t)&&xe(t)==k},oa=_n?Nn(_n):function(t){return na(t)&&lu(t)==U};function aa(t){return\"string\"==typeof t||!qo(t)&&na(t)&&xe(t)==O}function fa(t){return\"symbol\"==typeof t||na(t)&&xe(t)==R}var ca=dn?Nn(dn):function(t){return na(t)&&Xo(t.length)&&!!Yt[xe(t)]},sa=Ni(Te),la=Ni(function(t,n){return t<=n});function ha(t){if(!t)return[];if(Jo(t))return aa(t)?ur(t):Ui(t);if(on&&t[on])return function(t){for(var n,r=[];!(n=t.next()).done;)r.push(n.value);return r}(t[on]());var n=lu(t);return(n==m?Xn:n==U?rr:Pa)(t)}function pa(t){return t?(t=da(t))===c||-Infinity===t?17976931348623157e292*(t<0?-1:1):t==t?t:0:0===t?t:0}function va(t){var n=pa(t),r=n%1;return n==n?r?n-r:n:0}function _a(t){return t?ue(va(t),0,h):0}function da(t){if(\"number\"==typeof t)return t;if(fa(t))return l;if(ta(t)){var n=\"function\"==typeof t.valueOf?t.valueOf():t;t=ta(n)?n+\"\":n}if(\"string\"!=typeof t)return 0===t?t:+t;t=Fn(t);var r=pt.test(t);return r||_t.test(t)?nn(t.slice(2),r?2:8):ht.test(t)?l:+t}function ga(t){return Oi(t,Ea(t))}function ya(t){return null==t?\"\":oi(t)}var wa=Ii(function(t,n){if(bu(n)||Jo(n))Oi(n,Ca(n),t);else for(var r in n)Et.call(n,r)&&Xr(t,r,n[r])}),ba=Ii(function(t,n){Oi(n,Ea(n),t)}),ma=Ii(function(t,n,r,e){Oi(n,Ea(n),t,e)}),ja=Ii(function(t,n,r,e){Oi(n,Ca(n),t,e)}),xa=Xi(ie),Aa=Ke(function(t,n){t=At(t);var r=-1,i=n.length,u=i>2?n[2]:e;for(u&&du(n[0],n[1],u)&&(i=1);++r<i;)for(var o=n[r],a=Ea(o),f=-1,c=a.length;++f<c;){var s=a[f],l=t[s];(l===e||Po(l,It[s])&&!Et.call(t,s))&&(t[s]=o[s])}return t}),ka=Ke(function(t){return t.push(e,Hi),gn(La,e,t)});function Ua(t,n,r){var i=null==t?e:me(t,n);return i===e?r:i}function Oa(t,n){return null!=t&&hu(t,n,Ue)}var Ra=Mi(function(t,n,r){null!=n&&\"function\"!=typeof n.toString&&(n=Tt.call(n)),t[n]=r},tf(ef)),Ia=Mi(function(t,n,r){null!=n&&\"function\"!=typeof n.toString&&(n=Tt.call(n)),Et.call(t,n)?t[n].push(r):t[n]=[r]},uu),Sa=Ke(Re);function Ca(t){return Jo(t)?Gr(t):Le(t)}function Ea(t){return Jo(t)?Gr(t,!0):function(t){if(!ta(t))return function(t){var n=[];if(null!=t)for(var r in At(t))n.push(r);return n}(t);var n=bu(t),r=[];for(var e in t)(\"constructor\"!=e||!n&&Et.call(t,e))&&r.push(e);return r}(t)}var za=Ii(function(t,n,r){De(t,n,r)}),La=Ii(function(t,n,r,e){De(t,n,r,e)}),Ta=Xi(function(t,n){var r={};if(null==t)return r;var e=!1;n=kn(n,function(n){return n=di(n,t),e||(e=n.length>1),n}),Oi(t,nu(t),r),e&&(r=oe(r,7,Yi));for(var i=n.length;i--;)fi(r,n[i]);return r}),Ba=Xi(function(t,n){return null==t?{}:function(t,n){return Fe(t,n,function(n,r){return Oa(t,r)})}(t,n)});function Wa(t,n){if(null==t)return{};var r=kn(nu(t),function(t){return[t]});return n=uu(n),Fe(t,r,function(t,r){return n(t,r[0])})}var Ma=Ki(Ca),Da=Ki(Ea);function Pa(t){return null==t?[]:qn(t,Ca(t))}var $a=zi(function(t,n,r){return n=n.toLowerCase(),t+(r?Fa(n):n)});function Fa(t){return Ha(ya(t).toLowerCase())}function Na(t){return(t=ya(t))&&t.replace(gt,Vn).replace(qt,\"\")}var qa=zi(function(t,n,r){return t+(r?\"-\":\"\")+n.toLowerCase()}),Za=zi(function(t,n,r){return t+(r?\" \":\"\")+n.toLowerCase()}),Ja=Ei(\"toLowerCase\"),Ka=zi(function(t,n,r){return t+(r?\"_\":\"\")+n.toLowerCase()}),Ga=zi(function(t,n,r){return t+(r?\" \":\"\")+Ha(n)}),Va=zi(function(t,n,r){return t+(r?\" \":\"\")+n.toUpperCase()}),Ha=Ei(\"toUpperCase\");function Ya(t,n,r){return t=ya(t),(n=r?e:n)===e?function(t){return Gt.test(t)}(t)?function(t){return t.match(Jt)||[]}(t):function(t){return t.match(at)||[]}(t):t.match(n)||[]}var Qa=Ke(function(t,n){try{return gn(t,e,n)}catch(t){return Ho(t)?t:new mt(t)}}),Xa=Xi(function(t,n){return wn(n,function(n){n=Bu(n),ee(t,n,Io(t[n],t))}),t});function tf(t){return function(){return t}}var nf=Bi(),rf=Bi(!0);function ef(t){return t}function uf(t){return ze(\"function\"==typeof t?t:oe(t,1))}var of=Ke(function(t,n){return function(r){return Re(r,t,n)}}),af=Ke(function(t,n){return function(r){return Re(t,r,n)}});function ff(t,n,r){var e=Ca(n),i=be(n,e);null!=r||ta(n)&&(i.length||!e.length)||(r=n,n=t,t=this,i=be(n,Ca(n)));var u=!(ta(r)&&\"chain\"in r&&!r.chain),o=Yo(t);return wn(i,function(r){var e=n[r];t[r]=e,o&&(t.prototype[r]=function(){var n=this.__chain__;if(u||n){var r=t(this.__wrapped__),i=r.__actions__=Ui(this.__actions__);return i.push({func:e,args:arguments,thisArg:t}),r.__chain__=n,r}return e.apply(t,Un([this.value()],arguments))})}),t}function cf(){}var sf=Pi(kn),lf=Pi(mn),hf=Pi(In);function pf(t){return gu(t)?Wn(Bu(t)):function(t){return function(n){return me(n,t)}}(t)}var vf=Fi(),_f=Fi(!0);function df(){return[]}function gf(){return!1}var yf,wf=Di(function(t,n){return t+n},0),bf=Zi(\"ceil\"),mf=Di(function(t,n){return t/n},1),jf=Zi(\"floor\"),xf=Di(function(t,n){return t*n},1),Af=Zi(\"round\"),kf=Di(function(t,n){return t-n},0);return Mr.after=function(t,n){if(\"function\"!=typeof n)throw new Ot(i);return t=va(t),function(){if(--t<1)return n.apply(this,arguments)}},Mr.ary=Oo,Mr.assign=wa,Mr.assignIn=ba,Mr.assignInWith=ma,Mr.assignWith=ja,Mr.at=xa,Mr.before=Ro,Mr.bind=Io,Mr.bindAll=Xa,Mr.bindKey=So,Mr.castArray=function(){if(!arguments.length)return[];var t=arguments[0];return qo(t)?t:[t]},Mr.chain=lo,Mr.chunk=function(t,n,r){n=(r?du(t,n,r):n===e)?1:dr(va(n),0);var i=null==t?0:t.length;if(!i||n<1)return[];for(var u=0,o=0,a=et(cr(i/n));u<i;)a[o++]=ti(t,u,u+=n);return a},Mr.compact=function(t){for(var n=-1,r=null==t?0:t.length,e=0,i=[];++n<r;){var u=t[n];u&&(i[e++]=u)}return i},Mr.concat=function(){var t=arguments.length;if(!t)return[];for(var n=et(t-1),r=arguments[0],e=t;e--;)n[e-1]=arguments[e];return Un(qo(r)?Ui(r):[r],_e(n,1))},Mr.cond=function(t){var n=null==t?0:t.length,r=uu();return t=n?kn(t,function(t){if(\"function\"!=typeof t[1])throw new Ot(i);return[r(t[0]),t[1]]}):[],Ke(function(r){for(var e=-1;++e<n;){var i=t[e];if(gn(i[0],this,r))return gn(i[1],this,r)}})},Mr.conforms=function(t){return function(t){var n=Ca(t);return function(r){return ae(r,t,n)}}(oe(t,1))},Mr.constant=tf,Mr.countBy=vo,Mr.create=function(t,n){var r=Dr(t);return null==n?r:re(r,n)},Mr.curry=function t(n,r,i){var u=Gi(n,8,e,e,e,e,e,r=i?e:r);return u.placeholder=t.placeholder,u},Mr.curryRight=function t(n,r,i){var u=Gi(n,16,e,e,e,e,e,r=i?e:r);return u.placeholder=t.placeholder,u},Mr.debounce=Co,Mr.defaults=Aa,Mr.defaultsDeep=ka,Mr.defer=Eo,Mr.delay=zo,Mr.difference=Du,Mr.differenceBy=Pu,Mr.differenceWith=$u,Mr.drop=function(t,n,r){var i=null==t?0:t.length;return i?ti(t,(n=r||n===e?1:va(n))<0?0:n,i):[]},Mr.dropRight=function(t,n,r){var i=null==t?0:t.length;return i?ti(t,0,(n=i-(n=r||n===e?1:va(n)))<0?0:n):[]},Mr.dropRightWhile=function(t,n){return t&&t.length?si(t,uu(n,3),!0,!0):[]},Mr.dropWhile=function(t,n){return t&&t.length?si(t,uu(n,3),!0):[]},Mr.fill=function(t,n,r,i){var u=null==t?0:t.length;return u?(r&&\"number\"!=typeof r&&du(t,n,r)&&(r=0,i=u),function(t,n,r,i){var u=t.length;for((r=va(r))<0&&(r=-r>u?0:u+r),(i=i===e||i>u?u:va(i))<0&&(i+=u),i=r>i?0:_a(i);r<i;)t[r++]=n;return t}(t,n,r,i)):[]},Mr.filter=function(t,n){return(qo(t)?jn:ve)(t,uu(n,3))},Mr.flatMap=function(t,n){return _e(xo(t,n),1)},Mr.flatMapDeep=function(t,n){return _e(xo(t,n),c)},Mr.flatMapDepth=function(t,n,r){return r=r===e?1:va(r),_e(xo(t,n),r)},Mr.flatten=qu,Mr.flattenDeep=function(t){return null!=t&&t.length?_e(t,c):[]},Mr.flattenDepth=function(t,n){return null!=t&&t.length?_e(t,n=n===e?1:va(n)):[]},Mr.flip=function(t){return Gi(t,512)},Mr.flow=nf,Mr.flowRight=rf,Mr.fromPairs=function(t){for(var n=-1,r=null==t?0:t.length,e={};++n<r;){var i=t[n];e[i[0]]=i[1]}return e},Mr.functions=function(t){return null==t?[]:be(t,Ca(t))},Mr.functionsIn=function(t){return null==t?[]:be(t,Ea(t))},Mr.groupBy=bo,Mr.initial=function(t){return null!=t&&t.length?ti(t,0,-1):[]},Mr.intersection=Ju,Mr.intersectionBy=Ku,Mr.intersectionWith=Gu,Mr.invert=Ra,Mr.invertBy=Ia,Mr.invokeMap=mo,Mr.iteratee=uf,Mr.keyBy=jo,Mr.keys=Ca,Mr.keysIn=Ea,Mr.map=xo,Mr.mapKeys=function(t,n){var r={};return n=uu(n,3),ye(t,function(t,e,i){ee(r,n(t,e,i),t)}),r},Mr.mapValues=function(t,n){var r={};return n=uu(n,3),ye(t,function(t,e,i){ee(r,e,n(t,e,i))}),r},Mr.matches=function(t){return We(oe(t,1))},Mr.matchesProperty=function(t,n){return Me(t,oe(n,1))},Mr.memoize=Lo,Mr.merge=za,Mr.mergeWith=La,Mr.method=of,Mr.methodOf=af,Mr.mixin=ff,Mr.negate=To,Mr.nthArg=function(t){return t=va(t),Ke(function(n){return Pe(n,t)})},Mr.omit=Ta,Mr.omitBy=function(t,n){return Wa(t,To(uu(n)))},Mr.once=function(t){return Ro(2,t)},Mr.orderBy=function(t,n,r,i){return null==t?[]:(qo(n)||(n=null==n?[]:[n]),qo(r=i?e:r)||(r=null==r?[]:[r]),$e(t,n,r))},Mr.over=sf,Mr.overArgs=Bo,Mr.overEvery=lf,Mr.overSome=hf,Mr.partial=Wo,Mr.partialRight=Mo,Mr.partition=Ao,Mr.pick=Ba,Mr.pickBy=Wa,Mr.property=pf,Mr.propertyOf=function(t){return function(n){return null==t?e:me(t,n)}},Mr.pull=Hu,Mr.pullAll=Yu,Mr.pullAllBy=function(t,n,r){return t&&t.length&&n&&n.length?Ne(t,n,uu(r,2)):t},Mr.pullAllWith=function(t,n,r){return t&&t.length&&n&&n.length?Ne(t,n,e,r):t},Mr.pullAt=Qu,Mr.range=vf,Mr.rangeRight=_f,Mr.rearg=Do,Mr.reject=function(t,n){return(qo(t)?jn:ve)(t,To(uu(n,3)))},Mr.remove=function(t,n){var r=[];if(!t||!t.length)return r;var e=-1,i=[],u=t.length;for(n=uu(n,3);++e<u;){var o=t[e];n(o,e,t)&&(r.push(o),i.push(e))}return qe(t,i),r},Mr.rest=function(t,n){if(\"function\"!=typeof t)throw new Ot(i);return Ke(t,n=n===e?n:va(n))},Mr.reverse=Xu,Mr.sampleSize=function(t,n,r){return n=(r?du(t,n,r):n===e)?1:va(n),(qo(t)?Hr:Ve)(t,n)},Mr.set=function(t,n,r){return null==t?t:He(t,n,r)},Mr.setWith=function(t,n,r,i){return i=\"function\"==typeof i?i:e,null==t?t:He(t,n,r,i)},Mr.shuffle=function(t){return(qo(t)?Yr:Xe)(t)},Mr.slice=function(t,n,r){var i=null==t?0:t.length;return i?(r&&\"number\"!=typeof r&&du(t,n,r)?(n=0,r=i):(n=null==n?0:va(n),r=r===e?i:va(r)),ti(t,n,r)):[]},Mr.sortBy=ko,Mr.sortedUniq=function(t){return t&&t.length?ii(t):[]},Mr.sortedUniqBy=function(t,n){return t&&t.length?ii(t,uu(n,2)):[]},Mr.split=function(t,n,r){return r&&\"number\"!=typeof r&&du(t,n,r)&&(n=r=e),(r=r===e?h:r>>>0)?(t=ya(t))&&(\"string\"==typeof n||null!=n&&!ua(n))&&!(n=oi(n))&&Qn(t)?yi(ur(t),0,r):t.split(n,r):[]},Mr.spread=function(t,n){if(\"function\"!=typeof t)throw new Ot(i);return n=null==n?0:dr(va(n),0),Ke(function(r){var e=r[n],i=yi(r,0,n);return e&&Un(i,e),gn(t,this,i)})},Mr.tail=function(t){var n=null==t?0:t.length;return n?ti(t,1,n):[]},Mr.take=function(t,n,r){return t&&t.length?ti(t,0,(n=r||n===e?1:va(n))<0?0:n):[]},Mr.takeRight=function(t,n,r){var i=null==t?0:t.length;return i?ti(t,(n=i-(n=r||n===e?1:va(n)))<0?0:n,i):[]},Mr.takeRightWhile=function(t,n){return t&&t.length?si(t,uu(n,3),!1,!0):[]},Mr.takeWhile=function(t,n){return t&&t.length?si(t,uu(n,3)):[]},Mr.tap=function(t,n){return n(t),t},Mr.throttle=function(t,n,r){var e=!0,u=!0;if(\"function\"!=typeof t)throw new Ot(i);return ta(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),Co(t,n,{leading:e,maxWait:n,trailing:u})},Mr.thru=ho,Mr.toArray=ha,Mr.toPairs=Ma,Mr.toPairsIn=Da,Mr.toPath=function(t){return qo(t)?kn(t,Bu):fa(t)?[t]:Ui(Tu(ya(t)))},Mr.toPlainObject=ga,Mr.transform=function(t,n,r){var e=qo(t),i=e||Go(t)||ca(t);if(n=uu(n,4),null==r){var u=t&&t.constructor;r=i?e?new u:[]:ta(t)&&Yo(u)?Dr(Zt(t)):{}}return(i?wn:ye)(t,function(t,e,i){return n(r,t,e,i)}),r},Mr.unary=function(t){return Oo(t,1)},Mr.union=to,Mr.unionBy=no,Mr.unionWith=ro,Mr.uniq=function(t){return t&&t.length?ai(t):[]},Mr.uniqBy=function(t,n){return t&&t.length?ai(t,uu(n,2)):[]},Mr.uniqWith=function(t,n){return n=\"function\"==typeof n?n:e,t&&t.length?ai(t,e,n):[]},Mr.unset=function(t,n){return null==t||fi(t,n)},Mr.unzip=eo,Mr.unzipWith=io,Mr.update=function(t,n,r){return null==t?t:ci(t,n,_i(r))},Mr.updateWith=function(t,n,r,i){return i=\"function\"==typeof i?i:e,null==t?t:ci(t,n,_i(r),i)},Mr.values=Pa,Mr.valuesIn=function(t){return null==t?[]:qn(t,Ea(t))},Mr.without=uo,Mr.words=Ya,Mr.wrap=function(t,n){return Wo(_i(n),t)},Mr.xor=oo,Mr.xorBy=ao,Mr.xorWith=fo,Mr.zip=co,Mr.zipObject=function(t,n){return pi(t||[],n||[],Xr)},Mr.zipObjectDeep=function(t,n){return pi(t||[],n||[],He)},Mr.zipWith=so,Mr.entries=Ma,Mr.entriesIn=Da,Mr.extend=ba,Mr.extendWith=ma,ff(Mr,Mr),Mr.add=wf,Mr.attempt=Qa,Mr.camelCase=$a,Mr.capitalize=Fa,Mr.ceil=bf,Mr.clamp=function(t,n,r){return r===e&&(r=n,n=e),r!==e&&(r=(r=da(r))==r?r:0),n!==e&&(n=(n=da(n))==n?n:0),ue(da(t),n,r)},Mr.clone=function(t){return oe(t,4)},Mr.cloneDeep=function(t){return oe(t,5)},Mr.cloneDeepWith=function(t,n){return oe(t,5,n=\"function\"==typeof n?n:e)},Mr.cloneWith=function(t,n){return oe(t,4,n=\"function\"==typeof n?n:e)},Mr.conformsTo=function(t,n){return null==n||ae(t,n,Ca(n))},Mr.deburr=Na,Mr.defaultTo=function(t,n){return null==t||t!=t?n:t},Mr.divide=mf,Mr.endsWith=function(t,n,r){t=ya(t),n=oi(n);var i=t.length,u=r=r===e?i:ue(va(r),0,i);return(r-=n.length)>=0&&t.slice(r,u)==n},Mr.eq=Po,Mr.escape=function(t){return(t=ya(t))&&K.test(t)?t.replace(Z,Hn):t},Mr.escapeRegExp=function(t){return(t=ya(t))&&nt.test(t)?t.replace(tt,\"\\\\$&\"):t},Mr.every=function(t,n,r){var i=qo(t)?mn:he;return r&&du(t,n,r)&&(n=e),i(t,uu(n,3))},Mr.find=_o,Mr.findIndex=Fu,Mr.findKey=function(t,n){return Cn(t,uu(n,3),ye)},Mr.findLast=go,Mr.findLastIndex=Nu,Mr.findLastKey=function(t,n){return Cn(t,uu(n,3),we)},Mr.floor=jf,Mr.forEach=yo,Mr.forEachRight=wo,Mr.forIn=function(t,n){return null==t?t:de(t,uu(n,3),Ea)},Mr.forInRight=function(t,n){return null==t?t:ge(t,uu(n,3),Ea)},Mr.forOwn=function(t,n){return t&&ye(t,uu(n,3))},Mr.forOwnRight=function(t,n){return t&&we(t,uu(n,3))},Mr.get=Ua,Mr.gt=$o,Mr.gte=Fo,Mr.has=function(t,n){return null!=t&&hu(t,n,ke)},Mr.hasIn=Oa,Mr.head=Zu,Mr.identity=ef,Mr.includes=function(t,n,r,e){t=Jo(t)?t:Pa(t),r=r&&!e?va(r):0;var i=t.length;return r<0&&(r=dr(i+r,0)),aa(t)?r<=i&&t.indexOf(n,r)>-1:!!i&&zn(t,n,r)>-1},Mr.indexOf=function(t,n,r){var e=null==t?0:t.length;if(!e)return-1;var i=null==r?0:va(r);return i<0&&(i=dr(e+i,0)),zn(t,n,i)},Mr.inRange=function(t,n,r){return n=pa(n),r===e?(r=n,n=0):r=pa(r),function(t,n,r){return t>=gr(n,r)&&t<dr(n,r)}(t=da(t),n,r)},Mr.invoke=Sa,Mr.isArguments=No,Mr.isArray=qo,Mr.isArrayBuffer=Zo,Mr.isArrayLike=Jo,Mr.isArrayLikeObject=Ko,Mr.isBoolean=function(t){return!0===t||!1===t||na(t)&&xe(t)==d},Mr.isBuffer=Go,Mr.isDate=Vo,Mr.isElement=function(t){return na(t)&&1===t.nodeType&&!ia(t)},Mr.isEmpty=function(t){if(null==t)return!0;if(Jo(t)&&(qo(t)||\"string\"==typeof t||\"function\"==typeof t.splice||Go(t)||ca(t)||No(t)))return!t.length;var n=lu(t);if(n==m||n==U)return!t.size;if(bu(t))return!Le(t).length;for(var r in t)if(Et.call(t,r))return!1;return!0},Mr.isEqual=function(t,n){return Se(t,n)},Mr.isEqualWith=function(t,n,r){var i=(r=\"function\"==typeof r?r:e)?r(t,n):e;return i===e?Se(t,n,e,r):!!i},Mr.isError=Ho,Mr.isFinite=function(t){return\"number\"==typeof t&&pr(t)},Mr.isFunction=Yo,Mr.isInteger=Qo,Mr.isLength=Xo,Mr.isMap=ra,Mr.isMatch=function(t,n){return t===n||Ce(t,n,au(n))},Mr.isMatchWith=function(t,n,r){return r=\"function\"==typeof r?r:e,Ce(t,n,au(n),r)},Mr.isNaN=function(t){return ea(t)&&t!=+t},Mr.isNative=function(t){if(wu(t))throw new mt(\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\");return Ee(t)},Mr.isNil=function(t){return null==t},Mr.isNull=function(t){return null===t},Mr.isNumber=ea,Mr.isObject=ta,Mr.isObjectLike=na,Mr.isPlainObject=ia,Mr.isRegExp=ua,Mr.isSafeInteger=function(t){return Qo(t)&&t>=-9007199254740991&&t<=s},Mr.isSet=oa,Mr.isString=aa,Mr.isSymbol=fa,Mr.isTypedArray=ca,Mr.isUndefined=function(t){return t===e},Mr.isWeakMap=function(t){return na(t)&&lu(t)==I},Mr.isWeakSet=function(t){return na(t)&&\"[object WeakSet]\"==xe(t)},Mr.join=function(t,n){return null==t?\"\":vr.call(t,n)},Mr.kebabCase=qa,Mr.last=Vu,Mr.lastIndexOf=function(t,n,r){var i=null==t?0:t.length;if(!i)return-1;var u=i;return r!==e&&(u=(u=va(r))<0?dr(i+u,0):gr(u,i-1)),n==n?function(t,n,r){for(var e=r+1;e--;)if(t[e]===n)return e;return e}(t,n,u):En(t,Tn,u,!0)},Mr.lowerCase=Za,Mr.lowerFirst=Ja,Mr.lt=sa,Mr.lte=la,Mr.max=function(t){return t&&t.length?pe(t,ef,Ae):e},Mr.maxBy=function(t,n){return t&&t.length?pe(t,uu(n,2),Ae):e},Mr.mean=function(t){return Bn(t,ef)},Mr.meanBy=function(t,n){return Bn(t,uu(n,2))},Mr.min=function(t){return t&&t.length?pe(t,ef,Te):e},Mr.minBy=function(t,n){return t&&t.length?pe(t,uu(n,2),Te):e},Mr.stubArray=df,Mr.stubFalse=gf,Mr.stubObject=function(){return{}},Mr.stubString=function(){return\"\"},Mr.stubTrue=function(){return!0},Mr.multiply=xf,Mr.nth=function(t,n){return t&&t.length?Pe(t,va(n)):e},Mr.noConflict=function(){return un._===this&&(un._=Wt),this},Mr.noop=cf,Mr.now=Uo,Mr.pad=function(t,n,r){t=ya(t);var e=(n=va(n))?ir(t):0;if(!n||e>=n)return t;var i=(n-e)/2;return $i(sr(i),r)+t+$i(cr(i),r)},Mr.padEnd=function(t,n,r){t=ya(t);var e=(n=va(n))?ir(t):0;return n&&e<n?t+$i(n-e,r):t},Mr.padStart=function(t,n,r){t=ya(t);var e=(n=va(n))?ir(t):0;return n&&e<n?$i(n-e,r)+t:t},Mr.parseInt=function(t,n,r){return r||null==n?n=0:n&&(n=+n),wr(ya(t).replace(rt,\"\"),n||0)},Mr.random=function(t,n,r){if(r&&\"boolean\"!=typeof r&&du(t,n,r)&&(n=r=e),r===e&&(\"boolean\"==typeof n?(r=n,n=e):\"boolean\"==typeof t&&(r=t,t=e)),t===e&&n===e?(t=0,n=1):(t=pa(t),n===e?(n=t,t=0):n=pa(n)),t>n){var i=t;t=n,n=i}if(r||t%1||n%1){var u=br();return gr(t+u*(n-t+tn(\"1e-\"+((u+\"\").length-1))),n)}return Ze(t,n)},Mr.reduce=function(t,n,r){var e=qo(t)?On:Dn,i=arguments.length<3;return e(t,uu(n,4),r,i,se)},Mr.reduceRight=function(t,n,r){var e=qo(t)?Rn:Dn,i=arguments.length<3;return e(t,uu(n,4),r,i,le)},Mr.repeat=function(t,n,r){return n=(r?du(t,n,r):n===e)?1:va(n),Je(ya(t),n)},Mr.replace=function(){var t=arguments,n=ya(t[0]);return t.length<3?n:n.replace(t[1],t[2])},Mr.result=function(t,n,r){var i=-1,u=(n=di(n,t)).length;for(u||(u=1,t=e);++i<u;){var o=null==t?e:t[Bu(n[i])];o===e&&(i=u,o=r),t=Yo(o)?o.call(t):o}return t},Mr.round=Af,Mr.runInContext=t,Mr.sample=function(t){return(qo(t)?Vr:Ge)(t)},Mr.size=function(t){if(null==t)return 0;if(Jo(t))return aa(t)?ir(t):t.length;var n=lu(t);return n==m||n==U?t.size:Le(t).length},Mr.snakeCase=Ka,Mr.some=function(t,n,r){var i=qo(t)?In:ni;return r&&du(t,n,r)&&(n=e),i(t,uu(n,3))},Mr.sortedIndex=function(t,n){return ri(t,n)},Mr.sortedIndexBy=function(t,n,r){return ei(t,n,uu(r,2))},Mr.sortedIndexOf=function(t,n){var r=null==t?0:t.length;if(r){var e=ri(t,n);if(e<r&&Po(t[e],n))return e}return-1},Mr.sortedLastIndex=function(t,n){return ri(t,n,!0)},Mr.sortedLastIndexBy=function(t,n,r){return ei(t,n,uu(r,2),!0)},Mr.sortedLastIndexOf=function(t,n){if(null!=t&&t.length){var r=ri(t,n,!0)-1;if(Po(t[r],n))return r}return-1},Mr.startCase=Ga,Mr.startsWith=function(t,n,r){return t=ya(t),r=null==r?0:ue(va(r),0,t.length),n=oi(n),t.slice(r,r+n.length)==n},Mr.subtract=kf,Mr.sum=function(t){return t&&t.length?Pn(t,ef):0},Mr.sumBy=function(t,n){return t&&t.length?Pn(t,uu(n,2)):0},Mr.template=function(t,n,r){var i=Mr.templateSettings;r&&du(t,n,r)&&(n=e),t=ya(t),n=ma({},n,i,Vi);var u,o,a=ma({},n.imports,i.imports,Vi),f=Ca(a),c=qn(a,f),s=0,l=n.interpolate||yt,h=\"__p += '\",p=kt((n.escape||yt).source+\"|\"+l.source+\"|\"+(l===H?st:yt).source+\"|\"+(n.evaluate||yt).source+\"|$\",\"g\"),v=\"//# sourceURL=\"+(Et.call(n,\"sourceURL\")?(n.sourceURL+\"\").replace(/\\s/g,\" \"):\"lodash.templateSources[\"+ ++Ht+\"]\")+\"\\n\";t.replace(p,function(n,r,e,i,a,f){return e||(e=i),h+=t.slice(s,f).replace(wt,Yn),r&&(u=!0,h+=\"' +\\n__e(\"+r+\") +\\n'\"),a&&(o=!0,h+=\"';\\n\"+a+\";\\n__p += '\"),e&&(h+=\"' +\\n((__t = (\"+e+\")) == null ? '' : __t) +\\n'\"),s=f+n.length,n}),h+=\"';\\n\";var _=Et.call(n,\"variable\")&&n.variable;if(_){if(ft.test(_))throw new mt(\"Invalid `variable` option passed into `_.template`\")}else h=\"with (obj) {\\n\"+h+\"\\n}\\n\";h=(o?h.replace($,\"\"):h).replace(F,\"$1\").replace(N,\"$1;\"),h=\"function(\"+(_||\"obj\")+\") {\\n\"+(_?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(u?\", __e = _.escape\":\"\")+(o?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+h+\"return __p\\n}\";var d=Qa(function(){return jt(f,v+\"return \"+h).apply(e,c)});if(d.source=h,Ho(d))throw d;return d},Mr.times=function(t,n){if((t=va(t))<1||t>s)return[];var r=h,e=gr(t,h);n=uu(n),t-=h;for(var i=$n(e,n);++r<t;)n(r);return i},Mr.toFinite=pa,Mr.toInteger=va,Mr.toLength=_a,Mr.toLower=function(t){return ya(t).toLowerCase()},Mr.toNumber=da,Mr.toSafeInteger=function(t){return t?ue(va(t),-9007199254740991,s):0===t?t:0},Mr.toString=ya,Mr.toUpper=function(t){return ya(t).toUpperCase()},Mr.trim=function(t,n,r){if((t=ya(t))&&(r||n===e))return Fn(t);if(!t||!(n=oi(n)))return t;var i=ur(t),u=ur(n);return yi(i,Jn(i,u),Kn(i,u)+1).join(\"\")},Mr.trimEnd=function(t,n,r){if((t=ya(t))&&(r||n===e))return t.slice(0,or(t)+1);if(!t||!(n=oi(n)))return t;var i=ur(t);return yi(i,0,Kn(i,ur(n))+1).join(\"\")},Mr.trimStart=function(t,n,r){if((t=ya(t))&&(r||n===e))return t.replace(rt,\"\");if(!t||!(n=oi(n)))return t;var i=ur(t);return yi(i,Jn(i,ur(n))).join(\"\")},Mr.truncate=function(t,n){var r=30,i=\"...\";if(ta(n)){var u=\"separator\"in n?n.separator:u;r=\"length\"in n?va(n.length):r,i=\"omission\"in n?oi(n.omission):i}var o=(t=ya(t)).length;if(Qn(t)){var a=ur(t);o=a.length}if(r>=o)return t;var f=r-ir(i);if(f<1)return i;var c=a?yi(a,0,f).join(\"\"):t.slice(0,f);if(u===e)return c+i;if(a&&(f+=c.length-f),ua(u)){if(t.slice(f).search(u)){var s,l=c;for(u.global||(u=kt(u.source,ya(lt.exec(u))+\"g\")),u.lastIndex=0;s=u.exec(l);)var h=s.index;c=c.slice(0,h===e?f:h)}}else if(t.indexOf(oi(u),f)!=f){var p=c.lastIndexOf(u);p>-1&&(c=c.slice(0,p))}return c+i},Mr.unescape=function(t){return(t=ya(t))&&J.test(t)?t.replace(q,ar):t},Mr.uniqueId=function(t){var n=++zt;return ya(t)+n},Mr.upperCase=Va,Mr.upperFirst=Ha,Mr.each=yo,Mr.eachRight=wo,Mr.first=Zu,ff(Mr,(yf={},ye(Mr,function(t,n){Et.call(Mr.prototype,n)||(yf[n]=t)}),yf),{chain:!1}),Mr.VERSION=\"4.17.21\",wn([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],function(t){Mr[t].placeholder=Mr}),wn([\"drop\",\"take\"],function(t,n){Fr.prototype[t]=function(r){r=r===e?1:dr(va(r),0);var i=this.__filtered__&&!n?new Fr(this):this.clone();return i.__filtered__?i.__takeCount__=gr(r,i.__takeCount__):i.__views__.push({size:gr(r,h),type:t+(i.__dir__<0?\"Right\":\"\")}),i},Fr.prototype[t+\"Right\"]=function(n){return this.reverse()[t](n).reverse()}}),wn([\"filter\",\"map\",\"takeWhile\"],function(t,n){var r=n+1,e=1==r||3==r;Fr.prototype[t]=function(t){var n=this.clone();return n.__iteratees__.push({iteratee:uu(t,3),type:r}),n.__filtered__=n.__filtered__||e,n}}),wn([\"head\",\"last\"],function(t,n){var r=\"take\"+(n?\"Right\":\"\");Fr.prototype[t]=function(){return this[r](1).value()[0]}}),wn([\"initial\",\"tail\"],function(t,n){var r=\"drop\"+(n?\"\":\"Right\");Fr.prototype[t]=function(){return this.__filtered__?new Fr(this):this[r](1)}}),Fr.prototype.compact=function(){return this.filter(ef)},Fr.prototype.find=function(t){return this.filter(t).head()},Fr.prototype.findLast=function(t){return this.reverse().find(t)},Fr.prototype.invokeMap=Ke(function(t,n){return\"function\"==typeof t?new Fr(this):this.map(function(r){return Re(r,t,n)})}),Fr.prototype.reject=function(t){return this.filter(To(uu(t)))},Fr.prototype.slice=function(t,n){t=va(t);var r=this;return r.__filtered__&&(t>0||n<0)?new Fr(r):(t<0?r=r.takeRight(-t):t&&(r=r.drop(t)),n!==e&&(r=(n=va(n))<0?r.dropRight(-n):r.take(n-t)),r)},Fr.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},Fr.prototype.toArray=function(){return this.take(h)},ye(Fr.prototype,function(t,n){var r=/^(?:filter|find|map|reject)|While$/.test(n),i=/^(?:head|last)$/.test(n),u=Mr[i?\"take\"+(\"last\"==n?\"Right\":\"\"):n],o=i||/^find/.test(n);u&&(Mr.prototype[n]=function(){var n=this.__wrapped__,a=i?[1]:arguments,f=n instanceof Fr,c=a[0],s=f||qo(n),l=function(t){var n=u.apply(Mr,Un([t],a));return i&&h?n[0]:n};s&&r&&\"function\"==typeof c&&1!=c.length&&(f=s=!1);var h=this.__chain__,p=!!this.__actions__.length,v=o&&!h,_=f&&!p;if(!o&&s){n=_?n:new Fr(this);var d=t.apply(n,a);return d.__actions__.push({func:ho,args:[l],thisArg:e}),new $r(d,h)}return v&&_?t.apply(this,a):(d=this.thru(l),v?i?d.value()[0]:d.value():d)})}),wn([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(t){var n=Rt[t],r=/^(?:push|sort|unshift)$/.test(t)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(t);Mr.prototype[t]=function(){var t=arguments;if(e&&!this.__chain__){var i=this.value();return n.apply(qo(i)?i:[],t)}return this[r](function(r){return n.apply(qo(r)?r:[],t)})}}),ye(Fr.prototype,function(t,n){var r=Mr[n];if(r){var e=r.name+\"\";Et.call(Ir,e)||(Ir[e]=[]),Ir[e].push({name:n,func:r})}}),Ir[Wi(e,2).name]=[{name:\"wrapper\",func:e}],Fr.prototype.clone=function(){var t=new Fr(this.__wrapped__);return t.__actions__=Ui(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=Ui(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=Ui(this.__views__),t},Fr.prototype.reverse=function(){if(this.__filtered__){var t=new Fr(this);t.__dir__=-1,t.__filtered__=!0}else(t=this.clone()).__dir__*=-1;return t},Fr.prototype.value=function(){var t=this.__wrapped__.value(),n=this.__dir__,r=qo(t),e=n<0,i=r?t.length:0,u=function(t,n,r){for(var e=-1,i=r.length;++e<i;){var u=r[e],o=u.size;switch(u.type){case\"drop\":t+=o;break;case\"dropRight\":n-=o;break;case\"take\":n=gr(n,t+o);break;case\"takeRight\":t=dr(t,n-o)}}return{start:t,end:n}}(0,i,this.__views__),o=u.start,a=u.end,f=a-o,c=e?a:o-1,s=this.__iteratees__,l=s.length,h=0,p=gr(f,this.__takeCount__);if(!r||!e&&i==f&&p==f)return li(t,this.__actions__);var v=[];t:for(;f--&&h<p;){for(var _=-1,d=t[c+=n];++_<l;){var g=s[_],y=g.type,w=(0,g.iteratee)(d);if(2==y)d=w;else if(!w){if(1==y)continue t;break t}}v[h++]=d}return v},Mr.prototype.at=po,Mr.prototype.chain=function(){return lo(this)},Mr.prototype.commit=function(){return new $r(this.value(),this.__chain__)},Mr.prototype.next=function(){this.__values__===e&&(this.__values__=ha(this.value()));var t=this.__index__>=this.__values__.length;return{done:t,value:t?e:this.__values__[this.__index__++]}},Mr.prototype.plant=function(t){for(var n,r=this;r instanceof Pr;){var i=Mu(r);i.__index__=0,i.__values__=e,n?u.__wrapped__=i:n=i;var u=i;r=r.__wrapped__}return u.__wrapped__=t,n},Mr.prototype.reverse=function(){var t=this.__wrapped__;if(t instanceof Fr){var n=t;return this.__actions__.length&&(n=new Fr(this)),(n=n.reverse()).__actions__.push({func:ho,args:[Xu],thisArg:e}),new $r(n,this.__chain__)}return this.thru(Xu)},Mr.prototype.toJSON=Mr.prototype.valueOf=Mr.prototype.value=function(){return li(this.__wrapped__,this.__actions__)},Mr.prototype.first=Mr.prototype.head,on&&(Mr.prototype[on]=function(){return this}),Mr}();an?((an.exports=fr)._=fr,on._=fr):un._=fr}).call(r)}(n={exports:{}},n.exports),n.exports);class i{constructor(t){this.M=null,this.P=null,this.T=t}type(t){return new i(t)}payload(){return new i(this.T)}message(t){return this.T===t.type}build(t){return Object.assign({type:this.T,sentAt:Date.now()},t)}}const u=new i(\"\"),o=u.type(\"error\").payload(),a=u.type(\"gnop.join\").payload(),f=u.type(\"gnop.rejoin\").payload(),c=u.type(\"gnop.joined\").payload(),s=u.type(\"gnop.disconnected\").payload(),l=u.type(\"gnop.playerUpdate\").payload(),h=u.type(\"gnop.ballUpdate\").payload();u.type(\"gnop.point\").payload();const p=u.type(\"session.created\").payload();u.type(\"session.closed\").payload();class v{constructor(n={}){this.opts={timeWindowMs:1e3,dMs:1e3,maxSentLen:1e3},this.sent=[],this.received=[],this.stats={matches:0,misses:0,searches:0,searchLen:0},this.isMatch=(t,n)=>{const r=t.payload.position,e=n.payload.position,i=this.opts.dMs/1e3;return _(t.sentAt,this.opts.timeWindowMs,n.sentAt)&&_(r.x,r.dx*i,e.x)&&_(r.y,r.dy*i,e.y)},this.opts=t({},this.opts,n)}summarize(){return`${this.percentMatches()}% matches, ${this.averageSearchLen()}`}percentMatches(){return Math.round(100*this.stats.matches/(this.stats.matches+this.stats.misses))}averageSearchLen(){return Math.round(this.stats.searchLen/this.stats.searches)}trackSent(t){this.sent.push(t),d(this.sent,this.opts.maxSentLen)}trackReceived(t){const n=this.matchReceived(t);return n?this.stats.matches+=1:(this.stats.misses+=1,this.received.push(t)),n}matchReceived(t){const n=e.sortedIndexBy(this.sent,t,n=>n===t?t.sentAt-this.opts.timeWindowMs:n.sentAt),r=e.sortedIndexBy(this.sent,t,n=>n===t?t.sentAt+this.opts.timeWindowMs:n.sentAt);this.stats.searches+=1;for(let e=n;e<r&&e<this.sent.length;e++){this.stats.searchLen+=1;const n=this.sent[e];if(this.isMatch(n,t))return n}}get(){const t=this.received.pop();return this.received.splice(0),t}}const _=(t,n,r)=>e.clamp(r,t-n,t+n)===r,d=(t,n)=>{const r=Math.max(0,t.length-n);t.splice(0,r)},g=()=>{const t={};return t.promise=new Promise((n,r)=>{t.resolve=n,t.reject=r}),t},y=[\"Air Freshener\",\"Bath\",\"Bathmat\",\"Bidet\",\"Bleach\",\"Body Wash\",\"Bubble Bath\",\"Conditioner\",\"Faucet\",\"Floss\",\"Loofah\",\"Lotion\",\"Plunger\",\"Razor\",\"Rubber Ducky\",\"Shampoo\",\"Sink\",\"Soap\",\"Toilet Paper\",\"Toothbrush\",\"Towel\"],w=()=>e.sample(y)||y[0];Object.assign(globalThis,{Gnop:{WsClient:class{constructor(n={}){this.options={host:\"ws://sangervasi.net\",verbose:!1,ballTracker:{}},this.name=w(),this.state={state:\"init\"},this.promises={connect:g(),join:g()},this.playerUpdates=[],this.ballTracker=new v,this.handleMessage=t=>{const n=(t=>{let n,r=\"\";try{n=JSON.parse(t.toString())}catch(t){r=t.message}return\"\"!==r?o.build({sessionUuid:\"\",payload:{message:r}}):\"object\"==typeof(e=n)&&null!==e&&\"type\"in e?(n.receivedAt=Date.now(),n):o.build({sessionUuid:\"\",payload:{message:\"Invalid message structure\"}});var e})(t.data);return p.message(n)?this.handleCreated(n):c.message(n)?this.handleJoined(n):s.message(n)?this.handleDisconnected(n):l.message(n)?this.handlePlayerUpdate(n):h.message(n)?this.handleBallUpdate(n):void console.warn(\"Unhandled message:\",n)},this.handleCreated=n=>{\"creating\"===this.state.state?(this.info(\"Created\",n.sessionUuid),this.state=t({},this.state,{state:\"created\",sessionUuid:n.sessionUuid}),this.promises.connect.resolve()):console.warn(\"Received created message while in state:\",this.state.state)},this.handleJoined=n=>{if(\"joining\"!==this.state.state)return void console.warn(\"Received joined message while in state:\",this.state.state);const{self:r,opponent:e}=this.findPlayers(n.payload);this.state=t({},this.state,{self:r,opponent:e}),r&&e?(this.info(\"Joined\",n),this.state=t({},this.state,{state:\"joined\",self:r,opponent:e}),this.ballTracker=new v(this.options.ballTracker),this.promises.join.resolve()):console.warn(\"Partially joined\",n)},this.handleDisconnected=n=>{if(\"joined\"!==this.state.state)return void console.warn(\"Disconnected while not joined\");const{self:r,opponent:e}=this.findPlayers(n.payload);r&&e?this.state=t({},this.state,{self:r,opponent:e}):console.warn(\"Disconnected without self & opponent\")},this.handlePlayerUpdate=t=>{\"joined\"===this.state.state?(this.info(\"Received player update\",t.payload),this.state.opponent=t.payload.player,this.playerUpdates.push(t.payload)):console.warn(\"Received update message while in state:\",this.state.state)},this.handleBallUpdate=t=>{\"joined\"===this.state.state?(this.info(\"Received ball update\",t.payload),this.ballTracker.trackReceived(t)):console.warn(\"Received update message while in state:\",this.state.state)},this.handleOpen=()=>{this.info(\"Opened\")},this.handleClose=()=>{this.state={state:\"init\"},console.warn(\"Closed\")},this.handleError=()=>{this.state={state:\"init\"},console.error(\"Errored\")},this._sendBallUpdate=e.throttle(t=>{this.send(t)},100),this.options=t({},this.options,n)}connect(){this.info(\"Connecting\");const t=new WebSocket(this.options.host);return this.state={state:\"creating\",ws:t},t.onopen=this.handleOpen,t.onclose=this.handleClose,t.onerror=this.handleError,t.addEventListener(\"message\",this.handleMessage),this.promises.connect.promise}isConnected(){return[\"created\",\"joined\",\"joining\"].includes(this.state.state)}isOpponentDisconnected(){return\"joined\"===this.state.state&&\"disconnected\"===this.state.opponent.state}findPlayers(t){const{sessionUuid:n}=this.state;return n?{self:t.find(t=>t.sessionUuid===n),opponent:t.find(t=>t.sessionUuid!==n)}:{}}join(n){if(\"created\"!==this.state.state)return void console.warn(\"Cannot join from state:\",this.state);n&&(this.name=n);const r=a.build({type:\"gnop.join\",sessionUuid:this.state.sessionUuid,payload:{name:this.name}});return this.info(\"Client joining:\",r),this.state=t({},this.state,{state:\"joining\"}),this.send(r),this.promises.join.promise}rejoin(n){if(\"created\"!==this.state.state)return void console.warn(\"Cannot join from state:\",this.state);const r=f.build({type:\"gnop.rejoin\",sessionUuid:this.state.sessionUuid,payload:{previousSessionUuid:n}});return this.info(\"Client joining:\",r),this.state=t({},this.state,{state:\"joining\"}),this.send(r),this.promises.join.promise}disconnect(){var t;null==(t=this.state.ws)||t.close(),this.state={state:\"init\"}}sendPlayerUpdate(t){if(\"joined\"!==this.state.state)return void console.warn(\"Cannot send player from state:\",this.state);this.state.self.hp=t.player.hp;const n=l.build({type:\"gnop.playerUpdate\",sessionUuid:this.state.sessionUuid,payload:{player:this.state.self,position:t.position}});this.send(n)}getPlayerUpdate(){const t=this.playerUpdates.pop();return this.playerUpdates.splice(0),t}sendBallUpdate(t){if(\"joined\"!==this.state.state)return void console.warn(\"Cannot send ball from state:\",this.state);const n=h.build({type:\"gnop.ballUpdate\",sessionUuid:this.state.sessionUuid,payload:{position:t}});this.ballTracker.trackSent(n),this._sendBallUpdate(n)}getBallUpdate(){const t=this.ballTracker.get();return null==t?void 0:t.payload}send(t){this.state.ws?(this.info(\"Client sending message:\",t),this.state.ws.send(JSON.stringify(t))):console.warn(\"Cannot data without websocket:\",this.state)}info(...t){this.options.verbose&&console.info(...t)}},generateName:w}});\n//# sourceMappingURL=gnop.modern.js.map\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "connect",
      "functionType": "Action",
      "name": "connect",
      "private": false,
      "sentence": "connect",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nconst vars = runtimeScene.getVariables()\nconst isPreview = runtimeScene.getGame().isPreview()\n\nconst useLocal = false\nconst host = useLocal ? 'ws://localhost:42992' : 'wss://sangervasi.net'\n\nconst useFiltering = vars.get('UseFiltering').getAsBoolean()\nconst ballTracker = useFiltering\n    // ? {\n    //     timeWindowMs: 3_000,\n    //     dMs: 800,\n    //     maxSentLen: 128,\n    //   }\n    ? {\n        timeWindowMs: 1_000,\n        dMs: 200,\n        maxSentLen: 246,\n      }\n    : {\n        timeWindowMs: 0,\n        dMs: 0,\n        maxSentLen: 0,\n    };\n\n\nconst connect = async () => {\n    if (Gnop.client) {\n        Gnop.client.disconnect()\n    }\n\n    Gnop.client = new Gnop.WsClient({\n        host,\n        verbose: false,\n        ballTracker,\n    })\n\n    console.log('Connecting', Gnop.client)\n    await Gnop.client.connect()\n    console.log('Connected', Gnop.client)\n} \n\nconnect()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "join",
      "functionType": "Action",
      "name": "join",
      "private": false,
      "sentence": "join",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nif (!Gnop.client) {\n    console.warn('Cannot join with no client')\n    return\n}\n\nGnop.client.join()\n\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "disconnect",
      "fullName": "disconnect",
      "functionType": "Action",
      "name": "disconnect",
      "private": false,
      "sentence": "disconnect",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nGnop.client?.disconnect()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "setName",
      "fullName": "setName",
      "functionType": "Action",
      "name": "setName",
      "private": false,
      "sentence": "setName _PARAM1_",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nGnop.client.name = eventsFunctionContext.getArgument(\"Name\")\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [
        {
          "codeOnly": false,
          "defaultValue": "",
          "description": "",
          "longDescription": "",
          "name": "Name",
          "optional": false,
          "supplementaryInformation": "",
          "type": "string"
        }
      ],
      "objectGroups": []
    },
    {
      "description": "SelfName",
      "fullName": "SelfName",
      "functionType": "StringExpression",
      "name": "SelfName",
      "private": false,
      "sentence": "setName _PARAM1_",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop.client?.state?.self?.name || Gnop.client?.name || \"\"\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "OpponentName",
      "fullName": "OpponentName",
      "functionType": "StringExpression",
      "name": "OpponentName",
      "private": false,
      "sentence": "setName _PARAM1_",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop.client?.state?.opponent?.name || \"\"\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "Client State",
      "fullName": "State",
      "functionType": "StringExpression",
      "name": "State",
      "private": false,
      "sentence": "IsConnected",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    const client = Gnop.client\n    if (!client) {\n        return 'none'\n    }\n    return client.state.state\n})()\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "IsOpponentDisconnected",
      "functionType": "Condition",
      "name": "IsOpponentDisconnected",
      "private": false,
      "sentence": "IsOpponentDisconnected",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "eventsFunctionContext.returnValue = Gnop.client?.isOpponentDisconnected() || false\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "IsConnected",
      "functionType": "Condition",
      "name": "IsConnected",
      "private": false,
      "sentence": "IsConnected",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "eventsFunctionContext.returnValue = Gnop.client?.isConnected() || false\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "IsJoined",
      "functionType": "Condition",
      "name": "IsJoined",
      "private": false,
      "sentence": "IsJoined",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnBoolean"
              },
              "parameters": [
                "False"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "StrEqual"
              },
              "parameters": [
                "srs_gnop::State()",
                "=",
                "\"joined\""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnBoolean"
              },
              "parameters": [
                "True"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "OpponentUpdate as JSON",
      "fullName": "OpponentUpdate",
      "functionType": "StringExpression",
      "name": "OpponentUpdate",
      "private": false,
      "sentence": "",
      "events": [
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "disabled": false,
          "folded": false,
          "name": "Refresh LatestUpdate",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "const client = globalThis.Gnop.client\n\nconst vars = runtimeScene.getVariables()\nconst opponentUpdateVar = vars.get(\"OpponentUpdateJSON\")\n\nconst opponentUpdate = client.playerUpdates[0] || null\nopponentUpdateVar.setString(\n    JSON.stringify(opponentUpdate, null, 2)\n)\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ],
          "parameters": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnString"
              },
              "parameters": [
                "VariableString(OpponentUpdateJSON)"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "1 => Left paddle, 2 => Right Paddle, 0 => Not joined",
      "fullName": "Player",
      "functionType": "Expression",
      "name": "SelfNumber",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop?.client?.state?.self?.number || 0\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "1 => Left paddle, 2 => Right Paddle, 0 => Not joined",
      "fullName": "Player",
      "functionType": "Expression",
      "name": "OpponentNumber",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop?.client?.state?.opponent?.number || 0\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "Lost",
      "fullName": "Lost",
      "functionType": "Condition",
      "name": "Lost",
      "private": false,
      "sentence": "Lost",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    const self = Gnop.client?.state?.self\n    if (!self) {\n        return false\n    }\n    return self.hp === 0\n})()\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "Won",
      "fullName": "Won",
      "functionType": "Condition",
      "name": "Won",
      "private": false,
      "sentence": "Won",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    const opp = Gnop.client?.state?.opponent\n    if (!opp) {\n        return false\n    }\n    return opp.hp === 0\n})()\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "MatchStats",
      "fullName": "MatchStats",
      "functionType": "StringExpression",
      "name": "MatchStats",
      "private": false,
      "sentence": "GenName",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\neventsFunctionContext.returnValue = Gnop.client?.ballTracker?.summarize() || \"--\"\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "PercentMatches",
      "fullName": "PercentMatches",
      "functionType": "Expression",
      "name": "PercentMatches",
      "private": false,
      "sentence": "GenName",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\neventsFunctionContext.returnValue = Gnop.client?.ballTracker?.percentMatches() || 0\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "GenerateName",
      "fullName": "GenerateName",
      "functionType": "StringExpression",
      "name": "GenName",
      "private": false,
      "sentence": "GenName",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\neventsFunctionContext.returnValue = Gnop.generateName()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "PlayerName",
      "functionType": "StringExpression",
      "name": "PlayerName",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    const playerNumber = eventsFunctionContext.getArgument('Number')\n    const self = Gnop.client?.state?.self\n    const opponent = Gnop.client?.state?.opponent\n    if (!(self && opponent)) {\n        return\n    }\n    const nToP = {\n        [self.number]: self,\n        [opponent.number]: opponent,\n    }\n    return nToP[playerNumber]?.name\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [
        {
          "codeOnly": false,
          "defaultValue": "",
          "description": "",
          "longDescription": "",
          "name": "Number",
          "optional": false,
          "supplementaryInformation": "",
          "type": "expression"
        }
      ],
      "objectGroups": []
    }
  ],
  "eventsBasedBehaviors": [
    {
      "description": "",
      "fullName": "",
      "name": "Paddle",
      "objectType": "Sprite",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "HP",
                    "=",
                    "11"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "NextHP",
                    "=",
                    "Object.Variable(HP)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  },
                  "parameters": [
                    "Object",
                    "HitState",
                    "=",
                    "\"ready\""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": [],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "LockX",
                    "=",
                    "Object.X()"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "Object.Variable(LockX)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPressingUp",
          "fullName": "IsPressingUp",
          "functionType": "Condition",
          "name": "IsPressingUp",
          "private": false,
          "sentence": "_PARAM0_ IsPressingUp",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "1"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "x"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "2"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "m"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "Up"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "w"
                      ],
                      "subInstructions": []
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPressingDown",
          "fullName": "IsPressingDown",
          "functionType": "Condition",
          "name": "IsPressingDown",
          "private": false,
          "sentence": "_PARAM0_ IsPressingDown ",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "1"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "z"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "2"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "n"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "Down"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "s"
                      ],
                      "subInstructions": []
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPlayer",
          "fullName": "IsPlayer",
          "functionType": "Condition",
          "name": "IsPlayer",
          "private": false,
          "sentence": "_PARAM0_ IsPlayer _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "GetArgumentAsNumber(\"Number\")"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Number",
              "longDescription": "",
              "name": "Number",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleControls",
          "fullName": "handleControls",
          "functionType": "Action",
          "name": "handleControls",
          "private": false,
          "sentence": "_PARAM0_ handleControls",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Physics guards",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityX"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "0"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityY"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "clamp(-1000, Object.Physics2::LinearVelocityY(), 1000)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MettreX"
                      },
                      "parameters": [
                        "Object",
                        "=",
                        "Object.Variable(LockX)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Controls for Self",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "srs_gnop::Paddle::IsPlayer"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "srs_gnop::SelfNumber()",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "ControlLength",
                            "=",
                            "300 * Object.Physics2::Density()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPressingDown"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::ApplyForce"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "0",
                            "Object.Variable(ControlLength)",
                            "Object.Physics2::MassCenterX()",
                            "Object.Physics2::MassCenterY()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPressingUp"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::ApplyForce"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "0",
                            "-1 * Object.Variable(ControlLength)",
                            "Object.Physics2::MassCenterX()",
                            "Object.Physics2::MassCenterY()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": false,
                      "name": "Queue updates ",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "VarObjetTxt"
                              },
                              "parameters": [
                                "Object",
                                "OutgoingUpdate.State",
                                "=",
                                "\"pending\""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "disabled": false,
                              "folded": false,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "inverted": false,
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "Object",
                                    "OutgoingUpdate.X",
                                    "=",
                                    "Object.X()"
                                  ],
                                  "subInstructions": []
                                },
                                {
                                  "type": {
                                    "inverted": false,
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "Object",
                                    "OutgoingUpdate.Y",
                                    "=",
                                    "Object.Y()"
                                  ],
                                  "subInstructions": []
                                },
                                {
                                  "type": {
                                    "inverted": false,
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "Object",
                                    "OutgoingUpdate.DX",
                                    "=",
                                    "Object.Physics2::LinearVelocityX()"
                                  ],
                                  "subInstructions": []
                                },
                                {
                                  "type": {
                                    "inverted": false,
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "Object",
                                    "OutgoingUpdate.DY",
                                    "=",
                                    "Object.Physics2::LinearVelocityY()"
                                  ],
                                  "subInstructions": []
                                }
                              ],
                              "events": []
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Updates from Opponent",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "IncomingUpdate.State",
                        "=",
                        "\"pending\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "IncomingUpdate.State",
                        "=",
                        "\"received\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "MettreY"
                          },
                          "parameters": [
                            "Object",
                            "=",
                            "Object.Variable(IncomingUpdate.Y)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::LinearVelocityY"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "=",
                            "Object.Variable(IncomingUpdate.DY)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": []
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Physics2",
              "longDescription": "",
              "name": "Physics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleHitZone",
          "fullName": "handleHitZone",
          "functionType": "Action",
          "name": "handleHitZone",
          "private": false,
          "sentence": "_PARAM0_ handleHitZone _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Object",
                        "HitZone",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "HitZone"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "HitZone",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreAutour"
                  },
                  "parameters": [
                    "HitZone",
                    "Object",
                    "0",
                    "0"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "HitZone",
              "longDescription": "",
              "name": "HitZone",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleSkin",
          "fullName": "handleSkin",
          "functionType": "Action",
          "name": "handleSkin",
          "private": false,
          "sentence": "_PARAM0_ handleSkin _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Object",
                        "Skin",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "Skin"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Skin",
                            "Angle",
                            "=",
                            "Skin.Angle()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Skin",
                            "OffsetX",
                            "=",
                            "Skin.X() - Object.X()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Skin",
                            "OffsetY",
                            "=",
                            "Skin.Y() - Object.Y()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "Skin",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreXY"
                  },
                  "parameters": [
                    "Skin",
                    "=",
                    "Object.X() + Skin.Variable(OffsetX)",
                    "=",
                    "Object.Y() + Skin.Variable(OffsetY)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "srs_gnop::Paddle::HitState"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "\"ready\"",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": true,
                        "value": "AnimStopped"
                      },
                      "parameters": [
                        "Skin"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "Skin",
                        "\"Owie\""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "PauseAnimation"
                      },
                      "parameters": [
                        "Skin"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ChangeSprite"
                      },
                      "parameters": [
                        "Skin",
                        "=",
                        "11 - Object.Variable(HP)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "srs_gnop::Paddle::HitState"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "\"triggered\"",
                        ""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "AnimStopped"
                      },
                      "parameters": [
                        "Skin"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetAnimationName"
                      },
                      "parameters": [
                        "Skin",
                        "\"Owie\""
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "PlayAnimation"
                      },
                      "parameters": [
                        "Skin"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Butt",
              "longDescription": "",
              "name": "Skin",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleButt",
          "fullName": "handleButt",
          "functionType": "Action",
          "name": "handleButt",
          "private": false,
          "sentence": "_PARAM0_ handleButt _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Object",
                        "Butt",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "Butt"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Butt",
                            "Angle",
                            "=",
                            "Butt.Angle()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Butt",
                            "OffsetX",
                            "=",
                            "Butt.X() - Object.X()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Butt",
                            "OffsetY",
                            "=",
                            "Butt.Y() - Object.Y()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "Butt",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreXY"
                  },
                  "parameters": [
                    "Butt",
                    "=",
                    "Object.X() + Butt.Variable(OffsetX)",
                    "=",
                    "Object.Y() + Butt.Variable(OffsetY)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Butt",
              "longDescription": "",
              "name": "Butt",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleHP",
          "fullName": "handleHP",
          "functionType": "Action",
          "name": "handleHP",
          "private": false,
          "sentence": "_PARAM0_ handleHP _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Object",
                        "HP",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "HP"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": true,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "HP",
                            "Angle",
                            "=",
                            "HP.Angle()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "HP",
                            "OffsetX",
                            "=",
                            "HP.X() - Object.X()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "HP",
                            "OffsetY",
                            "=",
                            "HP.Y() - Object.Y()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "HP",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreAutour"
                  },
                  "parameters": [
                    "HP",
                    "Object",
                    "0",
                    "0"
                  ],
                  "subInstructions": []
                }
              ],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextObject::String"
                      },
                      "parameters": [
                        "HP",
                        "=",
                        "ToString(Object.Variable(NextHP))"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "HP",
              "longDescription": "",
              "name": "HP",
              "optional": false,
              "supplementaryInformation": "TextObject::Text",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "The network stuff",
          "fullName": "handleUpdates",
          "functionType": "Action",
          "name": "handleUpdates",
          "private": false,
          "sentence": "_PARAM0_ handleUpdates",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "srs_gnop::IsJoined"
                  },
                  "parameters": [
                    "",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": true,
                  "name": "Incoming updates",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPlayer"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            "srs_gnop::OpponentNumber()",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const { Gnop } = globalThis\nconst { client } = Gnop\n\n/**\n * @namespace Gnop\n */\n\n/**\n * @typedef {Object} Gnop.Player\n * @property {string} sessionUuid\n * @property {string} state\n * @property {string} name\n * @property {number} number\n * @property {number} hp\n */\n\n/**\n * @typedef {Object} Gnop.Position\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\t\n */\n\n/**\n * @typedef {Object} Gnop.PlayerUpdate\n * @property {Gnop.Player} player\n * @property {Gnop.Position} position\n */\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst playerVar = vars.get(\"Player\")\n\nconst incomingUpdateVar = vars.get(\"IncomingUpdate\")\nincomingUpdateVar.clearChildren()\n\n/** @type Gnop.PlayerUpdate */\nconst latestUpdate = client.getPlayerUpdate()\nif (!latestUpdate) {\n    return\n}\n\nconst {\n    player,\n    position\n} = latestUpdate\n\nif (player.number !== playerVar.getAsNumber()) {\n    return\n}\n\nconst stateVar = incomingUpdateVar.getChild('State')\nconst xVar = incomingUpdateVar.getChild('X')\nconst dxVar = incomingUpdateVar.getChild('DX')\nconst yVar = incomingUpdateVar.getChild('Y')\nconst dyVar = incomingUpdateVar.getChild('DY')\nconst aVar = incomingUpdateVar.getChild('A')\nconst daVar = incomingUpdateVar.getChild('DA')\n\nstateVar.setString('pending')\nxVar.setNumber(position.x)\ndxVar.setNumber(position.dx)\nyVar.setNumber(position.y)\ndyVar.setNumber(position.dy)\naVar.setNumber(position.a)\ndaVar.setNumber(position.da)\n\nconst hpVar = vars.get('HP')\nconst hitStateVar = vars.get('HitState')\nconst nextHpVar = vars.get('NextHP')\n\nconst prevHp = hpVar.getAsNumber()\n\nif (prevHp !== player.hp) {\n    hitStateVar.setString('triggered')\n    nextHpVar.setNumber(player.hp)\n}\n\n\n\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": true
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": false,
                  "name": "Outgoing updates",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPlayer"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            "srs_gnop::SelfNumber()",
                            ""
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_utils::Throttle"
                          },
                          "parameters": [
                            "",
                            "\"Paddle.handleUpdates.outgoing\"",
                            "20",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const { Gnop } = globalThis\nconst { client } = Gnop\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst outgoingUpdateVar = vars.get(\"OutgoingUpdate\")\nconst stateVar = outgoingUpdateVar.getChild('State')\nconst xVar = outgoingUpdateVar.getChild('X')\nconst yVar = outgoingUpdateVar.getChild('Y')\nconst dxVar = outgoingUpdateVar.getChild('DX')\nconst dyVar = outgoingUpdateVar.getChild('DY')\nconst aVar = outgoingUpdateVar.getChild('A')\nconst daVar = outgoingUpdateVar.getChild('DA')\nstateVar.setString('pending')\n\nconst position = {\n    x: xVar.getAsNumber(),\n    dx: dxVar.getAsNumber(),\n    y: yVar.getAsNumber(),\n    dy: dyVar.getAsNumber(),\n    a: aVar.getAsNumber(),\n    da: daVar.getAsNumber(),\n}\n\nconst hitStateVar = vars.get('HitState')\nconst nextHpVar = vars.get('NextHP')\n\nconst hitState = hitStateVar.getAsString()\nconst nextHp = nextHpVar.getAsNumber()\n\nconst player = {\n    hp: nextHp\n}\n\nclient.sendPlayerUpdate({\n    player,\n    position,\n})\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": false
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleCollision",
          "fullName": "handleCollision",
          "functionType": "Action",
          "name": "handleCollision",
          "private": false,
          "sentence": "_PARAM0_ handleCollision Ball=_PARAM3_ Butt=_PARAM5_ HitZone=_PARAM7_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "HitZone",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "HitZone",
                        "Ball",
                        "",
                        "",
                        "yes"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjetTxt"
                      },
                      "parameters": [
                        "HitZone",
                        "HitState",
                        "=",
                        "\"none\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ChangeColor"
                          },
                          "parameters": [
                            "HitZone",
                            "\"194;0;0\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "HitZone",
                        "Ball",
                        "",
                        "",
                        "yes"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "VarObjetTxt"
                          },
                          "parameters": [
                            "HitZone",
                            "HitState",
                            "=",
                            "\"none\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjetTxt"
                          },
                          "parameters": [
                            "HitZone",
                            "HitState",
                            "=",
                            "\"ready\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ChangeColor"
                          },
                          "parameters": [
                            "HitZone",
                            "\"48;224;0\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "HitZone",
                        "HitState",
                        "=",
                        "\"ready\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "AngleToBall",
                            "=",
                            "AngleBetweenPositions(Object.Physics2::MassCenterX(), Object.Physics2::MassCenterY(), Ball.BallPhysics2::MassCenterX(), Ball.BallPhysics2::MassCenterY())"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::Collision"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "Ball",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjetTxt"
                              },
                              "parameters": [
                                "HitZone",
                                "HitState",
                                "=",
                                "\"hit\""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "DebugCollisionCount",
                                "+",
                                "1"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "HitLength",
                                "=",
                                "200 * Ball.BallPhysics2::Density()"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "Physics2::ApplyPolarForce"
                              },
                              "parameters": [
                                "Ball",
                                "BallPhysics2",
                                "Object.Variable(AngleToBall)",
                                "Object.Variable(HitLength)",
                                "Ball.BallPhysics2::MassCenterX()",
                                "Ball.BallPhysics2::MassCenterY()"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        }
                      ]
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::Collision"
                          },
                          "parameters": [
                            "Butt",
                            "ButtPhysics2",
                            "Ball",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "srs_gnop::Paddle::triggerHit"
                              },
                              "parameters": [
                                "Object",
                                "Behavior",
                                ""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Physics2",
              "longDescription": "",
              "name": "Physics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Ball",
              "longDescription": "",
              "name": "Ball",
              "optional": false,
              "supplementaryInformation": "",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "BallPhysics2",
              "longDescription": "",
              "name": "BallPhysics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Butt",
              "longDescription": "",
              "name": "Butt",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "",
              "longDescription": "",
              "name": "ButtPhysics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "",
              "longDescription": "",
              "name": "HitZone",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleParticles",
          "fullName": "handleParticles",
          "functionType": "Action",
          "name": "handleParticles",
          "private": false,
          "sentence": "_PARAM0_ handleParticles _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "srs_gnop::Paddle::HitState"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "\"triggered\"",
                    ""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "NbObjet"
                  },
                  "parameters": [
                    "Particles",
                    "<=",
                    "1"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "Particles",
                        "Object.CenterX()",
                        "Object.CenterY()",
                        "\"FX\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": true,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "srs_gnop::Paddle::IsPlayer"
                              },
                              "parameters": [
                                "Object",
                                "Behavior",
                                "2",
                                ""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ParticleSystem::EmitterAngle"
                              },
                              "parameters": [
                                "Particles",
                                "=",
                                "0"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "srs_gnop::Paddle::IsPlayer"
                              },
                              "parameters": [
                                "Object",
                                "Behavior",
                                "1",
                                ""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ParticleSystem::EmitterAngle"
                              },
                              "parameters": [
                                "Particles",
                                "=",
                                "180"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        }
                      ]
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ParticleSystem::EmitterAngle"
                          },
                          "parameters": [
                            "Particles",
                            "=",
                            "Object.Variable(AngleToBall)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "MettreAutour"
                          },
                          "parameters": [
                            "Particles",
                            "Object",
                            "(1/2) * Object.Width()",
                            "Particles.EmitterAngle()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": []
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "",
              "longDescription": "",
              "name": "Particles",
              "optional": false,
              "supplementaryInformation": "ParticleSystem::ParticleEmitter",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "triggerHit",
          "fullName": "triggerHit",
          "functionType": "Action",
          "name": "triggerHit",
          "private": false,
          "sentence": "_PARAM0_ triggerHit",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Hits to opponent are triggered by the net updates",
              "comment2": ""
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "srs_gnop::Paddle::IsPlayer"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "srs_gnop::SelfNumber()",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "HitState",
                        "=",
                        "\"ready\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "HitState",
                        "=",
                        "\"triggered\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "NextHP",
                            "=",
                            "Object.Variable(HP) - 1"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ]
            },
            {
              "disabled": true,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "srs_gnop::Paddle::IsPlayer"
                  },
                  "parameters": [
                    "Object",
                    "Behavior",
                    "srs_gnop::SelfNumber()",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "finishHit",
          "fullName": "finishHit",
          "functionType": "Action",
          "name": "finishHit",
          "private": false,
          "sentence": "_PARAM0_ finishHit",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "Object",
                    "HitState",
                    "=",
                    "\"triggered\""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  },
                  "parameters": [
                    "Object",
                    "HitState",
                    "=",
                    "\"ready\""
                  ],
                  "subInstructions": []
                }
              ],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "HP",
                        "=",
                        "Object.Variable(NextHP)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "HitState",
          "fullName": "HitState",
          "functionType": "Condition",
          "name": "HitState",
          "private": false,
          "sentence": "_PARAM0_ HitState _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "Object",
                    "HitState",
                    "=",
                    "GetArgumentAsString(\"HitState\")"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "HitState",
              "longDescription": "",
              "name": "HitState",
              "optional": false,
              "supplementaryInformation": "[\"ready\",\"triggered\"]",
              "type": "stringWithSelector"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": []
    },
    {
      "description": "",
      "fullName": "",
      "name": "Ball",
      "objectType": "",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  },
                  "parameters": [
                    "Object",
                    "OutgoingUpdate.State",
                    "=",
                    "\"pending\""
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "Object",
                    "Sync",
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "private": false,
          "sentence": "",
          "events": [],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPostEvents",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handlePhysics",
          "fullName": "handlePhysics",
          "functionType": "Action",
          "name": "handlePhysics",
          "private": false,
          "sentence": "_PARAM0_ handlePhysics ",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Clamp to remove ball problems",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "VelocityMinX",
                        "=",
                        "0"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "VelocityMinY",
                        "=",
                        "0"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "VelocityMax",
                        "=",
                        "2000"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityX"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "srs_utils::ClampAbs(Object.Physics2::LinearVelocityX(), Object.Variable(VelocityMinX), Object.Variable(VelocityMax))"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityY"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "srs_utils::ClampAbs(Object.Physics2::LinearVelocityY(), Object.Variable(VelocityMinY), Object.Variable(VelocityMax))"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "BuiltinCommonInstructions::Or"
                      },
                      "parameters": [],
                      "subInstructions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "CenterX"
                          },
                          "parameters": [
                            "Object",
                            "<",
                            "0 - (2 * Object.Width())"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "CenterX"
                          },
                          "parameters": [
                            "Object",
                            ">",
                            "CameraWidth(\"\", 1) + (2 * Object.Width())"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "CenterY"
                          },
                          "parameters": [
                            "Object",
                            "<",
                            "0 - (2 * Object.Height())"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "CenterY"
                          },
                          "parameters": [
                            "Object",
                            ">",
                            "CameraHeight(\"\", 1) + (2 * Object.Height())"
                          ],
                          "subInstructions": []
                        }
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MettreAutourPos"
                      },
                      "parameters": [
                        "Object",
                        "CameraWidth(\"\", 0) / 2",
                        "CameraHeight(\"\", 0) / 2",
                        "0",
                        "0"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Queue updates ",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "OutgoingUpdate.State",
                        "=",
                        "\"pending\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.X",
                            "=",
                            "Object.X()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.DX",
                            "=",
                            "Object.Physics2::LinearVelocityX()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.Y",
                            "=",
                            "Object.Y()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.DY",
                            "=",
                            "Object.Physics2::LinearVelocityY()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.A",
                            "=",
                            "Object.Angle()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.DA",
                            "=",
                            "Object.Physics2::AngularVelocity()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Updates from Opponent",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ObjectVariableAsBoolean"
                      },
                      "parameters": [
                        "Object",
                        "Sync",
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "I look forward to seeing jittery de-sync problems",
                      "comment2": ""
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "VarObjetTxt"
                          },
                          "parameters": [
                            "Object",
                            "IncomingUpdate.State",
                            "=",
                            "\"pending\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjetTxt"
                          },
                          "parameters": [
                            "Object",
                            "IncomingUpdate.State",
                            "=",
                            "\"received\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "MettreXY"
                              },
                              "parameters": [
                                "Object",
                                "=",
                                "Object.Variable(IncomingUpdate.X)",
                                "=",
                                "Object.Variable(IncomingUpdate.Y)"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "Physics2::LinearVelocityX"
                              },
                              "parameters": [
                                "Object",
                                "Physics2",
                                "=",
                                "Object.Variable(IncomingUpdate.DX)"
                              ],
                              "subInstructions": []
                            },
                            {
                              "type": {
                                "inverted": false,
                                "value": "Physics2::LinearVelocityY"
                              },
                              "parameters": [
                                "Object",
                                "Physics2",
                                "=",
                                "Object.Variable(IncomingUpdate.DY)"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "SetAngle"
                              },
                              "parameters": [
                                "Object",
                                "=",
                                "Object.Variable(IncomingUpdate.A)"
                              ],
                              "subInstructions": []
                            },
                            {
                              "type": {
                                "inverted": false,
                                "value": "Physics2::AngularVelocity"
                              },
                              "parameters": [
                                "Object",
                                "Physics2",
                                "=",
                                "Object.Variable(IncomingUpdate.DA)"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        }
                      ]
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Angles",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "PathAngle",
                        "=",
                        "AngleBetweenPositions(Object.Variable(PathX), Object.Variable(PathY), Object.CenterX(), Object.CenterY()) "
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "PathX",
                        "=",
                        "Object.CenterX()"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "PathY",
                        "=",
                        "Object.CenterY()"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "PathVelocity",
                        "=",
                        "Object.Physics2::LinearVelocity()"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": true,
              "name": "Collision",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const obj = objects[0]\nconst vars = obj.getVariables()\n\nconst behaviorName = 'Physics2'\n/** @type gdjs.Physics2RuntimeBehavior */\nconst physics2 = obj.getBehavior(behaviorName)\n\n/** @type Array<gdjs.Physics2RuntimeBehavior> */\nconst currentContacts = physics2.currentContacts\n\nvars.get('ContactCount').setNumber(currentContacts.length)\n\n// if (!obj.logged) {\n//     console.log('phys', obj, physics2)\n//     obj.logged = true\n// }",
                  "parameterObjects": "Object",
                  "useStrict": true,
                  "eventsSheetExpanded": true
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [],
                  "events": []
                }
              ],
              "parameters": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Physics2",
              "longDescription": "",
              "name": "Physics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "The network stuff",
          "fullName": "handleUpdates",
          "functionType": "Action",
          "name": "handleUpdates",
          "private": false,
          "sentence": "_PARAM0_ handleUpdates",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "srs_gnop::IsJoined"
                  },
                  "parameters": [
                    "",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": false,
                  "name": "Incoming updates",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const { Gnop } = globalThis\nconst { client } = Gnop\n\n/**\n * @namespace Gnop\n */\n\n/**\n * @typedef {Object} Gnop.Position\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\t\n */\n\n/**\n * @typedef {Object} Gnop.BallUpdate\n * @property {Gnop.Position} position\n */\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst incomingUpdateVar = vars.get(\"IncomingUpdate\")\nincomingUpdateVar.clearChildren()\n\n/** @type Gnop.BallUpdate */\nconst latestUpdate = client.getBallUpdate()\nif (!latestUpdate) {\n    return\n}\n\nconst { position } = latestUpdate\n\nconst stateVar = incomingUpdateVar.getChild('State')\nconst xVar = incomingUpdateVar.getChild('X')\nconst dxVar = incomingUpdateVar.getChild('DX')\nconst yVar = incomingUpdateVar.getChild('Y')\nconst dyVar = incomingUpdateVar.getChild('DY')\nconst aVar = incomingUpdateVar.getChild('A')\nconst daVar = incomingUpdateVar.getChild('DA')\n\nstateVar.setString('pending')\nxVar.setNumber(position.x)\ndxVar.setNumber(position.dx)\nyVar.setNumber(position.y)\ndyVar.setNumber(position.dy)\naVar.setNumber(position.a)\ndaVar.setNumber(position.da)\n\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": false
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": false,
                  "name": "Outgoing updates",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": true,
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_utils::Throttle"
                          },
                          "parameters": [
                            "",
                            "\"Ball.handleUpdates.outgoing\"",
                            "100",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const { Gnop } = globalThis\nconst { client } = Gnop\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst outgoingUpdateVar = vars.get(\"OutgoingUpdate\")\nconst stateVar = outgoingUpdateVar.getChild('State')\nconst xVar = outgoingUpdateVar.getChild('X')\nconst dxVar = outgoingUpdateVar.getChild('DX')\nconst yVar = outgoingUpdateVar.getChild('Y')\nconst dyVar = outgoingUpdateVar.getChild('DY')\nconst aVar = outgoingUpdateVar.getChild('A')\nconst daVar = outgoingUpdateVar.getChild('DA')\n\n// if (Math.random() > 0.5) {\n//     console.log('fake packet loss')\n//     return\n// }\n\nstateVar.setString('pending')\nclient.sendBallUpdate({\n    x: xVar.getAsNumber(),\n    dx: dxVar.getAsNumber(),\n    y: yVar.getAsNumber(),\n    dy: dyVar.getAsNumber(),\n    a: aVar.getAsNumber(),\n    da: daVar.getAsNumber(),\n})\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": true
                        }
                      ]
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_utils::Throttle"
                          },
                          "parameters": [
                            "",
                            "\"Ball.handleUpdates.outgoing\"",
                            "50",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const { Gnop } = globalThis\nconst { client } = Gnop\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst outgoingUpdateVar = vars.get(\"OutgoingUpdate\")\nconst stateVar = outgoingUpdateVar.getChild('State')\n\nif (stateVar.getAsString() !== 'pending') {\n    return\n}\n\nconst xVar = outgoingUpdateVar.getChild('X')\nconst dxVar = outgoingUpdateVar.getChild('DX')\nconst yVar = outgoingUpdateVar.getChild('Y')\nconst dyVar = outgoingUpdateVar.getChild('DY')\nconst aVar = outgoingUpdateVar.getChild('A')\nconst daVar = outgoingUpdateVar.getChild('DA')\n\nclient.sendBallUpdate({\n    x: xVar.getAsNumber(),\n    dx: dxVar.getAsNumber(),\n    y: yVar.getAsNumber(),\n    dy: dyVar.getAsNumber(),\n    a: aVar.getAsNumber(),\n    da: daVar.getAsNumber(),\n})\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": false
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleParticles",
          "fullName": "handleParticles",
          "functionType": "Action",
          "name": "handleParticles",
          "private": false,
          "sentence": "_PARAM0_ handleParticles _PARAM2_",
          "events": [
            {
              "disabled": true,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "srs_utils::Throttle"
                  },
                  "parameters": [
                    "",
                    "\"Ball.handleParticles\"",
                    "1000",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "Particles",
                        "Object.X()",
                        "Object.Y()",
                        "Object.Layer()"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "ContactCount ",
                    ">=",
                    "1"
                  ],
                  "subInstructions": []
                },
                {
                  "type": {
                    "inverted": false,
                    "value": "NbObjet"
                  },
                  "parameters": [
                    "Particles",
                    "<=",
                    "3"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "Particles",
                        "Object.CenterX()",
                        "Object.CenterY()",
                        "\"FX\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ParticleSystem::EmitterAngle"
                          },
                          "parameters": [
                            "Particles",
                            "=",
                            "Object.Variable(PathAngle)"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ParticleSystem::EmitterForceMax"
                          },
                          "parameters": [
                            "Particles",
                            "=",
                            "Object.Variable(PathVelocity)"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ParticleSystem::EmitterForceMin"
                          },
                          "parameters": [
                            "Particles",
                            "=",
                            "Object.Variable(PathVelocity)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": []
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "",
              "longDescription": "",
              "name": "Particles",
              "optional": false,
              "supplementaryInformation": "ParticleSystem::ParticleEmitter",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "Whether to respond to net updates",
          "fullName": "setSync",
          "functionType": "Action",
          "name": "setSync",
          "private": false,
          "sentence": "_PARAM0_ setSync _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "GetArgumentAsBoolean"
                  },
                  "parameters": [
                    "\"Sync\""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "Object",
                    "Sync",
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "GetArgumentAsBoolean"
                  },
                  "parameters": [
                    "\"Sync\""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetObjectVariableAsBoolean"
                  },
                  "parameters": [
                    "Object",
                    "Sync",
                    "False"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "",
              "longDescription": "",
              "name": "Sync",
              "optional": false,
              "supplementaryInformation": "",
              "type": "trueorfalse"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": []
    }
  ]
}