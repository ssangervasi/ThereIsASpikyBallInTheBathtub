{
  "author": "",
  "description": "",
  "extensionNamespace": "",
  "fullName": "",
  "helpPath": "",
  "iconUrl": "",
  "name": "srs_gnop",
  "previewIconUrl": "",
  "shortDescription": "",
  "version": "",
  "tags": [],
  "dependencies": [],
  "eventsFunctions": [
    {
      "description": "",
      "fullName": "",
      "functionType": "Action",
      "name": "onFirstSceneLoaded",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "srs_gnop::injectGnop"
              },
              "parameters": [
                "",
                ""
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "ModVarSceneTxt"
              },
              "parameters": [
                "LatestUpdateJSON",
                "=",
                "\"null\""
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "",
      "functionType": "Action",
      "name": "onScenePreEvents",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "srs_gnop::IsJoined"
              },
              "parameters": [
                "",
                ""
              ],
              "subInstructions": []
            }
          ],
          "actions": [],
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Refresh LatestUpdate",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::JsCode",
                  "inlineCode": "const client = globalThis.Gnop.client\n\nconst vars = runtimeScene.getVariables()\nconst opponentUpdateVar = vars.get(\"OpponentUpdateJSON\")\n\nconst opponentUpdate = client.getPlayerUpdate() || null\nopponentUpdateVar.setString(\n    JSON.stringify(opponentUpdate, null, 2)\n)\n",
                  "parameterObjects": "",
                  "useStrict": true,
                  "eventsSheetExpanded": true
                }
              ],
              "parameters": []
            }
          ]
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "",
      "functionType": "Action",
      "name": "onScenePostEvents",
      "private": false,
      "sentence": "",
      "events": [],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "injectGnop",
      "functionType": "Action",
      "name": "injectGnop",
      "private": false,
      "sentence": "injectGnop",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": [],
              "subInstructions": []
            }
          ],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "// inject \"ts/dist/gnop.modern.js\"\n\nfunction n(){return(n=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var e in r)Object.prototype.hasOwnProperty.call(r,e)&&(n[e]=r[e])}return n}).apply(this,arguments)}var t,r=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},e=(function(n,t){(function(){var e,u=\"Expected a function\",i=\"__lodash_hash_undefined__\",o=\"__lodash_placeholder__\",a=32,f=128,c=1/0,s=9007199254740991,l=NaN,h=4294967295,p=[[\"ary\",f],[\"bind\",1],[\"bindKey\",2],[\"curry\",8],[\"curryRight\",16],[\"flip\",512],[\"partial\",a],[\"partialRight\",64],[\"rearg\",256]],v=\"[object Arguments]\",_=\"[object Array]\",g=\"[object Boolean]\",d=\"[object Date]\",y=\"[object Error]\",w=\"[object Function]\",b=\"[object GeneratorFunction]\",m=\"[object Map]\",j=\"[object Number]\",x=\"[object Object]\",A=\"[object Promise]\",U=\"[object RegExp]\",O=\"[object Set]\",k=\"[object String]\",R=\"[object Symbol]\",I=\"[object WeakMap]\",S=\"[object ArrayBuffer]\",C=\"[object DataView]\",E=\"[object Float32Array]\",z=\"[object Float64Array]\",B=\"[object Int8Array]\",W=\"[object Int16Array]\",L=\"[object Int32Array]\",T=\"[object Uint8Array]\",D=\"[object Uint8ClampedArray]\",P=\"[object Uint16Array]\",$=\"[object Uint32Array]\",M=/\\b__p \\+= '';/g,F=/\\b(__p \\+=) '' \\+/g,N=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,q=/&(?:amp|lt|gt|quot|#39);/g,Z=/[&<>\"']/g,J=RegExp(q.source),K=RegExp(Z.source),G=/<%-([\\s\\S]+?)%>/g,V=/<%([\\s\\S]+?)%>/g,H=/<%=([\\s\\S]+?)%>/g,Y=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,Q=/^\\w*$/,X=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,nn=/[\\\\^$.*+?()[\\]{}|]/g,tn=RegExp(nn.source),rn=/^\\s+/,en=/\\s/,un=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,on=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,an=/,? & /,fn=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,cn=/[()=,{}\\[\\]\\/\\s]/,sn=/\\\\(\\\\)?/g,ln=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,hn=/\\w*$/,pn=/^[-+]0x[0-9a-f]+$/i,vn=/^0b[01]+$/i,_n=/^\\[object .+?Constructor\\]$/,gn=/^0o[0-7]+$/i,dn=/^(?:0|[1-9]\\d*)$/,yn=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,wn=/($^)/,bn=/['\\n\\r\\u2028\\u2029\\\\]/g,mn=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\",jn=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",xn=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",An=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",Un=\"[\"+An+\"]\",On=\"[\"+mn+\"]\",kn=\"\\\\d+\",Rn=\"[\"+jn+\"]\",In=\"[^\\\\ud800-\\\\udfff\"+An+kn+\"\\\\u2700-\\\\u27bf\"+jn+xn+\"]\",Sn=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",Cn=\"[^\\\\ud800-\\\\udfff]\",En=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",zn=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",Bn=\"[\"+xn+\"]\",Wn=\"(?:\"+Rn+\"|\"+In+\")\",Ln=\"(?:\"+Bn+\"|\"+In+\")\",Tn=\"(?:['’](?:d|ll|m|re|s|t|ve))?\",Dn=\"(?:['’](?:D|LL|M|RE|S|T|VE))?\",Pn=\"(?:\"+On+\"|\"+Sn+\")?\",$n=\"[\\\\ufe0e\\\\ufe0f]?\",Mn=$n+Pn+\"(?:\\\\u200d(?:\"+[Cn,En,zn].join(\"|\")+\")\"+$n+Pn+\")*\",Fn=\"(?:\"+[\"[\\\\u2700-\\\\u27bf]\",En,zn].join(\"|\")+\")\"+Mn,Nn=\"(?:\"+[Cn+On+\"?\",On,En,zn,\"[\\\\ud800-\\\\udfff]\"].join(\"|\")+\")\",qn=RegExp(\"['’]\",\"g\"),Zn=RegExp(On,\"g\"),Jn=RegExp(Sn+\"(?=\"+Sn+\")|\"+Nn+Mn,\"g\"),Kn=RegExp([Bn+\"?\"+Rn+\"+\"+Tn+\"(?=\"+[Un,Bn,\"$\"].join(\"|\")+\")\",Ln+\"+\"+Dn+\"(?=\"+[Un,Bn+Wn,\"$\"].join(\"|\")+\")\",Bn+\"?\"+Wn+\"+\"+Tn,Bn+\"+\"+Dn,\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",kn,Fn].join(\"|\"),\"g\"),Gn=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\"+mn+\"\\\\ufe0e\\\\ufe0f]\"),Vn=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Hn=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],Yn=-1,Qn={};Qn[E]=Qn[z]=Qn[B]=Qn[W]=Qn[L]=Qn[T]=Qn[D]=Qn[P]=Qn[$]=!0,Qn[v]=Qn[_]=Qn[S]=Qn[g]=Qn[C]=Qn[d]=Qn[y]=Qn[w]=Qn[m]=Qn[j]=Qn[x]=Qn[U]=Qn[O]=Qn[k]=Qn[I]=!1;var Xn={};Xn[v]=Xn[_]=Xn[S]=Xn[C]=Xn[g]=Xn[d]=Xn[E]=Xn[z]=Xn[B]=Xn[W]=Xn[L]=Xn[m]=Xn[j]=Xn[x]=Xn[U]=Xn[O]=Xn[k]=Xn[R]=Xn[T]=Xn[D]=Xn[P]=Xn[$]=!0,Xn[y]=Xn[w]=Xn[I]=!1;var nt={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},tt=parseFloat,rt=parseInt,et=\"object\"==typeof r&&r&&r.Object===Object&&r,ut=\"object\"==typeof self&&self&&self.Object===Object&&self,it=et||ut||Function(\"return this\")(),ot=t&&!t.nodeType&&t,at=ot&&n&&!n.nodeType&&n,ft=at&&at.exports===ot,ct=ft&&et.process,st=function(){try{return at&&at.require&&at.require(\"util\").types||ct&&ct.binding&&ct.binding(\"util\")}catch(n){}}(),lt=st&&st.isArrayBuffer,ht=st&&st.isDate,pt=st&&st.isMap,vt=st&&st.isRegExp,_t=st&&st.isSet,gt=st&&st.isTypedArray;function dt(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function yt(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function wt(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&!1!==t(n[r],r,n););return n}function bt(n,t){for(var r=null==n?0:n.length;r--&&!1!==t(n[r],r,n););return n}function mt(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return!1;return!0}function jt(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function xt(n,t){return!(null==n||!n.length)&&zt(n,t,0)>-1}function At(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return!0;return!1}function Ut(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function Ot(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function kt(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);return r}function Rt(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function It(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}var St=Tt(\"length\");function Ct(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,!1}),e}function Et(n,t,r,e){for(var u=n.length,i=r+(e?1:-1);e?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function zt(n,t,r){return t==t?function(n,t,r){for(var e=r-1,u=n.length;++e<u;)if(n[e]===t)return e;return-1}(n,t,r):Et(n,Wt,r)}function Bt(n,t,r,e){for(var u=r-1,i=n.length;++u<i;)if(e(n[u],t))return u;return-1}function Wt(n){return n!=n}function Lt(n,t){var r=null==n?0:n.length;return r?$t(n,t)/r:l}function Tt(n){return function(t){return null==t?e:t[n]}}function Dt(n){return function(t){return null==n?e:n[t]}}function Pt(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function $t(n,t){for(var r,u=-1,i=n.length;++u<i;){var o=t(n[u]);o!==e&&(r=r===e?o:r+o)}return r}function Mt(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function Ft(n){return n?n.slice(0,or(n)+1).replace(rn,\"\"):n}function Nt(n){return function(t){return n(t)}}function qt(n,t){return Ut(t,function(t){return n[t]})}function Zt(n,t){return n.has(t)}function Jt(n,t){for(var r=-1,e=n.length;++r<e&&zt(t,n[r],0)>-1;);return r}function Kt(n,t){for(var r=n.length;r--&&zt(t,n[r],0)>-1;);return r}function Gt(n,t){for(var r=n.length,e=0;r--;)n[r]===t&&++e;return e}var Vt=Dt({À:\"A\",Á:\"A\",Â:\"A\",Ã:\"A\",Ä:\"A\",Å:\"A\",à:\"a\",á:\"a\",â:\"a\",ã:\"a\",ä:\"a\",å:\"a\",Ç:\"C\",ç:\"c\",Ð:\"D\",ð:\"d\",È:\"E\",É:\"E\",Ê:\"E\",Ë:\"E\",è:\"e\",é:\"e\",ê:\"e\",ë:\"e\",Ì:\"I\",Í:\"I\",Î:\"I\",Ï:\"I\",ì:\"i\",í:\"i\",î:\"i\",ï:\"i\",Ñ:\"N\",ñ:\"n\",Ò:\"O\",Ó:\"O\",Ô:\"O\",Õ:\"O\",Ö:\"O\",Ø:\"O\",ò:\"o\",ó:\"o\",ô:\"o\",õ:\"o\",ö:\"o\",ø:\"o\",Ù:\"U\",Ú:\"U\",Û:\"U\",Ü:\"U\",ù:\"u\",ú:\"u\",û:\"u\",ü:\"u\",Ý:\"Y\",ý:\"y\",ÿ:\"y\",Æ:\"Ae\",æ:\"ae\",Þ:\"Th\",þ:\"th\",ß:\"ss\",Ā:\"A\",Ă:\"A\",Ą:\"A\",ā:\"a\",ă:\"a\",ą:\"a\",Ć:\"C\",Ĉ:\"C\",Ċ:\"C\",Č:\"C\",ć:\"c\",ĉ:\"c\",ċ:\"c\",č:\"c\",Ď:\"D\",Đ:\"D\",ď:\"d\",đ:\"d\",Ē:\"E\",Ĕ:\"E\",Ė:\"E\",Ę:\"E\",Ě:\"E\",ē:\"e\",ĕ:\"e\",ė:\"e\",ę:\"e\",ě:\"e\",Ĝ:\"G\",Ğ:\"G\",Ġ:\"G\",Ģ:\"G\",ĝ:\"g\",ğ:\"g\",ġ:\"g\",ģ:\"g\",Ĥ:\"H\",Ħ:\"H\",ĥ:\"h\",ħ:\"h\",Ĩ:\"I\",Ī:\"I\",Ĭ:\"I\",Į:\"I\",İ:\"I\",ĩ:\"i\",ī:\"i\",ĭ:\"i\",į:\"i\",ı:\"i\",Ĵ:\"J\",ĵ:\"j\",Ķ:\"K\",ķ:\"k\",ĸ:\"k\",Ĺ:\"L\",Ļ:\"L\",Ľ:\"L\",Ŀ:\"L\",Ł:\"L\",ĺ:\"l\",ļ:\"l\",ľ:\"l\",ŀ:\"l\",ł:\"l\",Ń:\"N\",Ņ:\"N\",Ň:\"N\",Ŋ:\"N\",ń:\"n\",ņ:\"n\",ň:\"n\",ŋ:\"n\",Ō:\"O\",Ŏ:\"O\",Ő:\"O\",ō:\"o\",ŏ:\"o\",ő:\"o\",Ŕ:\"R\",Ŗ:\"R\",Ř:\"R\",ŕ:\"r\",ŗ:\"r\",ř:\"r\",Ś:\"S\",Ŝ:\"S\",Ş:\"S\",Š:\"S\",ś:\"s\",ŝ:\"s\",ş:\"s\",š:\"s\",Ţ:\"T\",Ť:\"T\",Ŧ:\"T\",ţ:\"t\",ť:\"t\",ŧ:\"t\",Ũ:\"U\",Ū:\"U\",Ŭ:\"U\",Ů:\"U\",Ű:\"U\",Ų:\"U\",ũ:\"u\",ū:\"u\",ŭ:\"u\",ů:\"u\",ű:\"u\",ų:\"u\",Ŵ:\"W\",ŵ:\"w\",Ŷ:\"Y\",ŷ:\"y\",Ÿ:\"Y\",Ź:\"Z\",Ż:\"Z\",Ž:\"Z\",ź:\"z\",ż:\"z\",ž:\"z\",Ĳ:\"IJ\",ĳ:\"ij\",Œ:\"Oe\",œ:\"oe\",ŉ:\"'n\",ſ:\"s\"}),Ht=Dt({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"});function Yt(n){return\"\\\\\"+nt[n]}function Qt(n){return Gn.test(n)}function Xt(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n]}),r}function nr(n,t){return function(r){return n(t(r))}}function tr(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var a=n[r];a!==t&&a!==o||(n[r]=o,i[u++]=r)}return i}function rr(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=n}),r}function er(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function ur(n){return Qt(n)?function(n){for(var t=Jn.lastIndex=0;Jn.test(n);)++t;return t}(n):St(n)}function ir(n){return Qt(n)?function(n){return n.match(Jn)||[]}(n):function(n){return n.split(\"\")}(n)}function or(n){for(var t=n.length;t--&&en.test(n.charAt(t)););return t}var ar=Dt({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"}),fr=function n(t){var r,en=(t=null==t?it:fr.defaults(it.Object(),t,fr.pick(it,Hn))).Array,mn=t.Date,jn=t.Error,xn=t.Function,An=t.Math,Un=t.Object,On=t.RegExp,kn=t.String,Rn=t.TypeError,In=en.prototype,Sn=Un.prototype,Cn=t[\"__core-js_shared__\"],En=xn.prototype.toString,zn=Sn.hasOwnProperty,Bn=0,Wn=(r=/[^.]+$/.exec(Cn&&Cn.keys&&Cn.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+r:\"\",Ln=Sn.toString,Tn=En.call(Un),Dn=it._,Pn=On(\"^\"+En.call(zn).replace(nn,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),$n=ft?t.Buffer:e,Mn=t.Symbol,Fn=t.Uint8Array,Nn=$n?$n.allocUnsafe:e,Jn=nr(Un.getPrototypeOf,Un),Gn=Un.create,nt=Sn.propertyIsEnumerable,et=In.splice,ut=Mn?Mn.isConcatSpreadable:e,ot=Mn?Mn.iterator:e,at=Mn?Mn.toStringTag:e,ct=function(){try{var n=fi(Un,\"defineProperty\");return n({},\"\",{}),n}catch(n){}}(),st=t.clearTimeout!==it.clearTimeout&&t.clearTimeout,St=mn&&mn.now!==it.Date.now&&mn.now,Dt=t.setTimeout!==it.setTimeout&&t.setTimeout,cr=An.ceil,sr=An.floor,lr=Un.getOwnPropertySymbols,hr=$n?$n.isBuffer:e,pr=t.isFinite,vr=In.join,_r=nr(Un.keys,Un),gr=An.max,dr=An.min,yr=mn.now,wr=t.parseInt,br=An.random,mr=In.reverse,jr=fi(t,\"DataView\"),xr=fi(t,\"Map\"),Ar=fi(t,\"Promise\"),Ur=fi(t,\"Set\"),Or=fi(t,\"WeakMap\"),kr=fi(Un,\"create\"),Rr=Or&&new Or,Ir={},Sr=Ti(jr),Cr=Ti(xr),Er=Ti(Ar),zr=Ti(Ur),Br=Ti(Or),Wr=Mn?Mn.prototype:e,Lr=Wr?Wr.valueOf:e,Tr=Wr?Wr.toString:e;function Dr(n){if(ta(n)&&!qo(n)&&!(n instanceof Fr)){if(n instanceof Mr)return n;if(zn.call(n,\"__wrapped__\"))return Di(n)}return new Mr(n)}var Pr=function(){function n(){}return function(t){if(!na(t))return{};if(Gn)return Gn(t);n.prototype=t;var r=new n;return n.prototype=e,r}}();function $r(){}function Mr(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=e}function Fr(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=h,this.__views__=[]}function Nr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function qr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Zr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Jr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new Zr;++t<r;)this.add(n[t])}function Kr(n){var t=this.__data__=new qr(n);this.size=t.size}function Gr(n,t){var r=qo(n),e=!r&&No(n),u=!r&&!e&&Go(n),i=!r&&!e&&!u&&ca(n),o=r||e||u||i,a=o?Mt(n.length,kn):[],f=a.length;for(var c in n)!t&&!zn.call(n,c)||o&&(\"length\"==c||u&&(\"offset\"==c||\"parent\"==c)||i&&(\"buffer\"==c||\"byteLength\"==c||\"byteOffset\"==c)||_i(c,f))||a.push(c);return a}function Vr(n){var t=n.length;return t?n[Ze(0,t-1)]:e}function Hr(n,t){return Ei(Ou(n),ie(t,0,n.length))}function Yr(n){return Ei(Ou(n))}function Qr(n,t,r){(r!==e&&!$o(n[t],r)||r===e&&!(t in n))&&ee(n,t,r)}function Xr(n,t,r){var u=n[t];zn.call(n,t)&&$o(u,r)&&(r!==e||t in n)||ee(n,t,r)}function ne(n,t){for(var r=n.length;r--;)if($o(n[r][0],t))return r;return-1}function te(n,t,r,e){return se(n,function(n,u,i){t(e,n,r(n),i)}),e}function re(n,t){return n&&ku(t,Ca(t),n)}function ee(n,t,r){\"__proto__\"==t&&ct?ct(n,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):n[t]=r}function ue(n,t){for(var r=-1,u=t.length,i=en(u),o=null==n;++r<u;)i[r]=o?e:Oa(n,t[r]);return i}function ie(n,t,r){return n==n&&(r!==e&&(n=n<=r?n:r),t!==e&&(n=n>=t?n:t)),n}function oe(n,t,r,u,i,o){var a,f=1&t,c=2&t,s=4&t;if(r&&(a=i?r(n,u,i,o):r(n)),a!==e)return a;if(!na(n))return n;var l=qo(n);if(l){if(a=function(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&zn.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}(n),!f)return Ou(n,a)}else{var h=li(n),p=h==w||h==b;if(Go(n))return bu(n,f);if(h==x||h==v||p&&!i){if(a=c||p?{}:pi(n),!f)return c?function(n,t){return ku(n,si(n),t)}(n,function(n,t){return n&&ku(t,Ea(t),n)}(a,n)):function(n,t){return ku(n,ci(n),t)}(n,re(a,n))}else{if(!Xn[h])return i?n:{};a=function(n,t,r){var e=n.constructor;switch(t){case S:return mu(n);case g:case d:return new e(+n);case C:return function(n,t){var r=t?mu(n.buffer):n.buffer;return new n.constructor(r,n.byteOffset,n.byteLength)}(n,r);case E:case z:case B:case W:case L:case T:case D:case P:case $:return ju(n,r);case m:return new e;case j:case k:return new e(n);case U:return function(n){var t=new n.constructor(n.source,hn.exec(n));return t.lastIndex=n.lastIndex,t}(n);case O:return new e;case R:return Lr?Un(Lr.call(n)):{}}}(n,h,f)}}o||(o=new Kr);var _=o.get(n);if(_)return _;o.set(n,a),oa(n)?n.forEach(function(e){a.add(oe(e,t,r,e,n,o))}):ra(n)&&n.forEach(function(e,u){a.set(u,oe(e,t,r,u,n,o))});var y=l?e:(s?c?ti:ni:c?Ea:Ca)(n);return wt(y||n,function(e,u){y&&(e=n[u=e]),Xr(a,u,oe(e,t,r,u,n,o))}),a}function ae(n,t,r){var u=r.length;if(null==n)return!u;for(n=Un(n);u--;){var i=r[u],o=n[i];if(o===e&&!(i in n)||!(0,t[i])(o))return!1}return!0}function fe(n,t,r){if(\"function\"!=typeof n)throw new Rn(u);return Ri(function(){n.apply(e,r)},t)}function ce(n,t,r,e){var u=-1,i=xt,o=!0,a=n.length,f=[],c=t.length;if(!a)return f;r&&(t=Ut(t,Nt(r))),e?(i=At,o=!1):t.length>=200&&(i=Zt,o=!1,t=new Jr(t));n:for(;++u<a;){var s=n[u],l=null==r?s:r(s);if(s=e||0!==s?s:0,o&&l==l){for(var h=c;h--;)if(t[h]===l)continue n;f.push(s)}else i(t,l,e)||f.push(s)}return f}Dr.templateSettings={escape:G,evaluate:V,interpolate:H,variable:\"\",imports:{_:Dr}},(Dr.prototype=$r.prototype).constructor=Dr,(Mr.prototype=Pr($r.prototype)).constructor=Mr,(Fr.prototype=Pr($r.prototype)).constructor=Fr,Nr.prototype.clear=function(){this.__data__=kr?kr(null):{},this.size=0},Nr.prototype.delete=function(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t},Nr.prototype.get=function(n){var t=this.__data__;if(kr){var r=t[n];return r===i?e:r}return zn.call(t,n)?t[n]:e},Nr.prototype.has=function(n){var t=this.__data__;return kr?t[n]!==e:zn.call(t,n)},Nr.prototype.set=function(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=kr&&t===e?i:t,this},qr.prototype.clear=function(){this.__data__=[],this.size=0},qr.prototype.delete=function(n){var t=this.__data__,r=ne(t,n);return!(r<0||(r==t.length-1?t.pop():et.call(t,r,1),--this.size,0))},qr.prototype.get=function(n){var t=this.__data__,r=ne(t,n);return r<0?e:t[r][1]},qr.prototype.has=function(n){return ne(this.__data__,n)>-1},qr.prototype.set=function(n,t){var r=this.__data__,e=ne(r,n);return e<0?(++this.size,r.push([n,t])):r[e][1]=t,this},Zr.prototype.clear=function(){this.size=0,this.__data__={hash:new Nr,map:new(xr||qr),string:new Nr}},Zr.prototype.delete=function(n){var t=oi(this,n).delete(n);return this.size-=t?1:0,t},Zr.prototype.get=function(n){return oi(this,n).get(n)},Zr.prototype.has=function(n){return oi(this,n).has(n)},Zr.prototype.set=function(n,t){var r=oi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this},Jr.prototype.add=Jr.prototype.push=function(n){return this.__data__.set(n,i),this},Jr.prototype.has=function(n){return this.__data__.has(n)},Kr.prototype.clear=function(){this.__data__=new qr,this.size=0},Kr.prototype.delete=function(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r},Kr.prototype.get=function(n){return this.__data__.get(n)},Kr.prototype.has=function(n){return this.__data__.has(n)},Kr.prototype.set=function(n,t){var r=this.__data__;if(r instanceof qr){var e=r.__data__;if(!xr||e.length<199)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new Zr(e)}return r.set(n,t),this.size=r.size,this};var se=Su(ye),le=Su(we,!0);function he(n,t){var r=!0;return se(n,function(n,e,u){return r=!!t(n,e,u)}),r}function pe(n,t,r){for(var u=-1,i=n.length;++u<i;){var o=n[u],a=t(o);if(null!=a&&(f===e?a==a&&!fa(a):r(a,f)))var f=a,c=o}return c}function ve(n,t){var r=[];return se(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function _e(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=vi),u||(u=[]);++i<o;){var a=n[i];t>0&&r(a)?t>1?_e(a,t-1,r,e,u):Ot(u,a):e||(u[u.length]=a)}return u}var ge=Cu(),de=Cu(!0);function ye(n,t){return n&&ge(n,t,Ca)}function we(n,t){return n&&de(n,t,Ca)}function be(n,t){return jt(t,function(t){return Yo(n[t])})}function me(n,t){for(var r=0,u=(t=gu(t,n)).length;null!=n&&r<u;)n=n[Li(t[r++])];return r&&r==u?n:e}function je(n,t,r){var e=t(n);return qo(n)?e:Ot(e,r(n))}function xe(n){return null==n?n===e?\"[object Undefined]\":\"[object Null]\":at&&at in Un(n)?function(n){var t=zn.call(n,at),r=n[at];try{n[at]=e;var u=!0}catch(n){}var i=Ln.call(n);return u&&(t?n[at]=r:delete n[at]),i}(n):function(n){return Ln.call(n)}(n)}function Ae(n,t){return n>t}function Ue(n,t){return null!=n&&zn.call(n,t)}function Oe(n,t){return null!=n&&t in Un(n)}function ke(n,t,r){for(var u=r?At:xt,i=n[0].length,o=n.length,a=o,f=en(o),c=Infinity,s=[];a--;){var l=n[a];a&&t&&(l=Ut(l,Nt(t))),c=dr(l.length,c),f[a]=!r&&(t||i>=120&&l.length>=120)?new Jr(a&&l):e}l=n[0];var h=-1,p=f[0];n:for(;++h<i&&s.length<c;){var v=l[h],_=t?t(v):v;if(v=r||0!==v?v:0,!(p?Zt(p,_):u(s,_,r))){for(a=o;--a;){var g=f[a];if(!(g?Zt(g,_):u(n[a],_,r)))continue n}p&&p.push(_),s.push(v)}}return s}function Re(n,t,r){var u=null==(n=Ai(n,t=gu(t,n)))?n:n[Li(Vi(t))];return null==u?e:dt(u,n,r)}function Ie(n){return ta(n)&&xe(n)==v}function Se(n,t,r,u,i){return n===t||(null==n||null==t||!ta(n)&&!ta(t)?n!=n&&t!=t:function(n,t,r,u,i,o){var a=qo(n),f=qo(t),c=a?_:li(n),s=f?_:li(t),l=(c=c==v?x:c)==x,h=(s=s==v?x:s)==x,p=c==s;if(p&&Go(n)){if(!Go(t))return!1;a=!0,l=!1}if(p&&!l)return o||(o=new Kr),a||ca(n)?Qu(n,t,r,u,i,o):function(n,t,r,e,u,i,o){switch(r){case C:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;n=n.buffer,t=t.buffer;case S:return!(n.byteLength!=t.byteLength||!i(new Fn(n),new Fn(t)));case g:case d:case j:return $o(+n,+t);case y:return n.name==t.name&&n.message==t.message;case U:case k:return n==t+\"\";case m:var a=Xt;case O:if(a||(a=rr),n.size!=t.size&&!(1&e))return!1;var f=o.get(n);if(f)return f==t;e|=2,o.set(n,t);var c=Qu(a(n),a(t),e,u,i,o);return o.delete(n),c;case R:if(Lr)return Lr.call(n)==Lr.call(t)}return!1}(n,t,c,r,u,i,o);if(!(1&r)){var w=l&&zn.call(n,\"__wrapped__\"),b=h&&zn.call(t,\"__wrapped__\");if(w||b){var A=w?n.value():n,I=b?t.value():t;return o||(o=new Kr),i(A,I,r,u,o)}}return!!p&&(o||(o=new Kr),function(n,t,r,u,i,o){var a=1&r,f=ni(n),c=f.length;if(c!=ni(t).length&&!a)return!1;for(var s=c;s--;){var l=f[s];if(!(a?l in t:zn.call(t,l)))return!1}var h=o.get(n),p=o.get(t);if(h&&p)return h==t&&p==n;var v=!0;o.set(n,t),o.set(t,n);for(var _=a;++s<c;){var g=n[l=f[s]],d=t[l];if(u)var y=a?u(d,g,l,t,n,o):u(g,d,l,n,t,o);if(!(y===e?g===d||i(g,d,r,u,o):y)){v=!1;break}_||(_=\"constructor\"==l)}if(v&&!_){var w=n.constructor,b=t.constructor;w==b||!(\"constructor\"in n)||!(\"constructor\"in t)||\"function\"==typeof w&&w instanceof w&&\"function\"==typeof b&&b instanceof b||(v=!1)}return o.delete(n),o.delete(t),v}(n,t,r,u,i,o))}(n,t,r,u,Se,i))}function Ce(n,t,r,u){var i=r.length,o=i,a=!u;if(null==n)return!o;for(n=Un(n);i--;){var f=r[i];if(a&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return!1}for(;++i<o;){var c=(f=r[i])[0],s=n[c],l=f[1];if(a&&f[2]){if(s===e&&!(c in n))return!1}else{var h=new Kr;if(u)var p=u(s,l,c,n,t,h);if(!(p===e?Se(l,s,3,u,h):p))return!1}}return!0}function Ee(n){return!(!na(n)||(t=n,Wn&&Wn in t))&&(Yo(n)?Pn:_n).test(Ti(n));var t}function ze(n){return\"function\"==typeof n?n:null==n?ef:\"object\"==typeof n?qo(n)?De(n[0],n[1]):Te(n):pf(n)}function Be(n){if(!bi(n))return _r(n);var t=[];for(var r in Un(n))zn.call(n,r)&&\"constructor\"!=r&&t.push(r);return t}function We(n,t){return n<t}function Le(n,t){var r=-1,e=Jo(n)?en(n.length):[];return se(n,function(n,u,i){e[++r]=t(n,u,i)}),e}function Te(n){var t=ai(n);return 1==t.length&&t[0][2]?ji(t[0][0],t[0][1]):function(r){return r===n||Ce(r,n,t)}}function De(n,t){return di(n)&&mi(t)?ji(Li(n),t):function(r){var u=Oa(r,n);return u===e&&u===t?ka(r,n):Se(t,u,3)}}function Pe(n,t,r,u,i){n!==t&&ge(t,function(o,a){if(i||(i=new Kr),na(o))!function(n,t,r,u,i,o,a){var f=Oi(n,r),c=Oi(t,r),s=a.get(c);if(s)Qr(n,r,s);else{var l=o?o(f,c,r+\"\",n,t,a):e,h=l===e;if(h){var p=qo(c),v=!p&&Go(c),_=!p&&!v&&ca(c);l=c,p||v||_?qo(f)?l=f:Ko(f)?l=Ou(f):v?(h=!1,l=bu(c,!0)):_?(h=!1,l=ju(c,!0)):l=[]:ua(c)||No(c)?(l=f,No(f)?l=da(f):na(f)&&!Yo(f)||(l=pi(c))):h=!1}h&&(a.set(c,l),i(l,c,u,o,a),a.delete(c)),Qr(n,r,l)}}(n,t,a,r,Pe,u,i);else{var f=u?u(Oi(n,a),o,a+\"\",n,t,i):e;f===e&&(f=o),Qr(n,a,f)}},Ea)}function $e(n,t){var r=n.length;if(r)return _i(t+=t<0?r:0,r)?n[t]:e}function Me(n,t,r){t=t.length?Ut(t,function(n){return qo(n)?function(t){return me(t,1===n.length?n[0]:n)}:n}):[ef];var e=-1;return t=Ut(t,Nt(ii())),function(n,t){var e=n.length;for(n.sort(function(n,t){return function(n,t,r){for(var e=-1,u=n.criteria,i=t.criteria,o=u.length,a=r.length;++e<o;){var f=xu(u[e],i[e]);if(f)return e>=a?f:f*(\"desc\"==r[e]?-1:1)}return n.index-t.index}(n,t,r)});e--;)n[e]=n[e].value;return n}(Le(n,function(n,r,u){return{criteria:Ut(t,function(t){return t(n)}),index:++e,value:n}}))}function Fe(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],a=me(n,o);r(a,o)&&He(i,gu(o,n),a)}return i}function Ne(n,t,r,e){var u=e?Bt:zt,i=-1,o=t.length,a=n;for(n===t&&(t=Ou(t)),r&&(a=Ut(n,Nt(r)));++i<o;)for(var f=0,c=t[i],s=r?r(c):c;(f=u(a,s,f,e))>-1;)a!==n&&et.call(a,f,1),et.call(n,f,1);return n}function qe(n,t){for(var r=n?t.length:0,e=r-1;r--;){var u=t[r];if(r==e||u!==i){var i=u;_i(u)?et.call(n,u,1):fu(n,u)}}return n}function Ze(n,t){return n+sr(br()*(t-n+1))}function Je(n,t){var r=\"\";if(!n||t<1||t>s)return r;do{t%2&&(r+=n),(t=sr(t/2))&&(n+=n)}while(t);return r}function Ke(n,t){return Ii(xi(n,t,ef),n+\"\")}function Ge(n){return Vr($a(n))}function Ve(n,t){var r=$a(n);return Ei(r,ie(t,0,r.length))}function He(n,t,r,u){if(!na(n))return n;for(var i=-1,o=(t=gu(t,n)).length,a=o-1,f=n;null!=f&&++i<o;){var c=Li(t[i]),s=r;if(\"__proto__\"===c||\"constructor\"===c||\"prototype\"===c)return n;if(i!=a){var l=f[c];(s=u?u(l,c,f):e)===e&&(s=na(l)?l:_i(t[i+1])?[]:{})}Xr(f,c,s),f=f[c]}return n}var Ye=Rr?function(n,t){return Rr.set(n,t),n}:ef,Qe=ct?function(n,t){return ct(n,\"toString\",{configurable:!0,enumerable:!1,value:nf(t),writable:!0})}:ef;function Xe(n){return Ei($a(n))}function nu(n,t,r){var e=-1,u=n.length;t<0&&(t=-t>u?0:u+t),(r=r>u?u:r)<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=en(u);++e<u;)i[e]=n[e+t];return i}function tu(n,t){var r;return se(n,function(n,e,u){return!(r=t(n,e,u))}),!!r}function ru(n,t,r){var e=0,u=null==n?e:n.length;if(\"number\"==typeof t&&t==t&&u<=2147483647){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!fa(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return eu(n,t,ef,r)}function eu(n,t,r,u){var i=0,o=null==n?0:n.length;if(0===o)return 0;for(var a=(t=r(t))!=t,f=null===t,c=fa(t),s=t===e;i<o;){var l=sr((i+o)/2),h=r(n[l]),p=h!==e,v=null===h,_=h==h,g=fa(h);if(a)var d=u||_;else d=s?_&&(u||p):f?_&&p&&(u||!v):c?_&&p&&!v&&(u||!g):!v&&!g&&(u?h<=t:h<t);d?i=l+1:o=l}return dr(o,4294967294)}function uu(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r],a=t?t(o):o;if(!r||!$o(a,f)){var f=a;i[u++]=0===o?0:o}}return i}function iu(n){return\"number\"==typeof n?n:fa(n)?l:+n}function ou(n){if(\"string\"==typeof n)return n;if(qo(n))return Ut(n,ou)+\"\";if(fa(n))return Tr?Tr.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-Infinity?\"-0\":t}function au(n,t,r){var e=-1,u=xt,i=n.length,o=!0,a=[],f=a;if(r)o=!1,u=At;else if(i>=200){var c=t?null:Ju(n);if(c)return rr(c);o=!1,u=Zt,f=new Jr}else f=t?[]:a;n:for(;++e<i;){var s=n[e],l=t?t(s):s;if(s=r||0!==s?s:0,o&&l==l){for(var h=f.length;h--;)if(f[h]===l)continue n;t&&f.push(l),a.push(s)}else u(f,l,r)||(f!==a&&f.push(l),a.push(s))}return a}function fu(n,t){return null==(n=Ai(n,t=gu(t,n)))||delete n[Li(Vi(t))]}function cu(n,t,r,e){return He(n,t,r(me(n,t)),e)}function su(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?nu(n,e?0:i,e?i+1:u):nu(n,e?i+1:0,e?u:i)}function lu(n,t){var r=n;return r instanceof Fr&&(r=r.value()),kt(t,function(n,t){return t.func.apply(t.thisArg,Ot([n],t.args))},r)}function hu(n,t,r){var e=n.length;if(e<2)return e?au(n[0]):[];for(var u=-1,i=en(e);++u<e;)for(var o=n[u],a=-1;++a<e;)a!=u&&(i[u]=ce(i[u]||o,n[a],t,r));return au(_e(i,1),t,r)}function pu(n,t,r){for(var u=-1,i=n.length,o=t.length,a={};++u<i;)r(a,n[u],u<o?t[u]:e);return a}function vu(n){return Ko(n)?n:[]}function _u(n){return\"function\"==typeof n?n:ef}function gu(n,t){return qo(n)?n:di(n,t)?[n]:Wi(ya(n))}var du=Ke;function yu(n,t,r){var u=n.length;return r=r===e?u:r,!t&&r>=u?n:nu(n,t,r)}var wu=st||function(n){return it.clearTimeout(n)};function bu(n,t){if(t)return n.slice();var r=n.length,e=Nn?Nn(r):new n.constructor(r);return n.copy(e),e}function mu(n){var t=new n.constructor(n.byteLength);return new Fn(t).set(new Fn(n)),t}function ju(n,t){var r=t?mu(n.buffer):n.buffer;return new n.constructor(r,n.byteOffset,n.length)}function xu(n,t){if(n!==t){var r=n!==e,u=null===n,i=n==n,o=fa(n),a=t!==e,f=null===t,c=t==t,s=fa(t);if(!f&&!s&&!o&&n>t||o&&a&&c&&!f&&!s||u&&a&&c||!r&&c||!i)return 1;if(!u&&!o&&!s&&n<t||s&&r&&i&&!u&&!o||f&&r&&i||!a&&i||!c)return-1}return 0}function Au(n,t,r,e){for(var u=-1,i=n.length,o=r.length,a=-1,f=t.length,c=gr(i-o,0),s=en(f+c),l=!e;++a<f;)s[a]=t[a];for(;++u<o;)(l||u<i)&&(s[r[u]]=n[u]);for(;c--;)s[a++]=n[u++];return s}function Uu(n,t,r,e){for(var u=-1,i=n.length,o=-1,a=r.length,f=-1,c=t.length,s=gr(i-a,0),l=en(s+c),h=!e;++u<s;)l[u]=n[u];for(var p=u;++f<c;)l[p+f]=t[f];for(;++o<a;)(h||u<i)&&(l[p+r[o]]=n[u++]);return l}function Ou(n,t){var r=-1,e=n.length;for(t||(t=en(e));++r<e;)t[r]=n[r];return t}function ku(n,t,r,u){var i=!r;r||(r={});for(var o=-1,a=t.length;++o<a;){var f=t[o],c=u?u(r[f],n[f],f,r,n):e;c===e&&(c=n[f]),i?ee(r,f,c):Xr(r,f,c)}return r}function Ru(n,t){return function(r,e){var u=qo(r)?yt:te,i=t?t():{};return u(r,n,ii(e,2),i)}}function Iu(n){return Ke(function(t,r){var u=-1,i=r.length,o=i>1?r[i-1]:e,a=i>2?r[2]:e;for(o=n.length>3&&\"function\"==typeof o?(i--,o):e,a&&gi(r[0],r[1],a)&&(o=i<3?e:o,i=1),t=Un(t);++u<i;){var f=r[u];f&&n(t,f,u,o)}return t})}function Su(n,t){return function(r,e){if(null==r)return r;if(!Jo(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=Un(r);(t?i--:++i<u)&&!1!==e(o[i],i,o););return r}}function Cu(n){return function(t,r,e){for(var u=-1,i=Un(t),o=e(t),a=o.length;a--;){var f=o[n?a:++u];if(!1===r(i[f],f,i))break}return t}}function Eu(n){return function(t){var r=Qt(t=ya(t))?ir(t):e,u=r?r[0]:t.charAt(0),i=r?yu(r,1).join(\"\"):t.slice(1);return u[n]()+i}}function zu(n){return function(t){return kt(Ya(Na(t).replace(qn,\"\")),n,\"\")}}function Bu(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=Pr(n.prototype),e=n.apply(r,t);return na(e)?e:r}}function Wu(n){return function(t,r,u){var i=Un(t);if(!Jo(t)){var o=ii(r,3);t=Ca(t),r=function(n){return o(i[n],n,i)}}var a=n(t,r,u);return a>-1?i[o?t[a]:a]:e}}function Lu(n){return Xu(function(t){var r=t.length,i=r,o=Mr.prototype.thru;for(n&&t.reverse();i--;){var a=t[i];if(\"function\"!=typeof a)throw new Rn(u);if(o&&!f&&\"wrapper\"==ei(a))var f=new Mr([],!0)}for(i=f?i:r;++i<r;){var c=ei(a=t[i]),s=\"wrapper\"==c?ri(a):e;f=s&&yi(s[0])&&424==s[1]&&!s[4].length&&1==s[9]?f[ei(s[0])].apply(f,s[3]):1==a.length&&yi(a)?f[c]():f.thru(a)}return function(){var n=arguments,e=n[0];if(f&&1==n.length&&qo(e))return f.plant(e).value();for(var u=0,i=r?t[u].apply(this,n):e;++u<r;)i=t[u].call(this,i);return i}})}function Tu(n,t,r,u,i,o,a,c,s,l){var h=t&f,p=1&t,v=2&t,_=24&t,g=512&t,d=v?e:Bu(n);return function e(){for(var f=arguments.length,y=en(f),w=f;w--;)y[w]=arguments[w];if(_)var b=ui(e),m=Gt(y,b);if(u&&(y=Au(y,u,i,_)),o&&(y=Uu(y,o,a,_)),f-=m,_&&f<l){var j=tr(y,b);return qu(n,t,Tu,e.placeholder,r,y,j,c,s,l-f)}var x=p?r:this,A=v?x[n]:n;return f=y.length,c?y=Ui(y,c):g&&f>1&&y.reverse(),h&&s<f&&(y.length=s),this&&this!==it&&this instanceof e&&(A=d||Bu(A)),A.apply(x,y)}}function Du(n,t){return function(r,e){return function(n,t,r,e){return ye(n,function(n,u,i){t(e,r(n),u,i)}),e}(r,n,t(e),{})}}function Pu(n,t){return function(r,u){var i;if(r===e&&u===e)return t;if(r!==e&&(i=r),u!==e){if(i===e)return u;\"string\"==typeof r||\"string\"==typeof u?(r=ou(r),u=ou(u)):(r=iu(r),u=iu(u)),i=n(r,u)}return i}}function $u(n){return Xu(function(t){return t=Ut(t,Nt(ii())),Ke(function(r){var e=this;return n(t,function(n){return dt(n,e,r)})})})}function Mu(n,t){var r=(t=t===e?\" \":ou(t)).length;if(r<2)return r?Je(t,n):t;var u=Je(t,cr(n/ur(t)));return Qt(t)?yu(ir(u),0,n).join(\"\"):u.slice(0,n)}function Fu(n){return function(t,r,u){return u&&\"number\"!=typeof u&&gi(t,r,u)&&(r=u=e),t=pa(t),r===e?(r=t,t=0):r=pa(r),function(n,t,r,e){for(var u=-1,i=gr(cr((t-n)/(r||1)),0),o=en(i);i--;)o[e?i:++u]=n,n+=r;return o}(t,r,u=u===e?t<r?1:-1:pa(u),n)}}function Nu(n){return function(t,r){return\"string\"==typeof t&&\"string\"==typeof r||(t=ga(t),r=ga(r)),n(t,r)}}function qu(n,t,r,u,i,o,f,c,s,l){var h=8&t;t|=h?a:64,4&(t&=~(h?64:a))||(t&=-4);var p=[n,t,i,h?o:e,h?f:e,h?e:o,h?e:f,c,s,l],v=r.apply(e,p);return yi(n)&&ki(v,p),v.placeholder=u,Si(v,n,t)}function Zu(n){var t=An[n];return function(n,r){if(n=ga(n),(r=null==r?0:dr(va(r),292))&&pr(n)){var e=(ya(n)+\"e\").split(\"e\");return+((e=(ya(t(e[0]+\"e\"+(+e[1]+r)))+\"e\").split(\"e\"))[0]+\"e\"+(+e[1]-r))}return t(n)}}var Ju=Ur&&1/rr(new Ur([,-0]))[1]==c?function(n){return new Ur(n)}:cf;function Ku(n){return function(t){var r=li(t);return r==m?Xt(t):r==O?er(t):function(n,t){return Ut(t,function(t){return[t,n[t]]})}(t,n(t))}}function Gu(n,t,r,i,c,s,l,h){var p=2&t;if(!p&&\"function\"!=typeof n)throw new Rn(u);var v=i?i.length:0;if(v||(t&=-97,i=c=e),l=l===e?l:gr(va(l),0),h=h===e?h:va(h),v-=c?c.length:0,64&t){var _=i,g=c;i=c=e}var d=p?e:ri(n),y=[n,t,r,i,c,_,g,s,l,h];if(d&&function(n,t){var r=n[1],e=t[1],u=r|e;if(!(u<131||e==f&&8==r||e==f&&256==r&&n[7].length<=t[8]||384==e&&t[7].length<=t[8]&&8==r))return n;1&e&&(n[2]=t[2],u|=1&r?0:4);var i=t[3];if(i){var a=n[3];n[3]=a?Au(a,i,t[4]):i,n[4]=a?tr(n[3],o):t[4]}(i=t[5])&&(n[5]=(a=n[5])?Uu(a,i,t[6]):i,n[6]=a?tr(n[5],o):t[6]),(i=t[7])&&(n[7]=i),e&f&&(n[8]=null==n[8]?t[8]:dr(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u}(y,d),n=y[0],t=y[1],r=y[2],i=y[3],c=y[4],!(h=y[9]=y[9]===e?p?0:n.length:gr(y[9]-v,0))&&24&t&&(t&=-25),t&&1!=t)w=8==t||16==t?function(n,t,r){var u=Bu(n);return function i(){for(var o=arguments.length,a=en(o),f=o,c=ui(i);f--;)a[f]=arguments[f];var s=o<3&&a[0]!==c&&a[o-1]!==c?[]:tr(a,c);return(o-=s.length)<r?qu(n,t,Tu,i.placeholder,e,a,s,e,e,r-o):dt(this&&this!==it&&this instanceof i?u:n,this,a)}}(n,t,h):t!=a&&33!=t||c.length?Tu.apply(e,y):function(n,t,r,e){var u=1&t,i=Bu(n);return function t(){for(var o=-1,a=arguments.length,f=-1,c=e.length,s=en(c+a),l=this&&this!==it&&this instanceof t?i:n;++f<c;)s[f]=e[f];for(;a--;)s[f++]=arguments[++o];return dt(l,u?r:this,s)}}(n,t,r,i);else var w=function(n,t,r){var e=1&t,u=Bu(n);return function t(){return(this&&this!==it&&this instanceof t?u:n).apply(e?r:this,arguments)}}(n,t,r);return Si((d?Ye:ki)(w,y),n,t)}function Vu(n,t,r,u){return n===e||$o(n,Sn[r])&&!zn.call(u,r)?t:n}function Hu(n,t,r,u,i,o){return na(n)&&na(t)&&(o.set(t,n),Pe(n,t,e,Hu,o),o.delete(t)),n}function Yu(n){return ua(n)?e:n}function Qu(n,t,r,u,i,o){var a=1&r,f=n.length,c=t.length;if(f!=c&&!(a&&c>f))return!1;var s=o.get(n),l=o.get(t);if(s&&l)return s==t&&l==n;var h=-1,p=!0,v=2&r?new Jr:e;for(o.set(n,t),o.set(t,n);++h<f;){var _=n[h],g=t[h];if(u)var d=a?u(g,_,h,t,n,o):u(_,g,h,n,t,o);if(d!==e){if(d)continue;p=!1;break}if(v){if(!It(t,function(n,t){if(!Zt(v,t)&&(_===n||i(_,n,r,u,o)))return v.push(t)})){p=!1;break}}else if(_!==g&&!i(_,g,r,u,o)){p=!1;break}}return o.delete(n),o.delete(t),p}function Xu(n){return Ii(xi(n,e,qi),n+\"\")}function ni(n){return je(n,Ca,ci)}function ti(n){return je(n,Ea,si)}var ri=Rr?function(n){return Rr.get(n)}:cf;function ei(n){for(var t=n.name+\"\",r=Ir[t],e=zn.call(Ir,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function ui(n){return(zn.call(Dr,\"placeholder\")?Dr:n).placeholder}function ii(){var n=Dr.iteratee||uf;return n=n===uf?ze:n,arguments.length?n(arguments[0],arguments[1]):n}function oi(n,t){var r,e,u=n.__data__;return(\"string\"==(e=typeof(r=t))||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==r:null===r)?u[\"string\"==typeof t?\"string\":\"hash\"]:u.map}function ai(n){for(var t=Ca(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,mi(u)]}return t}function fi(n,t){var r=function(n,t){return null==n?e:n[t]}(n,t);return Ee(r)?r:e}var ci=lr?function(n){return null==n?[]:(n=Un(n),jt(lr(n),function(t){return nt.call(n,t)}))}:gf,si=lr?function(n){for(var t=[];n;)Ot(t,ci(n)),n=Jn(n);return t}:gf,li=xe;function hi(n,t,r){for(var e=-1,u=(t=gu(t,n)).length,i=!1;++e<u;){var o=Li(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:!!(u=null==n?0:n.length)&&Xo(u)&&_i(o,u)&&(qo(n)||No(n))}function pi(n){return\"function\"!=typeof n.constructor||bi(n)?{}:Pr(Jn(n))}function vi(n){return qo(n)||No(n)||!!(ut&&n&&n[ut])}function _i(n,t){var r=typeof n;return!!(t=null==t?s:t)&&(\"number\"==r||\"symbol\"!=r&&dn.test(n))&&n>-1&&n%1==0&&n<t}function gi(n,t,r){if(!na(r))return!1;var e=typeof t;return!!(\"number\"==e?Jo(r)&&_i(t,r.length):\"string\"==e&&t in r)&&$o(r[t],n)}function di(n,t){if(qo(n))return!1;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!fa(n))||Q.test(n)||!Y.test(n)||null!=t&&n in Un(t)}function yi(n){var t=ei(n),r=Dr[t];if(\"function\"!=typeof r||!(t in Fr.prototype))return!1;if(n===r)return!0;var e=ri(r);return!!e&&n===e[0]}(jr&&li(new jr(new ArrayBuffer(1)))!=C||xr&&li(new xr)!=m||Ar&&li(Ar.resolve())!=A||Ur&&li(new Ur)!=O||Or&&li(new Or)!=I)&&(li=function(n){var t=xe(n),r=t==x?n.constructor:e,u=r?Ti(r):\"\";if(u)switch(u){case Sr:return C;case Cr:return m;case Er:return A;case zr:return O;case Br:return I}return t});var wi=Cn?Yo:df;function bi(n){var t=n&&n.constructor;return n===(\"function\"==typeof t&&t.prototype||Sn)}function mi(n){return n==n&&!na(n)}function ji(n,t){return function(r){return null!=r&&r[n]===t&&(t!==e||n in Un(r))}}function xi(n,t,r){return t=gr(t===e?n.length-1:t,0),function(){for(var e=arguments,u=-1,i=gr(e.length-t,0),o=en(i);++u<i;)o[u]=e[t+u];u=-1;for(var a=en(t+1);++u<t;)a[u]=e[u];return a[t]=r(o),dt(n,this,a)}}function Ai(n,t){return t.length<2?n:me(n,nu(t,0,-1))}function Ui(n,t){for(var r=n.length,u=dr(t.length,r),i=Ou(n);u--;){var o=t[u];n[u]=_i(o,r)?i[o]:e}return n}function Oi(n,t){if((\"constructor\"!==t||\"function\"!=typeof n[t])&&\"__proto__\"!=t)return n[t]}var ki=Ci(Ye),Ri=Dt||function(n,t){return it.setTimeout(n,t)},Ii=Ci(Qe);function Si(n,t,r){var e=t+\"\";return Ii(n,function(n,t){var r=t.length;if(!r)return n;var e=r-1;return t[e]=(r>1?\"& \":\"\")+t[e],t=t.join(r>2?\", \":\" \"),n.replace(un,\"{\\n/* [wrapped with \"+t+\"] */\\n\")}(e,function(n,t){return wt(p,function(r){var e=\"_.\"+r[0];t&r[1]&&!xt(n,e)&&n.push(e)}),n.sort()}(function(n){var t=n.match(on);return t?t[1].split(an):[]}(e),r)))}function Ci(n){var t=0,r=0;return function(){var u=yr(),i=16-(u-r);if(r=u,i>0){if(++t>=800)return arguments[0]}else t=0;return n.apply(e,arguments)}}function Ei(n,t){var r=-1,u=n.length,i=u-1;for(t=t===e?u:t;++r<t;){var o=Ze(r,i),a=n[o];n[o]=n[r],n[r]=a}return n.length=t,n}var zi,Bi,Wi=(zi=Bo(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(X,function(n,r,e,u){t.push(e?u.replace(sn,\"$1\"):r||n)}),t},function(n){return 500===Bi.size&&Bi.clear(),n}),Bi=zi.cache,zi);function Li(n){if(\"string\"==typeof n||fa(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-Infinity?\"-0\":t}function Ti(n){if(null!=n){try{return En.call(n)}catch(n){}try{return n+\"\"}catch(n){}}return\"\"}function Di(n){if(n instanceof Fr)return n.clone();var t=new Mr(n.__wrapped__,n.__chain__);return t.__actions__=Ou(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}var Pi=Ke(function(n,t){return Ko(n)?ce(n,_e(t,1,Ko,!0)):[]}),$i=Ke(function(n,t){var r=Vi(t);return Ko(r)&&(r=e),Ko(n)?ce(n,_e(t,1,Ko,!0),ii(r,2)):[]}),Mi=Ke(function(n,t){var r=Vi(t);return Ko(r)&&(r=e),Ko(n)?ce(n,_e(t,1,Ko,!0),e,r):[]});function Fi(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:va(r);return u<0&&(u=gr(e+u,0)),Et(n,ii(t,3),u)}function Ni(n,t,r){var u=null==n?0:n.length;if(!u)return-1;var i=u-1;return r!==e&&(i=va(r),i=r<0?gr(u+i,0):dr(i,u-1)),Et(n,ii(t,3),i,!0)}function qi(n){return null!=n&&n.length?_e(n,1):[]}function Zi(n){return n&&n.length?n[0]:e}var Ji=Ke(function(n){var t=Ut(n,vu);return t.length&&t[0]===n[0]?ke(t):[]}),Ki=Ke(function(n){var t=Vi(n),r=Ut(n,vu);return t===Vi(r)?t=e:r.pop(),r.length&&r[0]===n[0]?ke(r,ii(t,2)):[]}),Gi=Ke(function(n){var t=Vi(n),r=Ut(n,vu);return(t=\"function\"==typeof t?t:e)&&r.pop(),r.length&&r[0]===n[0]?ke(r,e,t):[]});function Vi(n){var t=null==n?0:n.length;return t?n[t-1]:e}var Hi=Ke(Yi);function Yi(n,t){return n&&n.length&&t&&t.length?Ne(n,t):n}var Qi=Xu(function(n,t){var r=null==n?0:n.length,e=ue(n,t);return qe(n,Ut(t,function(n){return _i(n,r)?+n:n}).sort(xu)),e});function Xi(n){return null==n?n:mr.call(n)}var no=Ke(function(n){return au(_e(n,1,Ko,!0))}),to=Ke(function(n){var t=Vi(n);return Ko(t)&&(t=e),au(_e(n,1,Ko,!0),ii(t,2))}),ro=Ke(function(n){var t=Vi(n);return t=\"function\"==typeof t?t:e,au(_e(n,1,Ko,!0),e,t)});function eo(n){if(!n||!n.length)return[];var t=0;return n=jt(n,function(n){if(Ko(n))return t=gr(n.length,t),!0}),Mt(t,function(t){return Ut(n,Tt(t))})}function uo(n,t){if(!n||!n.length)return[];var r=eo(n);return null==t?r:Ut(r,function(n){return dt(t,e,n)})}var io=Ke(function(n,t){return Ko(n)?ce(n,t):[]}),oo=Ke(function(n){return hu(jt(n,Ko))}),ao=Ke(function(n){var t=Vi(n);return Ko(t)&&(t=e),hu(jt(n,Ko),ii(t,2))}),fo=Ke(function(n){var t=Vi(n);return t=\"function\"==typeof t?t:e,hu(jt(n,Ko),e,t)}),co=Ke(eo),so=Ke(function(n){var t=n.length,r=t>1?n[t-1]:e;return r=\"function\"==typeof r?(n.pop(),r):e,uo(n,r)});function lo(n){var t=Dr(n);return t.__chain__=!0,t}function ho(n,t){return t(n)}var po=Xu(function(n){var t=n.length,r=t?n[0]:0,u=this.__wrapped__,i=function(t){return ue(t,n)};return!(t>1||this.__actions__.length)&&u instanceof Fr&&_i(r)?((u=u.slice(r,+r+(t?1:0))).__actions__.push({func:ho,args:[i],thisArg:e}),new Mr(u,this.__chain__).thru(function(n){return t&&!n.length&&n.push(e),n})):this.thru(i)}),vo=Ru(function(n,t,r){zn.call(n,r)?++n[r]:ee(n,r,1)}),_o=Wu(Fi),go=Wu(Ni);function yo(n,t){return(qo(n)?wt:se)(n,ii(t,3))}function wo(n,t){return(qo(n)?bt:le)(n,ii(t,3))}var bo=Ru(function(n,t,r){zn.call(n,r)?n[r].push(t):ee(n,r,[t])}),mo=Ke(function(n,t,r){var e=-1,u=\"function\"==typeof t,i=Jo(n)?en(n.length):[];return se(n,function(n){i[++e]=u?dt(t,n,r):Re(n,t,r)}),i}),jo=Ru(function(n,t,r){ee(n,r,t)});function xo(n,t){return(qo(n)?Ut:Le)(n,ii(t,3))}var Ao=Ru(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),Uo=Ke(function(n,t){if(null==n)return[];var r=t.length;return r>1&&gi(n,t[0],t[1])?t=[]:r>2&&gi(t[0],t[1],t[2])&&(t=[t[0]]),Me(n,_e(t,1),[])}),Oo=St||function(){return it.Date.now()};function ko(n,t,r){return t=r?e:t,Gu(n,f,e,e,e,e,t=n&&null==t?n.length:t)}function Ro(n,t){var r;if(\"function\"!=typeof t)throw new Rn(u);return n=va(n),function(){return--n>0&&(r=t.apply(this,arguments)),n<=1&&(t=e),r}}var Io=Ke(function(n,t,r){var e=1;if(r.length){var u=tr(r,ui(Io));e|=a}return Gu(n,e,t,r,u)}),So=Ke(function(n,t,r){var e=3;if(r.length){var u=tr(r,ui(So));e|=a}return Gu(t,e,n,r,u)});function Co(n,t,r){var i,o,a,f,c,s,l=0,h=!1,p=!1,v=!0;if(\"function\"!=typeof n)throw new Rn(u);function _(t){var r=i,u=o;return i=o=e,l=t,f=n.apply(u,r)}function g(n){return l=n,c=Ri(y,t),h?_(n):f}function d(n){var r=n-s;return s===e||r>=t||r<0||p&&n-l>=a}function y(){var n=Oo();if(d(n))return w(n);c=Ri(y,function(n){var r=t-(n-s);return p?dr(r,a-(n-l)):r}(n))}function w(n){return c=e,v&&i?_(n):(i=o=e,f)}function b(){var n=Oo(),r=d(n);if(i=arguments,o=this,s=n,r){if(c===e)return g(s);if(p)return wu(c),c=Ri(y,t),_(s)}return c===e&&(c=Ri(y,t)),f}return t=ga(t)||0,na(r)&&(h=!!r.leading,a=(p=\"maxWait\"in r)?gr(ga(r.maxWait)||0,t):a,v=\"trailing\"in r?!!r.trailing:v),b.cancel=function(){c!==e&&wu(c),l=0,i=s=o=c=e},b.flush=function(){return c===e?f:w(Oo())},b}var Eo=Ke(function(n,t){return fe(n,1,t)}),zo=Ke(function(n,t,r){return fe(n,ga(t)||0,r)});function Bo(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new Rn(u);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Bo.Cache||Zr),r}function Wo(n){if(\"function\"!=typeof n)throw new Rn(u);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:return!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}Bo.Cache=Zr;var Lo=du(function(n,t){var r=(t=1==t.length&&qo(t[0])?Ut(t[0],Nt(ii())):Ut(_e(t,1),Nt(ii()))).length;return Ke(function(e){for(var u=-1,i=dr(e.length,r);++u<i;)e[u]=t[u].call(this,e[u]);return dt(n,this,e)})}),To=Ke(function(n,t){var r=tr(t,ui(To));return Gu(n,a,e,t,r)}),Do=Ke(function(n,t){var r=tr(t,ui(Do));return Gu(n,64,e,t,r)}),Po=Xu(function(n,t){return Gu(n,256,e,e,e,t)});function $o(n,t){return n===t||n!=n&&t!=t}var Mo=Nu(Ae),Fo=Nu(function(n,t){return n>=t}),No=Ie(function(){return arguments}())?Ie:function(n){return ta(n)&&zn.call(n,\"callee\")&&!nt.call(n,\"callee\")},qo=en.isArray,Zo=lt?Nt(lt):function(n){return ta(n)&&xe(n)==S};function Jo(n){return null!=n&&Xo(n.length)&&!Yo(n)}function Ko(n){return ta(n)&&Jo(n)}var Go=hr||df,Vo=ht?Nt(ht):function(n){return ta(n)&&xe(n)==d};function Ho(n){if(!ta(n))return!1;var t=xe(n);return t==y||\"[object DOMException]\"==t||\"string\"==typeof n.message&&\"string\"==typeof n.name&&!ua(n)}function Yo(n){if(!na(n))return!1;var t=xe(n);return t==w||t==b||\"[object AsyncFunction]\"==t||\"[object Proxy]\"==t}function Qo(n){return\"number\"==typeof n&&n==va(n)}function Xo(n){return\"number\"==typeof n&&n>-1&&n%1==0&&n<=s}function na(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function ta(n){return null!=n&&\"object\"==typeof n}var ra=pt?Nt(pt):function(n){return ta(n)&&li(n)==m};function ea(n){return\"number\"==typeof n||ta(n)&&xe(n)==j}function ua(n){if(!ta(n)||xe(n)!=x)return!1;var t=Jn(n);if(null===t)return!0;var r=zn.call(t,\"constructor\")&&t.constructor;return\"function\"==typeof r&&r instanceof r&&En.call(r)==Tn}var ia=vt?Nt(vt):function(n){return ta(n)&&xe(n)==U},oa=_t?Nt(_t):function(n){return ta(n)&&li(n)==O};function aa(n){return\"string\"==typeof n||!qo(n)&&ta(n)&&xe(n)==k}function fa(n){return\"symbol\"==typeof n||ta(n)&&xe(n)==R}var ca=gt?Nt(gt):function(n){return ta(n)&&Xo(n.length)&&!!Qn[xe(n)]},sa=Nu(We),la=Nu(function(n,t){return n<=t});function ha(n){if(!n)return[];if(Jo(n))return aa(n)?ir(n):Ou(n);if(ot&&n[ot])return function(n){for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}(n[ot]());var t=li(n);return(t==m?Xt:t==O?rr:$a)(n)}function pa(n){return n?(n=ga(n))===c||-Infinity===n?17976931348623157e292*(n<0?-1:1):n==n?n:0:0===n?n:0}function va(n){var t=pa(n),r=t%1;return t==t?r?t-r:t:0}function _a(n){return n?ie(va(n),0,h):0}function ga(n){if(\"number\"==typeof n)return n;if(fa(n))return l;if(na(n)){var t=\"function\"==typeof n.valueOf?n.valueOf():n;n=na(t)?t+\"\":t}if(\"string\"!=typeof n)return 0===n?n:+n;n=Ft(n);var r=vn.test(n);return r||gn.test(n)?rt(n.slice(2),r?2:8):pn.test(n)?l:+n}function da(n){return ku(n,Ea(n))}function ya(n){return null==n?\"\":ou(n)}var wa=Iu(function(n,t){if(bi(t)||Jo(t))ku(t,Ca(t),n);else for(var r in t)zn.call(t,r)&&Xr(n,r,t[r])}),ba=Iu(function(n,t){ku(t,Ea(t),n)}),ma=Iu(function(n,t,r,e){ku(t,Ea(t),n,e)}),ja=Iu(function(n,t,r,e){ku(t,Ca(t),n,e)}),xa=Xu(ue),Aa=Ke(function(n,t){n=Un(n);var r=-1,u=t.length,i=u>2?t[2]:e;for(i&&gi(t[0],t[1],i)&&(u=1);++r<u;)for(var o=t[r],a=Ea(o),f=-1,c=a.length;++f<c;){var s=a[f],l=n[s];(l===e||$o(l,Sn[s])&&!zn.call(n,s))&&(n[s]=o[s])}return n}),Ua=Ke(function(n){return n.push(e,Hu),dt(Ba,e,n)});function Oa(n,t,r){var u=null==n?e:me(n,t);return u===e?r:u}function ka(n,t){return null!=n&&hi(n,t,Oe)}var Ra=Du(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=Ln.call(t)),n[t]=r},nf(ef)),Ia=Du(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=Ln.call(t)),zn.call(n,t)?n[t].push(r):n[t]=[r]},ii),Sa=Ke(Re);function Ca(n){return Jo(n)?Gr(n):Be(n)}function Ea(n){return Jo(n)?Gr(n,!0):function(n){if(!na(n))return function(n){var t=[];if(null!=n)for(var r in Un(n))t.push(r);return t}(n);var t=bi(n),r=[];for(var e in n)(\"constructor\"!=e||!t&&zn.call(n,e))&&r.push(e);return r}(n)}var za=Iu(function(n,t,r){Pe(n,t,r)}),Ba=Iu(function(n,t,r,e){Pe(n,t,r,e)}),Wa=Xu(function(n,t){var r={};if(null==n)return r;var e=!1;t=Ut(t,function(t){return t=gu(t,n),e||(e=t.length>1),t}),ku(n,ti(n),r),e&&(r=oe(r,7,Yu));for(var u=t.length;u--;)fu(r,t[u]);return r}),La=Xu(function(n,t){return null==n?{}:function(n,t){return Fe(n,t,function(t,r){return ka(n,r)})}(n,t)});function Ta(n,t){if(null==n)return{};var r=Ut(ti(n),function(n){return[n]});return t=ii(t),Fe(n,r,function(n,r){return t(n,r[0])})}var Da=Ku(Ca),Pa=Ku(Ea);function $a(n){return null==n?[]:qt(n,Ca(n))}var Ma=zu(function(n,t,r){return t=t.toLowerCase(),n+(r?Fa(t):t)});function Fa(n){return Ha(ya(n).toLowerCase())}function Na(n){return(n=ya(n))&&n.replace(yn,Vt).replace(Zn,\"\")}var qa=zu(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),Za=zu(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),Ja=Eu(\"toLowerCase\"),Ka=zu(function(n,t,r){return n+(r?\"_\":\"\")+t.toLowerCase()}),Ga=zu(function(n,t,r){return n+(r?\" \":\"\")+Ha(t)}),Va=zu(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),Ha=Eu(\"toUpperCase\");function Ya(n,t,r){return n=ya(n),(t=r?e:t)===e?function(n){return Vn.test(n)}(n)?function(n){return n.match(Kn)||[]}(n):function(n){return n.match(fn)||[]}(n):n.match(t)||[]}var Qa=Ke(function(n,t){try{return dt(n,e,t)}catch(n){return Ho(n)?n:new jn(n)}}),Xa=Xu(function(n,t){return wt(t,function(t){t=Li(t),ee(n,t,Io(n[t],n))}),n});function nf(n){return function(){return n}}var tf=Lu(),rf=Lu(!0);function ef(n){return n}function uf(n){return ze(\"function\"==typeof n?n:oe(n,1))}var of=Ke(function(n,t){return function(r){return Re(r,n,t)}}),af=Ke(function(n,t){return function(r){return Re(n,r,t)}});function ff(n,t,r){var e=Ca(t),u=be(t,e);null!=r||na(t)&&(u.length||!e.length)||(r=t,t=n,n=this,u=be(t,Ca(t)));var i=!(na(r)&&\"chain\"in r&&!r.chain),o=Yo(n);return wt(u,function(r){var e=t[r];n[r]=e,o&&(n.prototype[r]=function(){var t=this.__chain__;if(i||t){var r=n(this.__wrapped__),u=r.__actions__=Ou(this.__actions__);return u.push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,Ot([this.value()],arguments))})}),n}function cf(){}var sf=$u(Ut),lf=$u(mt),hf=$u(It);function pf(n){return di(n)?Tt(Li(n)):function(n){return function(t){return me(t,n)}}(n)}var vf=Fu(),_f=Fu(!0);function gf(){return[]}function df(){return!1}var yf,wf=Pu(function(n,t){return n+t},0),bf=Zu(\"ceil\"),mf=Pu(function(n,t){return n/t},1),jf=Zu(\"floor\"),xf=Pu(function(n,t){return n*t},1),Af=Zu(\"round\"),Uf=Pu(function(n,t){return n-t},0);return Dr.after=function(n,t){if(\"function\"!=typeof t)throw new Rn(u);return n=va(n),function(){if(--n<1)return t.apply(this,arguments)}},Dr.ary=ko,Dr.assign=wa,Dr.assignIn=ba,Dr.assignInWith=ma,Dr.assignWith=ja,Dr.at=xa,Dr.before=Ro,Dr.bind=Io,Dr.bindAll=Xa,Dr.bindKey=So,Dr.castArray=function(){if(!arguments.length)return[];var n=arguments[0];return qo(n)?n:[n]},Dr.chain=lo,Dr.chunk=function(n,t,r){t=(r?gi(n,t,r):t===e)?1:gr(va(t),0);var u=null==n?0:n.length;if(!u||t<1)return[];for(var i=0,o=0,a=en(cr(u/t));i<u;)a[o++]=nu(n,i,i+=t);return a},Dr.compact=function(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){var i=n[t];i&&(u[e++]=i)}return u},Dr.concat=function(){var n=arguments.length;if(!n)return[];for(var t=en(n-1),r=arguments[0],e=n;e--;)t[e-1]=arguments[e];return Ot(qo(r)?Ou(r):[r],_e(t,1))},Dr.cond=function(n){var t=null==n?0:n.length,r=ii();return n=t?Ut(n,function(n){if(\"function\"!=typeof n[1])throw new Rn(u);return[r(n[0]),n[1]]}):[],Ke(function(r){for(var e=-1;++e<t;){var u=n[e];if(dt(u[0],this,r))return dt(u[1],this,r)}})},Dr.conforms=function(n){return function(n){var t=Ca(n);return function(r){return ae(r,n,t)}}(oe(n,1))},Dr.constant=nf,Dr.countBy=vo,Dr.create=function(n,t){var r=Pr(n);return null==t?r:re(r,t)},Dr.curry=function n(t,r,u){var i=Gu(t,8,e,e,e,e,e,r=u?e:r);return i.placeholder=n.placeholder,i},Dr.curryRight=function n(t,r,u){var i=Gu(t,16,e,e,e,e,e,r=u?e:r);return i.placeholder=n.placeholder,i},Dr.debounce=Co,Dr.defaults=Aa,Dr.defaultsDeep=Ua,Dr.defer=Eo,Dr.delay=zo,Dr.difference=Pi,Dr.differenceBy=$i,Dr.differenceWith=Mi,Dr.drop=function(n,t,r){var u=null==n?0:n.length;return u?nu(n,(t=r||t===e?1:va(t))<0?0:t,u):[]},Dr.dropRight=function(n,t,r){var u=null==n?0:n.length;return u?nu(n,0,(t=u-(t=r||t===e?1:va(t)))<0?0:t):[]},Dr.dropRightWhile=function(n,t){return n&&n.length?su(n,ii(t,3),!0,!0):[]},Dr.dropWhile=function(n,t){return n&&n.length?su(n,ii(t,3),!0):[]},Dr.fill=function(n,t,r,u){var i=null==n?0:n.length;return i?(r&&\"number\"!=typeof r&&gi(n,t,r)&&(r=0,u=i),function(n,t,r,u){var i=n.length;for((r=va(r))<0&&(r=-r>i?0:i+r),(u=u===e||u>i?i:va(u))<0&&(u+=i),u=r>u?0:_a(u);r<u;)n[r++]=t;return n}(n,t,r,u)):[]},Dr.filter=function(n,t){return(qo(n)?jt:ve)(n,ii(t,3))},Dr.flatMap=function(n,t){return _e(xo(n,t),1)},Dr.flatMapDeep=function(n,t){return _e(xo(n,t),c)},Dr.flatMapDepth=function(n,t,r){return r=r===e?1:va(r),_e(xo(n,t),r)},Dr.flatten=qi,Dr.flattenDeep=function(n){return null!=n&&n.length?_e(n,c):[]},Dr.flattenDepth=function(n,t){return null!=n&&n.length?_e(n,t=t===e?1:va(t)):[]},Dr.flip=function(n){return Gu(n,512)},Dr.flow=tf,Dr.flowRight=rf,Dr.fromPairs=function(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e},Dr.functions=function(n){return null==n?[]:be(n,Ca(n))},Dr.functionsIn=function(n){return null==n?[]:be(n,Ea(n))},Dr.groupBy=bo,Dr.initial=function(n){return null!=n&&n.length?nu(n,0,-1):[]},Dr.intersection=Ji,Dr.intersectionBy=Ki,Dr.intersectionWith=Gi,Dr.invert=Ra,Dr.invertBy=Ia,Dr.invokeMap=mo,Dr.iteratee=uf,Dr.keyBy=jo,Dr.keys=Ca,Dr.keysIn=Ea,Dr.map=xo,Dr.mapKeys=function(n,t){var r={};return t=ii(t,3),ye(n,function(n,e,u){ee(r,t(n,e,u),n)}),r},Dr.mapValues=function(n,t){var r={};return t=ii(t,3),ye(n,function(n,e,u){ee(r,e,t(n,e,u))}),r},Dr.matches=function(n){return Te(oe(n,1))},Dr.matchesProperty=function(n,t){return De(n,oe(t,1))},Dr.memoize=Bo,Dr.merge=za,Dr.mergeWith=Ba,Dr.method=of,Dr.methodOf=af,Dr.mixin=ff,Dr.negate=Wo,Dr.nthArg=function(n){return n=va(n),Ke(function(t){return $e(t,n)})},Dr.omit=Wa,Dr.omitBy=function(n,t){return Ta(n,Wo(ii(t)))},Dr.once=function(n){return Ro(2,n)},Dr.orderBy=function(n,t,r,u){return null==n?[]:(qo(t)||(t=null==t?[]:[t]),qo(r=u?e:r)||(r=null==r?[]:[r]),Me(n,t,r))},Dr.over=sf,Dr.overArgs=Lo,Dr.overEvery=lf,Dr.overSome=hf,Dr.partial=To,Dr.partialRight=Do,Dr.partition=Ao,Dr.pick=La,Dr.pickBy=Ta,Dr.property=pf,Dr.propertyOf=function(n){return function(t){return null==n?e:me(n,t)}},Dr.pull=Hi,Dr.pullAll=Yi,Dr.pullAllBy=function(n,t,r){return n&&n.length&&t&&t.length?Ne(n,t,ii(r,2)):n},Dr.pullAllWith=function(n,t,r){return n&&n.length&&t&&t.length?Ne(n,t,e,r):n},Dr.pullAt=Qi,Dr.range=vf,Dr.rangeRight=_f,Dr.rearg=Po,Dr.reject=function(n,t){return(qo(n)?jt:ve)(n,Wo(ii(t,3)))},Dr.remove=function(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=ii(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),u.push(e))}return qe(n,u),r},Dr.rest=function(n,t){if(\"function\"!=typeof n)throw new Rn(u);return Ke(n,t=t===e?t:va(t))},Dr.reverse=Xi,Dr.sampleSize=function(n,t,r){return t=(r?gi(n,t,r):t===e)?1:va(t),(qo(n)?Hr:Ve)(n,t)},Dr.set=function(n,t,r){return null==n?n:He(n,t,r)},Dr.setWith=function(n,t,r,u){return u=\"function\"==typeof u?u:e,null==n?n:He(n,t,r,u)},Dr.shuffle=function(n){return(qo(n)?Yr:Xe)(n)},Dr.slice=function(n,t,r){var u=null==n?0:n.length;return u?(r&&\"number\"!=typeof r&&gi(n,t,r)?(t=0,r=u):(t=null==t?0:va(t),r=r===e?u:va(r)),nu(n,t,r)):[]},Dr.sortBy=Uo,Dr.sortedUniq=function(n){return n&&n.length?uu(n):[]},Dr.sortedUniqBy=function(n,t){return n&&n.length?uu(n,ii(t,2)):[]},Dr.split=function(n,t,r){return r&&\"number\"!=typeof r&&gi(n,t,r)&&(t=r=e),(r=r===e?h:r>>>0)?(n=ya(n))&&(\"string\"==typeof t||null!=t&&!ia(t))&&!(t=ou(t))&&Qt(n)?yu(ir(n),0,r):n.split(t,r):[]},Dr.spread=function(n,t){if(\"function\"!=typeof n)throw new Rn(u);return t=null==t?0:gr(va(t),0),Ke(function(r){var e=r[t],u=yu(r,0,t);return e&&Ot(u,e),dt(n,this,u)})},Dr.tail=function(n){var t=null==n?0:n.length;return t?nu(n,1,t):[]},Dr.take=function(n,t,r){return n&&n.length?nu(n,0,(t=r||t===e?1:va(t))<0?0:t):[]},Dr.takeRight=function(n,t,r){var u=null==n?0:n.length;return u?nu(n,(t=u-(t=r||t===e?1:va(t)))<0?0:t,u):[]},Dr.takeRightWhile=function(n,t){return n&&n.length?su(n,ii(t,3),!1,!0):[]},Dr.takeWhile=function(n,t){return n&&n.length?su(n,ii(t,3)):[]},Dr.tap=function(n,t){return t(n),n},Dr.throttle=function(n,t,r){var e=!0,i=!0;if(\"function\"!=typeof n)throw new Rn(u);return na(r)&&(e=\"leading\"in r?!!r.leading:e,i=\"trailing\"in r?!!r.trailing:i),Co(n,t,{leading:e,maxWait:t,trailing:i})},Dr.thru=ho,Dr.toArray=ha,Dr.toPairs=Da,Dr.toPairsIn=Pa,Dr.toPath=function(n){return qo(n)?Ut(n,Li):fa(n)?[n]:Ou(Wi(ya(n)))},Dr.toPlainObject=da,Dr.transform=function(n,t,r){var e=qo(n),u=e||Go(n)||ca(n);if(t=ii(t,4),null==r){var i=n&&n.constructor;r=u?e?new i:[]:na(n)&&Yo(i)?Pr(Jn(n)):{}}return(u?wt:ye)(n,function(n,e,u){return t(r,n,e,u)}),r},Dr.unary=function(n){return ko(n,1)},Dr.union=no,Dr.unionBy=to,Dr.unionWith=ro,Dr.uniq=function(n){return n&&n.length?au(n):[]},Dr.uniqBy=function(n,t){return n&&n.length?au(n,ii(t,2)):[]},Dr.uniqWith=function(n,t){return t=\"function\"==typeof t?t:e,n&&n.length?au(n,e,t):[]},Dr.unset=function(n,t){return null==n||fu(n,t)},Dr.unzip=eo,Dr.unzipWith=uo,Dr.update=function(n,t,r){return null==n?n:cu(n,t,_u(r))},Dr.updateWith=function(n,t,r,u){return u=\"function\"==typeof u?u:e,null==n?n:cu(n,t,_u(r),u)},Dr.values=$a,Dr.valuesIn=function(n){return null==n?[]:qt(n,Ea(n))},Dr.without=io,Dr.words=Ya,Dr.wrap=function(n,t){return To(_u(t),n)},Dr.xor=oo,Dr.xorBy=ao,Dr.xorWith=fo,Dr.zip=co,Dr.zipObject=function(n,t){return pu(n||[],t||[],Xr)},Dr.zipObjectDeep=function(n,t){return pu(n||[],t||[],He)},Dr.zipWith=so,Dr.entries=Da,Dr.entriesIn=Pa,Dr.extend=ba,Dr.extendWith=ma,ff(Dr,Dr),Dr.add=wf,Dr.attempt=Qa,Dr.camelCase=Ma,Dr.capitalize=Fa,Dr.ceil=bf,Dr.clamp=function(n,t,r){return r===e&&(r=t,t=e),r!==e&&(r=(r=ga(r))==r?r:0),t!==e&&(t=(t=ga(t))==t?t:0),ie(ga(n),t,r)},Dr.clone=function(n){return oe(n,4)},Dr.cloneDeep=function(n){return oe(n,5)},Dr.cloneDeepWith=function(n,t){return oe(n,5,t=\"function\"==typeof t?t:e)},Dr.cloneWith=function(n,t){return oe(n,4,t=\"function\"==typeof t?t:e)},Dr.conformsTo=function(n,t){return null==t||ae(n,t,Ca(t))},Dr.deburr=Na,Dr.defaultTo=function(n,t){return null==n||n!=n?t:n},Dr.divide=mf,Dr.endsWith=function(n,t,r){n=ya(n),t=ou(t);var u=n.length,i=r=r===e?u:ie(va(r),0,u);return(r-=t.length)>=0&&n.slice(r,i)==t},Dr.eq=$o,Dr.escape=function(n){return(n=ya(n))&&K.test(n)?n.replace(Z,Ht):n},Dr.escapeRegExp=function(n){return(n=ya(n))&&tn.test(n)?n.replace(nn,\"\\\\$&\"):n},Dr.every=function(n,t,r){var u=qo(n)?mt:he;return r&&gi(n,t,r)&&(t=e),u(n,ii(t,3))},Dr.find=_o,Dr.findIndex=Fi,Dr.findKey=function(n,t){return Ct(n,ii(t,3),ye)},Dr.findLast=go,Dr.findLastIndex=Ni,Dr.findLastKey=function(n,t){return Ct(n,ii(t,3),we)},Dr.floor=jf,Dr.forEach=yo,Dr.forEachRight=wo,Dr.forIn=function(n,t){return null==n?n:ge(n,ii(t,3),Ea)},Dr.forInRight=function(n,t){return null==n?n:de(n,ii(t,3),Ea)},Dr.forOwn=function(n,t){return n&&ye(n,ii(t,3))},Dr.forOwnRight=function(n,t){return n&&we(n,ii(t,3))},Dr.get=Oa,Dr.gt=Mo,Dr.gte=Fo,Dr.has=function(n,t){return null!=n&&hi(n,t,Ue)},Dr.hasIn=ka,Dr.head=Zi,Dr.identity=ef,Dr.includes=function(n,t,r,e){n=Jo(n)?n:$a(n),r=r&&!e?va(r):0;var u=n.length;return r<0&&(r=gr(u+r,0)),aa(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&zt(n,t,r)>-1},Dr.indexOf=function(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:va(r);return u<0&&(u=gr(e+u,0)),zt(n,t,u)},Dr.inRange=function(n,t,r){return t=pa(t),r===e?(r=t,t=0):r=pa(r),function(n,t,r){return n>=dr(t,r)&&n<gr(t,r)}(n=ga(n),t,r)},Dr.invoke=Sa,Dr.isArguments=No,Dr.isArray=qo,Dr.isArrayBuffer=Zo,Dr.isArrayLike=Jo,Dr.isArrayLikeObject=Ko,Dr.isBoolean=function(n){return!0===n||!1===n||ta(n)&&xe(n)==g},Dr.isBuffer=Go,Dr.isDate=Vo,Dr.isElement=function(n){return ta(n)&&1===n.nodeType&&!ua(n)},Dr.isEmpty=function(n){if(null==n)return!0;if(Jo(n)&&(qo(n)||\"string\"==typeof n||\"function\"==typeof n.splice||Go(n)||ca(n)||No(n)))return!n.length;var t=li(n);if(t==m||t==O)return!n.size;if(bi(n))return!Be(n).length;for(var r in n)if(zn.call(n,r))return!1;return!0},Dr.isEqual=function(n,t){return Se(n,t)},Dr.isEqualWith=function(n,t,r){var u=(r=\"function\"==typeof r?r:e)?r(n,t):e;return u===e?Se(n,t,e,r):!!u},Dr.isError=Ho,Dr.isFinite=function(n){return\"number\"==typeof n&&pr(n)},Dr.isFunction=Yo,Dr.isInteger=Qo,Dr.isLength=Xo,Dr.isMap=ra,Dr.isMatch=function(n,t){return n===t||Ce(n,t,ai(t))},Dr.isMatchWith=function(n,t,r){return r=\"function\"==typeof r?r:e,Ce(n,t,ai(t),r)},Dr.isNaN=function(n){return ea(n)&&n!=+n},Dr.isNative=function(n){if(wi(n))throw new jn(\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\");return Ee(n)},Dr.isNil=function(n){return null==n},Dr.isNull=function(n){return null===n},Dr.isNumber=ea,Dr.isObject=na,Dr.isObjectLike=ta,Dr.isPlainObject=ua,Dr.isRegExp=ia,Dr.isSafeInteger=function(n){return Qo(n)&&n>=-9007199254740991&&n<=s},Dr.isSet=oa,Dr.isString=aa,Dr.isSymbol=fa,Dr.isTypedArray=ca,Dr.isUndefined=function(n){return n===e},Dr.isWeakMap=function(n){return ta(n)&&li(n)==I},Dr.isWeakSet=function(n){return ta(n)&&\"[object WeakSet]\"==xe(n)},Dr.join=function(n,t){return null==n?\"\":vr.call(n,t)},Dr.kebabCase=qa,Dr.last=Vi,Dr.lastIndexOf=function(n,t,r){var u=null==n?0:n.length;if(!u)return-1;var i=u;return r!==e&&(i=(i=va(r))<0?gr(u+i,0):dr(i,u-1)),t==t?function(n,t,r){for(var e=r+1;e--;)if(n[e]===t)return e;return e}(n,t,i):Et(n,Wt,i,!0)},Dr.lowerCase=Za,Dr.lowerFirst=Ja,Dr.lt=sa,Dr.lte=la,Dr.max=function(n){return n&&n.length?pe(n,ef,Ae):e},Dr.maxBy=function(n,t){return n&&n.length?pe(n,ii(t,2),Ae):e},Dr.mean=function(n){return Lt(n,ef)},Dr.meanBy=function(n,t){return Lt(n,ii(t,2))},Dr.min=function(n){return n&&n.length?pe(n,ef,We):e},Dr.minBy=function(n,t){return n&&n.length?pe(n,ii(t,2),We):e},Dr.stubArray=gf,Dr.stubFalse=df,Dr.stubObject=function(){return{}},Dr.stubString=function(){return\"\"},Dr.stubTrue=function(){return!0},Dr.multiply=xf,Dr.nth=function(n,t){return n&&n.length?$e(n,va(t)):e},Dr.noConflict=function(){return it._===this&&(it._=Dn),this},Dr.noop=cf,Dr.now=Oo,Dr.pad=function(n,t,r){n=ya(n);var e=(t=va(t))?ur(n):0;if(!t||e>=t)return n;var u=(t-e)/2;return Mu(sr(u),r)+n+Mu(cr(u),r)},Dr.padEnd=function(n,t,r){n=ya(n);var e=(t=va(t))?ur(n):0;return t&&e<t?n+Mu(t-e,r):n},Dr.padStart=function(n,t,r){n=ya(n);var e=(t=va(t))?ur(n):0;return t&&e<t?Mu(t-e,r)+n:n},Dr.parseInt=function(n,t,r){return r||null==t?t=0:t&&(t=+t),wr(ya(n).replace(rn,\"\"),t||0)},Dr.random=function(n,t,r){if(r&&\"boolean\"!=typeof r&&gi(n,t,r)&&(t=r=e),r===e&&(\"boolean\"==typeof t?(r=t,t=e):\"boolean\"==typeof n&&(r=n,n=e)),n===e&&t===e?(n=0,t=1):(n=pa(n),t===e?(t=n,n=0):t=pa(t)),n>t){var u=n;n=t,t=u}if(r||n%1||t%1){var i=br();return dr(n+i*(t-n+tt(\"1e-\"+((i+\"\").length-1))),t)}return Ze(n,t)},Dr.reduce=function(n,t,r){var e=qo(n)?kt:Pt,u=arguments.length<3;return e(n,ii(t,4),r,u,se)},Dr.reduceRight=function(n,t,r){var e=qo(n)?Rt:Pt,u=arguments.length<3;return e(n,ii(t,4),r,u,le)},Dr.repeat=function(n,t,r){return t=(r?gi(n,t,r):t===e)?1:va(t),Je(ya(n),t)},Dr.replace=function(){var n=arguments,t=ya(n[0]);return n.length<3?t:t.replace(n[1],n[2])},Dr.result=function(n,t,r){var u=-1,i=(t=gu(t,n)).length;for(i||(i=1,n=e);++u<i;){var o=null==n?e:n[Li(t[u])];o===e&&(u=i,o=r),n=Yo(o)?o.call(n):o}return n},Dr.round=Af,Dr.runInContext=n,Dr.sample=function(n){return(qo(n)?Vr:Ge)(n)},Dr.size=function(n){if(null==n)return 0;if(Jo(n))return aa(n)?ur(n):n.length;var t=li(n);return t==m||t==O?n.size:Be(n).length},Dr.snakeCase=Ka,Dr.some=function(n,t,r){var u=qo(n)?It:tu;return r&&gi(n,t,r)&&(t=e),u(n,ii(t,3))},Dr.sortedIndex=function(n,t){return ru(n,t)},Dr.sortedIndexBy=function(n,t,r){return eu(n,t,ii(r,2))},Dr.sortedIndexOf=function(n,t){var r=null==n?0:n.length;if(r){var e=ru(n,t);if(e<r&&$o(n[e],t))return e}return-1},Dr.sortedLastIndex=function(n,t){return ru(n,t,!0)},Dr.sortedLastIndexBy=function(n,t,r){return eu(n,t,ii(r,2),!0)},Dr.sortedLastIndexOf=function(n,t){if(null!=n&&n.length){var r=ru(n,t,!0)-1;if($o(n[r],t))return r}return-1},Dr.startCase=Ga,Dr.startsWith=function(n,t,r){return n=ya(n),r=null==r?0:ie(va(r),0,n.length),t=ou(t),n.slice(r,r+t.length)==t},Dr.subtract=Uf,Dr.sum=function(n){return n&&n.length?$t(n,ef):0},Dr.sumBy=function(n,t){return n&&n.length?$t(n,ii(t,2)):0},Dr.template=function(n,t,r){var u=Dr.templateSettings;r&&gi(n,t,r)&&(t=e),n=ya(n),t=ma({},t,u,Vu);var i,o,a=ma({},t.imports,u.imports,Vu),f=Ca(a),c=qt(a,f),s=0,l=t.interpolate||wn,h=\"__p += '\",p=On((t.escape||wn).source+\"|\"+l.source+\"|\"+(l===H?ln:wn).source+\"|\"+(t.evaluate||wn).source+\"|$\",\"g\"),v=\"//# sourceURL=\"+(zn.call(t,\"sourceURL\")?(t.sourceURL+\"\").replace(/\\s/g,\" \"):\"lodash.templateSources[\"+ ++Yn+\"]\")+\"\\n\";n.replace(p,function(t,r,e,u,a,f){return e||(e=u),h+=n.slice(s,f).replace(bn,Yt),r&&(i=!0,h+=\"' +\\n__e(\"+r+\") +\\n'\"),a&&(o=!0,h+=\"';\\n\"+a+\";\\n__p += '\"),e&&(h+=\"' +\\n((__t = (\"+e+\")) == null ? '' : __t) +\\n'\"),s=f+t.length,t}),h+=\"';\\n\";var _=zn.call(t,\"variable\")&&t.variable;if(_){if(cn.test(_))throw new jn(\"Invalid `variable` option passed into `_.template`\")}else h=\"with (obj) {\\n\"+h+\"\\n}\\n\";h=(o?h.replace(M,\"\"):h).replace(F,\"$1\").replace(N,\"$1;\"),h=\"function(\"+(_||\"obj\")+\") {\\n\"+(_?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(i?\", __e = _.escape\":\"\")+(o?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+h+\"return __p\\n}\";var g=Qa(function(){return xn(f,v+\"return \"+h).apply(e,c)});if(g.source=h,Ho(g))throw g;return g},Dr.times=function(n,t){if((n=va(n))<1||n>s)return[];var r=h,e=dr(n,h);t=ii(t),n-=h;for(var u=Mt(e,t);++r<n;)t(r);return u},Dr.toFinite=pa,Dr.toInteger=va,Dr.toLength=_a,Dr.toLower=function(n){return ya(n).toLowerCase()},Dr.toNumber=ga,Dr.toSafeInteger=function(n){return n?ie(va(n),-9007199254740991,s):0===n?n:0},Dr.toString=ya,Dr.toUpper=function(n){return ya(n).toUpperCase()},Dr.trim=function(n,t,r){if((n=ya(n))&&(r||t===e))return Ft(n);if(!n||!(t=ou(t)))return n;var u=ir(n),i=ir(t);return yu(u,Jt(u,i),Kt(u,i)+1).join(\"\")},Dr.trimEnd=function(n,t,r){if((n=ya(n))&&(r||t===e))return n.slice(0,or(n)+1);if(!n||!(t=ou(t)))return n;var u=ir(n);return yu(u,0,Kt(u,ir(t))+1).join(\"\")},Dr.trimStart=function(n,t,r){if((n=ya(n))&&(r||t===e))return n.replace(rn,\"\");if(!n||!(t=ou(t)))return n;var u=ir(n);return yu(u,Jt(u,ir(t))).join(\"\")},Dr.truncate=function(n,t){var r=30,u=\"...\";if(na(t)){var i=\"separator\"in t?t.separator:i;r=\"length\"in t?va(t.length):r,u=\"omission\"in t?ou(t.omission):u}var o=(n=ya(n)).length;if(Qt(n)){var a=ir(n);o=a.length}if(r>=o)return n;var f=r-ur(u);if(f<1)return u;var c=a?yu(a,0,f).join(\"\"):n.slice(0,f);if(i===e)return c+u;if(a&&(f+=c.length-f),ia(i)){if(n.slice(f).search(i)){var s,l=c;for(i.global||(i=On(i.source,ya(hn.exec(i))+\"g\")),i.lastIndex=0;s=i.exec(l);)var h=s.index;c=c.slice(0,h===e?f:h)}}else if(n.indexOf(ou(i),f)!=f){var p=c.lastIndexOf(i);p>-1&&(c=c.slice(0,p))}return c+u},Dr.unescape=function(n){return(n=ya(n))&&J.test(n)?n.replace(q,ar):n},Dr.uniqueId=function(n){var t=++Bn;return ya(n)+t},Dr.upperCase=Va,Dr.upperFirst=Ha,Dr.each=yo,Dr.eachRight=wo,Dr.first=Zi,ff(Dr,(yf={},ye(Dr,function(n,t){zn.call(Dr.prototype,t)||(yf[t]=n)}),yf),{chain:!1}),Dr.VERSION=\"4.17.21\",wt([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],function(n){Dr[n].placeholder=Dr}),wt([\"drop\",\"take\"],function(n,t){Fr.prototype[n]=function(r){r=r===e?1:gr(va(r),0);var u=this.__filtered__&&!t?new Fr(this):this.clone();return u.__filtered__?u.__takeCount__=dr(r,u.__takeCount__):u.__views__.push({size:dr(r,h),type:n+(u.__dir__<0?\"Right\":\"\")}),u},Fr.prototype[n+\"Right\"]=function(t){return this.reverse()[n](t).reverse()}}),wt([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=1==r||3==r;Fr.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:ii(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),wt([\"head\",\"last\"],function(n,t){var r=\"take\"+(t?\"Right\":\"\");Fr.prototype[n]=function(){return this[r](1).value()[0]}}),wt([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");Fr.prototype[n]=function(){return this.__filtered__?new Fr(this):this[r](1)}}),Fr.prototype.compact=function(){return this.filter(ef)},Fr.prototype.find=function(n){return this.filter(n).head()},Fr.prototype.findLast=function(n){return this.reverse().find(n)},Fr.prototype.invokeMap=Ke(function(n,t){return\"function\"==typeof n?new Fr(this):this.map(function(r){return Re(r,n,t)})}),Fr.prototype.reject=function(n){return this.filter(Wo(ii(n)))},Fr.prototype.slice=function(n,t){n=va(n);var r=this;return r.__filtered__&&(n>0||t<0)?new Fr(r):(n<0?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==e&&(r=(t=va(t))<0?r.dropRight(-t):r.take(t-n)),r)},Fr.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Fr.prototype.toArray=function(){return this.take(h)},ye(Fr.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),u=/^(?:head|last)$/.test(t),i=Dr[u?\"take\"+(\"last\"==t?\"Right\":\"\"):t],o=u||/^find/.test(t);i&&(Dr.prototype[t]=function(){var t=this.__wrapped__,a=u?[1]:arguments,f=t instanceof Fr,c=a[0],s=f||qo(t),l=function(n){var t=i.apply(Dr,Ot([n],a));return u&&h?t[0]:t};s&&r&&\"function\"==typeof c&&1!=c.length&&(f=s=!1);var h=this.__chain__,p=!!this.__actions__.length,v=o&&!h,_=f&&!p;if(!o&&s){t=_?t:new Fr(this);var g=n.apply(t,a);return g.__actions__.push({func:ho,args:[l],thisArg:e}),new Mr(g,h)}return v&&_?n.apply(this,a):(g=this.thru(l),v?u?g.value()[0]:g.value():g)})}),wt([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var t=In[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);Dr.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(qo(u)?u:[],n)}return this[r](function(r){return t.apply(qo(r)?r:[],n)})}}),ye(Fr.prototype,function(n,t){var r=Dr[t];if(r){var e=r.name+\"\";zn.call(Ir,e)||(Ir[e]=[]),Ir[e].push({name:t,func:r})}}),Ir[Tu(e,2).name]=[{name:\"wrapper\",func:e}],Fr.prototype.clone=function(){var n=new Fr(this.__wrapped__);return n.__actions__=Ou(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Ou(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Ou(this.__views__),n},Fr.prototype.reverse=function(){if(this.__filtered__){var n=new Fr(this);n.__dir__=-1,n.__filtered__=!0}else(n=this.clone()).__dir__*=-1;return n},Fr.prototype.value=function(){var n=this.__wrapped__.value(),t=this.__dir__,r=qo(n),e=t<0,u=r?n.length:0,i=function(n,t,r){for(var e=-1,u=r.length;++e<u;){var i=r[e],o=i.size;switch(i.type){case\"drop\":n+=o;break;case\"dropRight\":t-=o;break;case\"take\":t=dr(t,n+o);break;case\"takeRight\":n=gr(n,t-o)}}return{start:n,end:t}}(0,u,this.__views__),o=i.start,a=i.end,f=a-o,c=e?a:o-1,s=this.__iteratees__,l=s.length,h=0,p=dr(f,this.__takeCount__);if(!r||!e&&u==f&&p==f)return lu(n,this.__actions__);var v=[];n:for(;f--&&h<p;){for(var _=-1,g=n[c+=t];++_<l;){var d=s[_],y=d.type,w=(0,d.iteratee)(g);if(2==y)g=w;else if(!w){if(1==y)continue n;break n}}v[h++]=g}return v},Dr.prototype.at=po,Dr.prototype.chain=function(){return lo(this)},Dr.prototype.commit=function(){return new Mr(this.value(),this.__chain__)},Dr.prototype.next=function(){this.__values__===e&&(this.__values__=ha(this.value()));var n=this.__index__>=this.__values__.length;return{done:n,value:n?e:this.__values__[this.__index__++]}},Dr.prototype.plant=function(n){for(var t,r=this;r instanceof $r;){var u=Di(r);u.__index__=0,u.__values__=e,t?i.__wrapped__=u:t=u;var i=u;r=r.__wrapped__}return i.__wrapped__=n,t},Dr.prototype.reverse=function(){var n=this.__wrapped__;if(n instanceof Fr){var t=n;return this.__actions__.length&&(t=new Fr(this)),(t=t.reverse()).__actions__.push({func:ho,args:[Xi],thisArg:e}),new Mr(t,this.__chain__)}return this.thru(Xi)},Dr.prototype.toJSON=Dr.prototype.valueOf=Dr.prototype.value=function(){return lu(this.__wrapped__,this.__actions__)},Dr.prototype.first=Dr.prototype.head,ot&&(Dr.prototype[ot]=function(){return this}),Dr}();at?((at.exports=fr)._=fr,ot._=fr):it._=fr}).call(r)}(t={exports:{}},t.exports),t.exports);class u{constructor(n){this.M=null,this.P=null,this.T=n}type(n){return new u(n)}payload(){return new u(this.T)}message(n){return this.T===n.type}build(n){return Object.assign({type:this.T},n)}}const i=new u(\"\"),o=i.type(\"gnop.join\").payload(),a=i.type(\"gnop.rejoin\").payload(),f=i.type(\"gnop.joined\").payload(),c=i.type(\"gnop.disconnected\").payload(),s=i.type(\"gnop.playerUpdate\").payload(),l=i.type(\"gnop.ballUpdate\").payload();i.type(\"gnop.point\").payload();const h=i.type(\"session.created\").payload();i.type(\"session.closed\").payload();const p=()=>{const n={};return n.promise=new Promise((t,r)=>{n.resolve=t,n.reject=r}),n},v=[\"Air Freshener\",\"Bath\",\"Bathmat\",\"Bidet\",\"Bleach\",\"Body Wash\",\"Bubble Bath\",\"Conditioner\",\"Faucet\",\"Floss\",\"Loofah\",\"Lotion\",\"Plunger\",\"Razor\",\"Rubber Ducky\",\"Shampoo\",\"Sink\",\"Soap\",\"Toilet Paper\",\"Toothbrush\",\"Towel\"],_=()=>e.sample(v)||v[0],g={WsClient:class{constructor(t){this.options={host:\"ws://sangervasi.net\",verbose:!1},this.name=_(),this.state={state:\"init\"},this.promises={connect:p(),join:p()},this.playerUpdates=[],this.ballUpdates=[],this.handleMessage=n=>{const t=(n=>{let t,r=\"\";try{t=JSON.parse(n.toString())}catch(n){r=n.message}return\"\"!==r?{type:\"error\",sessionUuid:\"\",payload:{error:r}}:\"object\"==typeof(e=t)&&null!==e&&\"type\"in e?t:{type:\"error\",sessionUuid:\"\",payload:{error:\"Invalid message structure\"}};var e})(n.data);return h.message(t)?this.handleCreated(t):f.message(t)?this.handleJoined(t):c.message(t)?this.handleDisconnected(t):s.message(t)?this.handlePlayerUpdate(t):l.message(t)?this.handleBallUpdate(t):void console.warn(\"Unhandled message:\",t)},this.handleCreated=t=>{\"creating\"===this.state.state?(this.info(\"Created\",t.sessionUuid),this.state=n({},this.state,{state:\"created\",sessionUuid:t.sessionUuid}),this.promises.connect.resolve()):console.warn(\"Received created message while in state:\",this.state.state)},this.handleJoined=t=>{if(\"joining\"!==this.state.state)return void console.warn(\"Received joined message while in state:\",this.state.state);const{self:r,opponent:e}=this.findPlayers(t.payload);this.state=n({},this.state,{self:r,opponent:e}),r&&e?(this.info(\"Joined\",t),this.state=n({},this.state,{state:\"joined\",self:r,opponent:e}),this.promises.join.resolve()):console.warn(\"Partially joined\",t)},this.handleDisconnected=t=>{if(\"joined\"!==this.state.state)return void console.warn(\"Disconnected while not joined\");const{self:r,opponent:e}=this.findPlayers(t.payload);r&&e?this.state=n({},this.state,{self:r,opponent:e}):console.warn(\"Disconnected without self & opponent\")},this.handlePlayerUpdate=t=>{\"joined\"===this.state.state?(this.info(\"Received player update\",t.payload),this.state.opponent=t.payload.player,this.playerUpdates.push(n({receivedAt:Date.now()},t.payload))):console.warn(\"Received update message while in state:\",this.state.state)},this.handleBallUpdate=t=>{\"joined\"===this.state.state?(this.info(\"Received ball update\",t.payload),this.ballUpdates.push(n({receivedAt:Date.now()},t.payload))):console.warn(\"Received update message while in state:\",this.state.state)},this.handleOpen=()=>{this.info(\"Opened\")},this.handleClose=()=>{this.state={state:\"init\"},console.warn(\"Closed\")},this.handleError=()=>{this.state={state:\"init\"},console.error(\"Errored\")},Object.assign(this.options,t)}connect(){this.info(\"Connecting\");const n=new WebSocket(this.options.host);return this.state={state:\"creating\",ws:n},n.onopen=this.handleOpen,n.onclose=this.handleClose,n.onerror=this.handleError,n.addEventListener(\"message\",this.handleMessage),this.promises.connect.promise}isConnected(){return[\"created\",\"joined\",\"joining\"].includes(this.state.state)}isOpponentDisconnected(){return\"joined\"===this.state.state&&\"disconnected\"===this.state.opponent.state}findPlayers(n){const{sessionUuid:t}=this.state;return t?{self:n.find(n=>n.sessionUuid===t),opponent:n.find(n=>n.sessionUuid!==t)}:{}}join(t){if(\"created\"!==this.state.state)return void console.warn(\"Cannot join from state:\",this.state);t&&(this.name=t);const r=o.build({type:\"gnop.join\",sessionUuid:this.state.sessionUuid,payload:{name:this.name}});return this.info(\"Client joining:\",r),this.state=n({},this.state,{state:\"joining\"}),this.send(r),this.promises.join.promise}rejoin(t){if(\"created\"!==this.state.state)return void console.warn(\"Cannot join from state:\",this.state);const r=a.build({type:\"gnop.rejoin\",sessionUuid:this.state.sessionUuid,payload:{previousSessionUuid:t}});return this.info(\"Client joining:\",r),this.state=n({},this.state,{state:\"joining\"}),this.send(r),this.promises.join.promise}disconnect(){this.state.ws&&this.state.ws.close()}sendPlayerUpdate(n){if(\"joined\"!==this.state.state)return void console.warn(\"Cannot send player from state:\",this.state);this.state.self.hp=n.player.hp;const t=s.build({type:\"gnop.playerUpdate\",sessionUuid:this.state.sessionUuid,payload:{player:this.state.self,position:n.position}});this.send(t)}getPlayerUpdate(){return this.playerUpdates.shift()}sendBallUpdate(n){if(\"joined\"!==this.state.state)return void console.warn(\"Cannot send ball from state:\",this.state);const t=l.build({type:\"gnop.ballUpdate\",sessionUuid:this.state.sessionUuid,payload:{position:n}});this.send(t)}getBallUpdate(){return this.ballUpdates.shift()}send(n){this.state.ws?(this.info(\"Client sending message:\",n),this.state.ws.send(JSON.stringify(n))):console.warn(\"Cannot data without websocket:\",this.state)}info(...n){this.options.verbose&&console.info(...n)}},generateName:_};Object.assign(globalThis,{Gnop:g});\n//# sourceMappingURL=gnop.modern.js.map\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "connect",
      "functionType": "Action",
      "name": "connect",
      "private": false,
      "sentence": "connect",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nconst isPreview = runtimeScene.getGame().isPreview()\nconst host = isPreview ? 'ws://localhost:42992' : 'wss://sangervasi.net'\n\nGnop.client = new Gnop.WsClient({\n    host,\n    // verbose: isPreview,\n    verbose: false\n})\n\nconst connect = async () => {\n    const client = Gnop.client\n    \n    console.log('Connecting', client)\n    await client.connect()\n    console.log('Connected', client)\n} \n\nconnect()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "join",
      "functionType": "Action",
      "name": "join",
      "private": false,
      "sentence": "join",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nif (!Gnop.client) {\n    console.warn('Cannot join with no client')\n    return\n}\n\nGnop.client.join()\n\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "disconnect",
      "fullName": "disconnect",
      "functionType": "Action",
      "name": "disconnect",
      "private": false,
      "sentence": "disconnect",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nGnop.client?.disconnect()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "setName",
      "fullName": "setName",
      "functionType": "Action",
      "name": "setName",
      "private": false,
      "sentence": "setName _PARAM1_",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\nGnop.client.name = eventsFunctionContext.getArgument(\"Name\")\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [
        {
          "codeOnly": false,
          "defaultValue": "",
          "description": "",
          "longDescription": "",
          "name": "Name",
          "optional": false,
          "supplementaryInformation": "",
          "type": "string"
        }
      ],
      "objectGroups": []
    },
    {
      "description": "SelfName",
      "fullName": "SelfName",
      "functionType": "StringExpression",
      "name": "SelfName",
      "private": false,
      "sentence": "setName _PARAM1_",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop.client?.state?.self?.name || Gnop.client?.name || \"\"\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "OpponentName",
      "fullName": "OpponentName",
      "functionType": "StringExpression",
      "name": "OpponentName",
      "private": false,
      "sentence": "setName _PARAM1_",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop.client?.state?.opponent?.name || \"\"\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": true
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "Client State",
      "fullName": "State",
      "functionType": "StringExpression",
      "name": "State",
      "private": false,
      "sentence": "IsConnected",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    const client = Gnop.client\n    if (!client) {\n        return 'none'\n    }\n    return client.state.state\n})()\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "IsOpponentDisconnected",
      "functionType": "Condition",
      "name": "IsOpponentDisconnected",
      "private": false,
      "sentence": "IsOpponentDisconnected",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "eventsFunctionContext.returnValue = Gnop.client?.isOpponentDisconnected() || false\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "IsConnected",
      "functionType": "Condition",
      "name": "IsConnected",
      "private": false,
      "sentence": "IsConnected",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "eventsFunctionContext.returnValue = Gnop.client?.isConnected() || false\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "",
      "fullName": "IsJoined",
      "functionType": "Condition",
      "name": "IsJoined",
      "private": false,
      "sentence": "IsJoined",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnBoolean"
              },
              "parameters": [
                "False"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": false,
                "value": "StrEqual"
              },
              "parameters": [
                "srs_gnop::State()",
                "=",
                "\"joined\""
              ],
              "subInstructions": []
            }
          ],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnBoolean"
              },
              "parameters": [
                "True"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "OpponentUpdate as JSON",
      "fullName": "OpponentUpdate",
      "functionType": "StringExpression",
      "name": "OpponentUpdate",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "inverted": false,
                "value": "SetReturnString"
              },
              "parameters": [
                "VariableString(OpponentUpdateJSON)"
              ],
              "subInstructions": []
            }
          ],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "1 => Left paddle, 2 => Right Paddle, 0 => Not joined",
      "fullName": "Player",
      "functionType": "Expression",
      "name": "SelfNumber",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop?.client?.state?.self?.number || 0\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "1 => Left paddle, 2 => Right Paddle, 0 => Not joined",
      "fullName": "Player",
      "functionType": "Expression",
      "name": "OpponentNumber",
      "private": false,
      "sentence": "",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    return Gnop?.client?.state?.opponent?.number || 0\n})()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "Lost",
      "fullName": "Lost",
      "functionType": "Condition",
      "name": "Lost",
      "private": false,
      "sentence": "Lost",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    const self = Gnop.client?.state?.self\n    if (!self) {\n        return false\n    }\n    return self.hp === 0\n})()\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "Won",
      "fullName": "Won",
      "functionType": "Condition",
      "name": "Won",
      "private": false,
      "sentence": "Won",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": "const { Gnop } = globalThis\n\neventsFunctionContext.returnValue = (() => {\n    const opp = Gnop.client?.state?.opponent\n    if (!opp) {\n        return false\n    }\n    return opp.hp === 0\n})()\n",
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            }
          ]
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        }
      ],
      "parameters": [],
      "objectGroups": []
    },
    {
      "description": "GenerateName",
      "fullName": "GenerateName",
      "functionType": "StringExpression",
      "name": "GenName",
      "private": false,
      "sentence": "GenName",
      "events": [
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [],
          "events": []
        },
        {
          "disabled": false,
          "folded": false,
          "type": "BuiltinCommonInstructions::JsCode",
          "inlineCode": "const { Gnop } = globalThis\neventsFunctionContext.returnValue = Gnop.generateName()\n",
          "parameterObjects": "",
          "useStrict": true,
          "eventsSheetExpanded": false
        }
      ],
      "parameters": [],
      "objectGroups": []
    }
  ],
  "eventsBasedBehaviors": [
    {
      "description": "",
      "fullName": "",
      "name": "Paddle",
      "objectType": "",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "HP",
                    "=",
                    "11"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": [],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "LockX",
                    "=",
                    "Object.X()"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreX"
                  },
                  "parameters": [
                    "Object",
                    "=",
                    "Object.Variable(LockX)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPressingUp",
          "fullName": "IsPressingUp",
          "functionType": "Condition",
          "name": "IsPressingUp",
          "private": false,
          "sentence": "_PARAM0_ IsPressingUp",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "1"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "x"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "2"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "m"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "Up"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "w"
                      ],
                      "subInstructions": []
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPressingDown",
          "fullName": "IsPressingDown",
          "functionType": "Condition",
          "name": "IsPressingDown",
          "private": false,
          "sentence": "_PARAM0_ IsPressingDown ",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "1"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "z"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "2"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "n"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "SetReturnBoolean"
                      },
                      "parameters": [
                        "True"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "Down"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "KeyPressed"
                      },
                      "parameters": [
                        "",
                        "s"
                      ],
                      "subInstructions": []
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "IsPlayer",
          "fullName": "IsPlayer",
          "functionType": "Condition",
          "name": "IsPlayer",
          "private": false,
          "sentence": "_PARAM0_ IsPlayer _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  },
                  "parameters": [
                    "Object",
                    "Player",
                    "=",
                    "GetArgumentAsNumber(\"Number\")"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  },
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Number",
              "longDescription": "",
              "name": "Number",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleControls",
          "fullName": "handleControls",
          "functionType": "Action",
          "name": "handleControls",
          "private": false,
          "sentence": "_PARAM0_ handleControls",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Physics guards",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityX"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "0"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityY"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "clamp(-1000, Object.Physics2::LinearVelocityY(), 1000)"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Controls for Self",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "srs_gnop::Paddle::IsPlayer"
                      },
                      "parameters": [
                        "Object",
                        "Behavior",
                        "srs_gnop::SelfNumber()",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "ControlLength",
                            "=",
                            "300 * Object.Physics2::Density()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPressingDown"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::ApplyForce"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "0",
                            "Object.Variable(ControlLength)",
                            "Object.Physics2::MassCenterX()",
                            "Object.Physics2::MassCenterY()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPressingUp"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::ApplyForce"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "0",
                            "-1 * Object.Variable(ControlLength)",
                            "Object.Physics2::MassCenterX()",
                            "Object.Physics2::MassCenterY()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "folded": false,
                      "name": "Queue updates ",
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group",
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "VarObjetTxt"
                              },
                              "parameters": [
                                "Object",
                                "OutgoingUpdate.State",
                                "=",
                                "\"pending\""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "disabled": false,
                              "folded": false,
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "inverted": false,
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "Object",
                                    "OutgoingUpdate.X",
                                    "=",
                                    "Object.X()"
                                  ],
                                  "subInstructions": []
                                },
                                {
                                  "type": {
                                    "inverted": false,
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "Object",
                                    "OutgoingUpdate.Y",
                                    "=",
                                    "Object.Y()"
                                  ],
                                  "subInstructions": []
                                },
                                {
                                  "type": {
                                    "inverted": false,
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "Object",
                                    "OutgoingUpdate.DX",
                                    "=",
                                    "Object.Physics2::LinearVelocityX()"
                                  ],
                                  "subInstructions": []
                                },
                                {
                                  "type": {
                                    "inverted": false,
                                    "value": "ModVarObjet"
                                  },
                                  "parameters": [
                                    "Object",
                                    "OutgoingUpdate.DY",
                                    "=",
                                    "Object.Physics2::LinearVelocityY()"
                                  ],
                                  "subInstructions": []
                                }
                              ],
                              "events": []
                            }
                          ]
                        }
                      ],
                      "parameters": []
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Updates from Opponent",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "IncomingUpdate.State",
                        "=",
                        "\"pending\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "MettreY"
                          },
                          "parameters": [
                            "Object",
                            "=",
                            "Object.Variable(IncomingUpdate.Y)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::LinearVelocityY"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "=",
                            "Object.Variable(IncomingUpdate.DY)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjetTxt"
                          },
                          "parameters": [
                            "Object",
                            "IncomingUpdate.State",
                            "=",
                            "\"received\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Physics2",
              "longDescription": "",
              "name": "Physics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleHitZone",
          "fullName": "handleHitZone",
          "functionType": "Action",
          "name": "handleHitZone",
          "private": false,
          "sentence": "_PARAM0_ handleHitZone _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Object",
                        "HitZone",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "HitZone"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "HitZone",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreAutour"
                  },
                  "parameters": [
                    "HitZone",
                    "Object",
                    "0",
                    "0"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "HitZone",
              "longDescription": "",
              "name": "HitZone",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleButt",
          "fullName": "handleButt",
          "functionType": "Action",
          "name": "handleButt",
          "private": false,
          "sentence": "_PARAM0_ handleButt _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Object",
                        "Butt",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "Butt"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Butt",
                            "Angle",
                            "=",
                            "Butt.Angle()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Butt",
                            "OffsetX",
                            "=",
                            "Butt.X() - Object.X()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Butt",
                            "OffsetY",
                            "=",
                            "Butt.Y() - Object.Y()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "Butt",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreXY"
                  },
                  "parameters": [
                    "Butt",
                    "=",
                    "Object.X() + Butt.Variable(OffsetX)",
                    "=",
                    "Object.Y() + Butt.Variable(OffsetY)"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Butt",
              "longDescription": "",
              "name": "Butt",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleHP",
          "fullName": "handleHP",
          "functionType": "Action",
          "name": "handleHP",
          "private": false,
          "sentence": "_PARAM0_ handleHP _PARAM2_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "DepartScene"
                  },
                  "parameters": [
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Object",
                        "HP",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "Object",
                        "HP"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": true,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "HP",
                            "Angle",
                            "=",
                            "HP.Angle()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "HP",
                            "OffsetX",
                            "=",
                            "HP.X() - Object.X()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "HP",
                            "OffsetY",
                            "=",
                            "HP.Y() - Object.Y()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "HP",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "MettreAutour"
                  },
                  "parameters": [
                    "HP",
                    "Object",
                    "0",
                    "0"
                  ],
                  "subInstructions": []
                }
              ],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "TextObject::String"
                      },
                      "parameters": [
                        "HP",
                        "=",
                        "ToString(Object.Variable(HP))"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "HP",
              "longDescription": "",
              "name": "HP",
              "optional": false,
              "supplementaryInformation": "TextObject::Text",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "The network stuff",
          "fullName": "handleUpdates",
          "functionType": "Action",
          "name": "handleUpdates",
          "private": false,
          "sentence": "_PARAM0_ handleUpdates",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "srs_gnop::IsJoined"
                  },
                  "parameters": [
                    "",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": false,
                  "name": "Incoming updates",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPlayer"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            "srs_gnop::OpponentNumber()",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjetTxt"
                              },
                              "parameters": [
                                "Object",
                                "OpponentUpdateJSON",
                                "=",
                                "srs_gnop::OpponentUpdate()"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "\n/**\n * @namespace Gnop\n */\n\n/**\n * @typedef {Object} Gnop.Player\n * @property {string} sessionUuid\n * @property {string} state\n * @property {string} name\n * @property {number} number\n */\n\n/**\n * @typedef {Object} Gnop.Position\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\t\n */\n\n/**\n * @typedef {Object} Gnop.PlayerUpdate\n * @property {Gnop.Player} player\n * @property {Gnop.Position} position\n */\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst opponentUpdateJsonVar = vars.get(\"OpponentUpdateJSON\")\nconst playerVar = vars.get(\"Player\")\n\nconst incomingUpdateVar = vars.get(\"IncomingUpdate\")\nincomingUpdateVar.clearChildren()\n\n/** @type Gnop.PlayerUpdate */\nconst latestUpdate = JSON.parse(opponentUpdateJsonVar.getAsString())\nif (!latestUpdate) {\n    return\n}\n\nconst {\n    player,\n    position\n} = latestUpdate\n\nif (player.number !== playerVar.getAsNumber()) {\n    return\n}\n\nconst hpVar = vars.get('HP')\nhpVar.setNumber(player.hp)\n\nconst stateVar = incomingUpdateVar.getChild('State')\nconst xVar = incomingUpdateVar.getChild('X')\nconst dxVar = incomingUpdateVar.getChild('DX')\nconst yVar = incomingUpdateVar.getChild('Y')\nconst dyVar = incomingUpdateVar.getChild('DY')\nconst aVar = incomingUpdateVar.getChild('A')\nconst daVar = incomingUpdateVar.getChild('DA')\n\nstateVar.setString('pending')\nxVar.setNumber(position.x)\ndxVar.setNumber(position.dx)\nyVar.setNumber(position.y)\ndyVar.setNumber(position.dy)\naVar.setNumber(position.a)\ndaVar.setNumber(position.da)\n\n\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": false
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": false,
                  "name": "Outgoing updates",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_gnop::Paddle::IsPlayer"
                          },
                          "parameters": [
                            "Object",
                            "Behavior",
                            "srs_gnop::SelfNumber()",
                            ""
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_utils::Throttle"
                          },
                          "parameters": [
                            "",
                            "\"Paddle.handleUpdates.outgoing\"",
                            "20",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const { Gnop } = globalThis\nconst { client } = Gnop\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst hpVar = vars.get('HP')\n\nconst outgoingUpdateVar = vars.get(\"OutgoingUpdate\")\nconst stateVar = outgoingUpdateVar.getChild('State')\nconst xVar = outgoingUpdateVar.getChild('X')\nconst yVar = outgoingUpdateVar.getChild('Y')\nconst dxVar = outgoingUpdateVar.getChild('DX')\nconst dyVar = outgoingUpdateVar.getChild('DY')\nconst aVar = outgoingUpdateVar.getChild('A')\nconst daVar = outgoingUpdateVar.getChild('DA')\n\nstateVar.setString('pending')\nclient.sendPlayerUpdate({\n    player: {\n        hp: hpVar.getAsNumber()\n    },\n    position: {\n        x: xVar.getAsNumber(),\n        dx: dxVar.getAsNumber(),\n        y: yVar.getAsNumber(),\n        dy: dyVar.getAsNumber(),\n        a: aVar.getAsNumber(),\n        da: daVar.getAsNumber(),\n    }\n})\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": true
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handleCollision",
          "fullName": "handleCollision",
          "functionType": "Action",
          "name": "handleCollision",
          "private": false,
          "sentence": "_PARAM0_ handleCollision Ball=_PARAM3_ Butt=_PARAM5_ HitZone=_PARAM6_",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "Butt",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Butt",
                        "Ball",
                        "",
                        "",
                        "yes"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjetTxt"
                      },
                      "parameters": [
                        "Butt",
                        "HitState",
                        "=",
                        "\"none\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ChangeColor"
                          },
                          "parameters": [
                            "Butt",
                            "\"255;255;255\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "Butt",
                        "Ball",
                        "",
                        "",
                        "yes"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "VarObjetTxt"
                          },
                          "parameters": [
                            "Butt",
                            "HitState",
                            "=",
                            "\"none\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjetTxt"
                          },
                          "parameters": [
                            "Butt",
                            "HitState",
                            "=",
                            "\"ready\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Butt",
                        "HitState",
                        "=",
                        "\"ready\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::Collision"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "Ball",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjetTxt"
                          },
                          "parameters": [
                            "Butt",
                            "HitState",
                            "=",
                            "\"hit\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ChangeColor"
                              },
                              "parameters": [
                                "Butt",
                                "\"241;28;95\""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "srs_gnop::Paddle::hitButt"
                              },
                              "parameters": [
                                "Object",
                                "Behavior",
                                ""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "HitZone",
                    "Object"
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "HitZone",
                        "Ball",
                        "",
                        "",
                        "yes"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjetTxt"
                      },
                      "parameters": [
                        "HitZone",
                        "HitState",
                        "=",
                        "\"none\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ChangeColor"
                          },
                          "parameters": [
                            "HitZone",
                            "\"194;0;0\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CollisionNP"
                      },
                      "parameters": [
                        "HitZone",
                        "Ball",
                        "",
                        "",
                        "yes"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "VarObjetTxt"
                          },
                          "parameters": [
                            "HitZone",
                            "HitState",
                            "=",
                            "\"none\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjetTxt"
                          },
                          "parameters": [
                            "HitZone",
                            "HitState",
                            "=",
                            "\"ready\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ChangeColor"
                          },
                          "parameters": [
                            "HitZone",
                            "\"48;224;0\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "HitZone",
                        "HitState",
                        "=",
                        "\"ready\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::Collision"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "Ball",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjetTxt"
                              },
                              "parameters": [
                                "HitZone",
                                "HitState",
                                "=",
                                "\"hit\""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "DebugCollisionCount",
                                "+",
                                "1"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "HitLength",
                                "=",
                                "200 * Ball.BallPhysics2::Density()"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjet"
                              },
                              "parameters": [
                                "Object",
                                "AngleToBall",
                                "=",
                                "AngleBetweenPositions(Object.Physics2::MassCenterX(), Object.Physics2::MassCenterY(), Ball.BallPhysics2::MassCenterX(), Ball.BallPhysics2::MassCenterY())"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "Physics2::ApplyPolarForce"
                              },
                              "parameters": [
                                "Ball",
                                "BallPhysics2",
                                "Object.Variable(AngleToBall)",
                                "Object.Variable(HitLength)",
                                "Ball.BallPhysics2::MassCenterX()",
                                "Ball.BallPhysics2::MassCenterY()"
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        },
                        {
                          "disabled": true,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "inverted": false,
                                "value": "srs_utils::consoleLog"
                              },
                              "parameters": [
                                "",
                                "\"Collision: A=\" + ToString(round(Object.Variable(AngleToBall))) + \" L=\" + ToString(round(Object.Variable(HitLength)))",
                                ""
                              ],
                              "subInstructions": []
                            }
                          ],
                          "events": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Physics2",
              "longDescription": "",
              "name": "Physics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Ball",
              "longDescription": "",
              "name": "Ball",
              "optional": false,
              "supplementaryInformation": "",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "BallPhysics2",
              "longDescription": "",
              "name": "BallPhysics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Butt",
              "longDescription": "",
              "name": "Butt",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "HitZone",
              "longDescription": "",
              "name": "HitZone",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "hitButt",
          "fullName": "hitButt",
          "functionType": "Action",
          "name": "hitButt",
          "private": false,
          "sentence": "_PARAM0_ hitButt",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  },
                  "parameters": [
                    "Object",
                    "HP",
                    "-",
                    "1"
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Paddle",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": []
    },
    {
      "description": "",
      "fullName": "",
      "name": "Ball",
      "objectType": "",
      "eventsFunctions": [
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": true,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  },
                  "parameters": [
                    "Object",
                    "OutgoingUpdate.State",
                    "=",
                    "\"pending\""
                  ],
                  "subInstructions": []
                }
              ],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "private": false,
          "sentence": "",
          "events": [],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "handlePhysics",
          "fullName": "handlePhysics",
          "functionType": "Action",
          "name": "handlePhysics",
          "private": false,
          "sentence": "_PARAM0_ handlePhysics ",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Clamp to remove ball problems",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "VelocityMinX",
                        "=",
                        "0"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "VelocityMinY",
                        "=",
                        "0"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      },
                      "parameters": [
                        "Object",
                        "VelocityMax",
                        "=",
                        "2000"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityX"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "srs_utils::ClampAbs(Object.Physics2::LinearVelocityX(), Object.Variable(VelocityMinX), Object.Variable(VelocityMax))"
                      ],
                      "subInstructions": []
                    },
                    {
                      "type": {
                        "inverted": false,
                        "value": "Physics2::LinearVelocityY"
                      },
                      "parameters": [
                        "Object",
                        "Physics2",
                        "=",
                        "srs_utils::ClampAbs(Object.Physics2::LinearVelocityY(), Object.Variable(VelocityMinY), Object.Variable(VelocityMax))"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Queue updates ",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "OutgoingUpdate.State",
                        "=",
                        "\"pending\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.X",
                            "=",
                            "Object.X()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.DX",
                            "=",
                            "Object.Physics2::LinearVelocityX()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.Y",
                            "=",
                            "Object.Y()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.DY",
                            "=",
                            "Object.Physics2::LinearVelocityY()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.A",
                            "=",
                            "Object.Angle()"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          },
                          "parameters": [
                            "Object",
                            "OutgoingUpdate.DA",
                            "=",
                            "Object.Physics2::AngularVelocity()"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": false,
              "folded": false,
              "name": "Updates from Opponent",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Comment",
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "I look forward to seeing jittery de-sync problems",
                  "comment2": ""
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      },
                      "parameters": [
                        "Object",
                        "IncomingUpdate.State",
                        "=",
                        "\"pending\""
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [],
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "MettreXY"
                          },
                          "parameters": [
                            "Object",
                            "=",
                            "Object.Variable(IncomingUpdate.X)",
                            "=",
                            "Object.Variable(IncomingUpdate.Y)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::LinearVelocityX"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "=",
                            "Object.Variable(IncomingUpdate.DX)"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::LinearVelocityY"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "=",
                            "Object.Variable(IncomingUpdate.DY)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "SetAngle"
                          },
                          "parameters": [
                            "Object",
                            "=",
                            "Object.Variable(IncomingUpdate.A)"
                          ],
                          "subInstructions": []
                        },
                        {
                          "type": {
                            "inverted": false,
                            "value": "Physics2::AngularVelocity"
                          },
                          "parameters": [
                            "Object",
                            "Physics2",
                            "=",
                            "Object.Variable(IncomingUpdate.DA)"
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    },
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjetTxt"
                          },
                          "parameters": [
                            "Object",
                            "IncomingUpdate.State",
                            "=",
                            "\"received\""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "events": []
                    }
                  ]
                }
              ],
              "parameters": []
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Physics2",
              "longDescription": "",
              "name": "Physics2",
              "optional": false,
              "supplementaryInformation": "Physics2::Physics2Behavior",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "The network stuff",
          "fullName": "handleUpdates",
          "functionType": "Action",
          "name": "handleUpdates",
          "private": false,
          "sentence": "_PARAM0_ handleUpdates",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": false,
                    "value": "srs_gnop::IsJoined"
                  },
                  "parameters": [
                    "",
                    ""
                  ],
                  "subInstructions": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": false,
                  "name": "Incoming updates",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const { Gnop } = globalThis\nconst { client } = Gnop\n\n/**\n * @namespace Gnop\n */\n\n/**\n * @typedef {Object} Gnop.Position\n * @property {number} x\n * @property {number} y\n * @property {number} dx\n * @property {number} dy\t\n */\n\n/**\n * @typedef {Object} Gnop.BallUpdate\n * @property {Gnop.Position} position\n */\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst incomingUpdateVar = vars.get(\"IncomingUpdate\")\nincomingUpdateVar.clearChildren()\n\n/** @type Gnop.BallUpdate */\nconst latestUpdate = client.getBallUpdate()\nif (!latestUpdate) {\n    return\n}\n\nconst { position } = latestUpdate\n\nconst stateVar = incomingUpdateVar.getChild('State')\nconst xVar = incomingUpdateVar.getChild('X')\nconst dxVar = incomingUpdateVar.getChild('DX')\nconst yVar = incomingUpdateVar.getChild('Y')\nconst dyVar = incomingUpdateVar.getChild('DY')\nconst aVar = incomingUpdateVar.getChild('A')\nconst daVar = incomingUpdateVar.getChild('DA')\n\nstateVar.setString('pending')\nxVar.setNumber(position.x)\ndxVar.setNumber(position.dx)\nyVar.setNumber(position.y)\ndyVar.setNumber(position.dy)\naVar.setNumber(position.a)\ndaVar.setNumber(position.da)\n\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": false
                        }
                      ]
                    }
                  ],
                  "parameters": []
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "disabled": false,
                  "folded": false,
                  "name": "Outgoing updates",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "disabled": false,
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "inverted": false,
                            "value": "srs_utils::Throttle"
                          },
                          "parameters": [
                            "",
                            "\"Ball.handleUpdates.outgoing\"",
                            "100",
                            ""
                          ],
                          "subInstructions": []
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "disabled": false,
                          "folded": false,
                          "type": "BuiltinCommonInstructions::JsCode",
                          "inlineCode": "const { Gnop } = globalThis\nconst { client } = Gnop\n\nconst obj = objects[0]\nconst vars = obj.getVariables()\n\nconst outgoingUpdateVar = vars.get(\"OutgoingUpdate\")\nconst stateVar = outgoingUpdateVar.getChild('State')\nconst xVar = outgoingUpdateVar.getChild('X')\nconst dxVar = outgoingUpdateVar.getChild('DX')\nconst yVar = outgoingUpdateVar.getChild('Y')\nconst dyVar = outgoingUpdateVar.getChild('DY')\nconst aVar = outgoingUpdateVar.getChild('A')\nconst daVar = outgoingUpdateVar.getChild('DA')\n\n// if (Math.random() > 0.5) {\n//     console.log('fake packet loss')\n//     return\n// }\n\nstateVar.setString('pending')\nclient.sendBallUpdate({\n    x: xVar.getAsNumber(),\n    dx: dxVar.getAsNumber(),\n    y: yVar.getAsNumber(),\n    dy: dyVar.getAsNumber(),\n    a: aVar.getAsNumber(),\n    da: daVar.getAsNumber(),\n})\n",
                          "parameterObjects": "Object",
                          "useStrict": true,
                          "eventsSheetExpanded": false
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        },
        {
          "description": "",
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPostEvents",
          "private": false,
          "sentence": "",
          "events": [
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CenterX"
                      },
                      "parameters": [
                        "Object",
                        "<",
                        "0 - (2 * Object.Width())"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MettreX"
                      },
                      "parameters": [
                        "Object",
                        "=",
                        "0 + (0.5 * Object.Width())"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CenterX"
                      },
                      "parameters": [
                        "Object",
                        ">",
                        "CameraWidth(\"\", 1) + (2 * Object.Width())"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MettreX"
                      },
                      "parameters": [
                        "Object",
                        "=",
                        "CameraWidth(\"\", 1) - (0.5 * Object.Width())"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CenterY"
                      },
                      "parameters": [
                        "Object",
                        "<",
                        "0 - (2 * Object.Height())"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MettreY"
                      },
                      "parameters": [
                        "Object",
                        "=",
                        "0 + (0.5 * Object.Height())"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                },
                {
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "CenterY"
                      },
                      "parameters": [
                        "Object",
                        ">",
                        "CameraHeight(\"\", 1) + (2 * Object.Height())"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "inverted": false,
                        "value": "MettreY"
                      },
                      "parameters": [
                        "Object",
                        "=",
                        "CameraHeight(\"\", 1) - (0.5 * Object.Height())"
                      ],
                      "subInstructions": []
                    }
                  ],
                  "events": []
                }
              ]
            },
            {
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [],
              "events": []
            }
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "srs_gnop::Ball",
              "type": "behavior"
            }
          ],
          "objectGroups": []
        }
      ],
      "propertyDescriptors": []
    }
  ]
}